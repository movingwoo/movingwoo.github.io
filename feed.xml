<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="ko-KR"><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="https://movingwoo.com/feed.xml" rel="self" type="application/atom+xml" /><link href="https://movingwoo.com/" rel="alternate" type="text/html" hreflang="ko-KR" /><updated>2025-07-03T06:17:58+00:00</updated><id>https://movingwoo.com/feed.xml</id><title type="html">뭐라도 하겠지</title><subtitle>개발, C++, JAVA, Python, Shortcut, 백준</subtitle><entry><title type="html">12837번 가계부 (Hard)</title><link href="https://movingwoo.com/boj/python/2025/07/03/12837.html" rel="alternate" type="text/html" title="12837번 가계부 (Hard)" /><published>2025-07-03T06:00:00+00:00</published><updated>2025-07-03T06:00:00+00:00</updated><id>https://movingwoo.com/boj/python/2025/07/03/12837</id><content type="html" xml:base="https://movingwoo.com/boj/python/2025/07/03/12837.html"><![CDATA[<blockquote>
  <h4 id="이왜틀">이왜틀?</h4>
  <hr />
</blockquote>

<p><img src="/assets/images/posts/BOJ/Python/2025-07-03-12837/img01.webp" alt="img01" /></p>

<p><a href="https://www.acmicpc.net/problem/12837">12837번 가계부 (Hard) - 백준</a></p>

<p>이왜틀 마지막 골드 문제<br />
솔직히 이건 소스 볼 필요도 없다.<br />
Hard라는건 Easy도 있다는 말이고<br />
아마 과거의 내가 Easy를 풀고 소스 그대로 Hard에 집어넣어서 시간초과 났을 것이다.</p>

<blockquote>
  <h4 id="설계">설계</h4>
  <hr />
</blockquote>

<p>대충 구간합 구하는데 값 변경이 필요함 == <span style="color: orange;"><strong>세그먼트 트리</strong></span></p>

<blockquote>
  <h4 id="구현">구현</h4>
  <hr />
</blockquote>

<h5 id="1-세그먼트-트리-구현">1. 세그먼트 트리 구현</h5>

<p>update와 query로 구성된 정석적인 세그먼트 트리 클래스를 구현한다.<br />
값 갱신이 아니라 <span style="color: orange;"><strong>숫자를 합</strong></span>하는 것에 주의</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">SegmentTree</span><span class="p">:</span>
    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="n">self</span><span class="p">,</span> <span class="n">n</span><span class="p">):</span>
        <span class="n">self</span><span class="p">.</span><span class="n">n</span> <span class="o">=</span> <span class="n">n</span>
        <span class="n">self</span><span class="p">.</span><span class="n">size</span> <span class="o">=</span> <span class="mi">1</span> 

        <span class="k">while</span> <span class="n">self</span><span class="p">.</span><span class="n">size</span> <span class="o">&lt;</span> <span class="n">self</span><span class="p">.</span><span class="n">n</span><span class="p">:</span>
            <span class="n">self</span><span class="p">.</span><span class="n">size</span> <span class="o">*=</span> <span class="mi">2</span>

        <span class="n">self</span><span class="p">.</span><span class="n">tree</span> <span class="o">=</span> <span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">*</span> <span class="p">(</span><span class="mi">2</span> <span class="o">*</span> <span class="n">self</span><span class="p">.</span><span class="n">size</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">update</span><span class="p">(</span><span class="n">self</span><span class="p">,</span> <span class="n">idx</span><span class="p">,</span> <span class="n">val</span><span class="p">):</span>
        <span class="n">idx</span> <span class="o">+=</span> <span class="n">self</span><span class="p">.</span><span class="n">size</span>
        <span class="c1"># 갱신이 아니라 합치기
</span>        <span class="n">self</span><span class="p">.</span><span class="n">tree</span><span class="p">[</span><span class="n">idx</span><span class="p">]</span> <span class="o">+=</span> <span class="n">val</span>

        <span class="k">while</span> <span class="n">idx</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">:</span>
            <span class="n">idx</span> <span class="o">//=</span> <span class="mi">2</span> 
            <span class="n">self</span><span class="p">.</span><span class="n">tree</span><span class="p">[</span><span class="n">idx</span><span class="p">]</span> <span class="o">=</span> <span class="n">self</span><span class="p">.</span><span class="n">tree</span><span class="p">[</span><span class="n">idx</span> <span class="o">*</span> <span class="mi">2</span><span class="p">]</span> <span class="o">+</span> <span class="n">self</span><span class="p">.</span><span class="n">tree</span><span class="p">[</span><span class="n">idx</span> <span class="o">*</span> <span class="mi">2</span> <span class="o">+</span> <span class="mi">1</span><span class="p">]</span>
            
    <span class="k">def</span> <span class="nf">query</span><span class="p">(</span><span class="n">self</span><span class="p">,</span> <span class="n">l</span><span class="p">,</span> <span class="n">r</span><span class="p">):</span>
        <span class="n">l</span> <span class="o">+=</span> <span class="n">self</span><span class="p">.</span><span class="n">size</span>
        <span class="n">r</span> <span class="o">+=</span> <span class="n">self</span><span class="p">.</span><span class="n">size</span>
        <span class="n">result</span> <span class="o">=</span> <span class="mi">0</span>

        <span class="k">while</span> <span class="n">l</span> <span class="o">&lt;=</span> <span class="n">r</span><span class="p">:</span>
            <span class="k">if</span> <span class="n">l</span> <span class="o">%</span> <span class="mi">2</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
                <span class="n">result</span> <span class="o">+=</span> <span class="n">self</span><span class="p">.</span><span class="n">tree</span><span class="p">[</span><span class="n">l</span><span class="p">]</span>
                <span class="n">l</span> <span class="o">+=</span> <span class="mi">1</span>
            <span class="k">if</span> <span class="n">r</span> <span class="o">%</span> <span class="mi">2</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
                <span class="n">result</span> <span class="o">+=</span> <span class="n">self</span><span class="p">.</span><span class="n">tree</span><span class="p">[</span><span class="n">r</span><span class="p">]</span>
                <span class="n">r</span> <span class="o">-=</span> <span class="mi">1</span>

            <span class="n">l</span> <span class="o">//=</span> <span class="mi">2</span>
            <span class="n">r</span> <span class="o">//=</span> <span class="mi">2</span>

        <span class="k">return</span> <span class="n">result</span>
</code></pre></div></div>

<h5 id="2-쿼리-수행">2. 쿼리 수행</h5>

<p>입력받아 쿼리를 수행한다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">N</span><span class="p">,</span> <span class="n">Q</span> <span class="o">=</span> <span class="nf">map</span><span class="p">(</span><span class="nb">int</span><span class="p">,</span> <span class="nf">input</span><span class="p">().</span><span class="nf">split</span><span class="p">())</span>
<span class="n">tree</span> <span class="o">=</span> <span class="nc">SegmentTree</span><span class="p">(</span><span class="n">N</span><span class="p">)</span>

<span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="n">Q</span><span class="p">):</span>
    <span class="n">q</span><span class="p">,</span> <span class="n">p</span><span class="p">,</span> <span class="n">x</span> <span class="o">=</span> <span class="nf">map</span><span class="p">(</span><span class="nb">int</span><span class="p">,</span> <span class="nf">input</span><span class="p">().</span><span class="nf">split</span><span class="p">())</span>

    <span class="c1"># 1은 업데이트 2는 구간합
</span>    <span class="k">if</span> <span class="n">q</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
        <span class="n">tree</span><span class="p">.</span><span class="nf">update</span><span class="p">(</span><span class="n">p</span> <span class="o">-</span> <span class="mi">1</span><span class="p">,</span> <span class="n">x</span><span class="p">)</span>
    <span class="k">elif</span> <span class="n">q</span> <span class="o">==</span> <span class="mi">2</span><span class="p">:</span>
        <span class="nf">print</span><span class="p">(</span><span class="n">tree</span><span class="p">.</span><span class="nf">query</span><span class="p">(</span><span class="n">p</span> <span class="o">-</span> <span class="mi">1</span><span class="p">,</span> <span class="n">x</span> <span class="o">-</span> <span class="mi">1</span><span class="p">))</span>
</code></pre></div></div>

<blockquote>
  <h4 id="채점">채점</h4>
  <hr />
</blockquote>

<p><img src="/assets/images/posts/BOJ/Python/2025-07-03-12837/img02.webp" alt="img02" /></p>

<blockquote>
  <h4 id="반성">반성</h4>
  <hr />
</blockquote>

<p>골드도 끝났고 플래티넘 문제 2개가 남았다.<br />
이건 각오하고 접근해야지…</p>

<blockquote>
  <h4 id="코드-확인">코드 확인</h4>
  <hr />
</blockquote>

<p><a href="https://raw.githubusercontent.com/movingwoo/movingwoo-snippets/refs/heads/main/BOJ/Python/2025-07-03-12837.py">Link to GitHub</a></p>]]></content><author><name>movingwoo</name></author><category term="BOJ/Python/" /><category term="PYTHON" /><category term="알고리즘" /><category term="백준" /><category term="12837" /><category term="가계부 (Hard)" /><category term="세그먼트트리" /><summary type="html"><![CDATA[백준 12837번 가계부 (Hard) PYTHON 문제풀이]]></summary></entry><entry><title type="html">16455번 K번째 수 찾는 함수</title><link href="https://movingwoo.com/boj/python/2025/07/03/16455.html" rel="alternate" type="text/html" title="16455번 K번째 수 찾는 함수" /><published>2025-07-03T04:00:00+00:00</published><updated>2025-07-03T04:00:00+00:00</updated><id>https://movingwoo.com/boj/python/2025/07/03/16455</id><content type="html" xml:base="https://movingwoo.com/boj/python/2025/07/03/16455.html"><![CDATA[<blockquote>
  <h4 id="이왜틀">이왜틀?</h4>
  <hr />
</blockquote>

<p><img src="/assets/images/posts/BOJ/Python/2025-07-03-16455/img01.webp" alt="img01" /></p>

<p><a href="https://www.acmicpc.net/problem/16455">16455번 K번째 수 찾는 함수 - 백준</a></p>

<p>함수를 직접 구현하는 문제.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span> <span class="n">n</span><span class="o">=</span><span class="n">a</span><span class="o">.</span><span class="na">length</span><span class="o">;</span>
<span class="kt">int</span> <span class="n">start</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
<span class="kt">int</span> <span class="n">end</span><span class="o">=</span><span class="n">n</span><span class="o">-</span><span class="mi">1</span><span class="o">;</span>
<span class="n">k</span><span class="o">-=</span><span class="mi">1</span><span class="o">;</span>

<span class="k">while</span><span class="o">(</span><span class="n">start</span><span class="o">&lt;</span><span class="n">end</span><span class="o">)</span> <span class="o">{</span>
    <span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="n">start</span><span class="o">;</span>
    <span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="n">end</span><span class="o">;</span>
    <span class="kt">int</span> <span class="n">mid</span><span class="o">=</span><span class="n">a</span><span class="o">[(</span><span class="n">i</span><span class="o">+</span><span class="n">j</span><span class="o">)/</span><span class="mi">2</span><span class="o">];</span>
    
    <span class="k">while</span><span class="o">(</span><span class="n">i</span><span class="o">&lt;</span><span class="n">j</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">if</span><span class="o">(</span><span class="n">a</span><span class="o">[</span><span class="n">i</span><span class="o">]&gt;=</span><span class="n">mid</span><span class="o">)</span> <span class="o">{</span>
            <span class="kt">int</span> <span class="n">tmp</span> <span class="o">=</span> <span class="n">a</span><span class="o">[</span><span class="n">j</span><span class="o">];</span>
            <span class="n">a</span><span class="o">[</span><span class="n">j</span><span class="o">]</span> <span class="o">=</span> <span class="n">a</span><span class="o">[</span><span class="n">i</span><span class="o">];</span>
            <span class="n">a</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="n">tmp</span><span class="o">;</span>
            <span class="n">j</span><span class="o">--;</span>
        <span class="o">}</span><span class="k">else</span> <span class="o">{</span>
            <span class="n">i</span><span class="o">++;</span>
        <span class="o">}</span>
    <span class="o">}</span>
    <span class="k">if</span><span class="o">(</span><span class="n">a</span><span class="o">[</span><span class="n">i</span><span class="o">]&gt;</span><span class="n">mid</span><span class="o">)</span> <span class="n">i</span><span class="o">--;</span>
    <span class="k">if</span><span class="o">(</span><span class="n">k</span><span class="o">&lt;=</span><span class="n">i</span><span class="o">)</span> <span class="n">end</span> <span class="o">=</span> <span class="n">i</span><span class="o">;</span>
    <span class="k">else</span> <span class="n">start</span> <span class="o">=</span> <span class="n">i</span> <span class="o">+</span> <span class="mi">1</span><span class="o">;</span>
<span class="o">}</span>
<span class="k">return</span> <span class="n">a</span><span class="o">[</span><span class="n">k</span><span class="o">];</span>
</code></pre></div></div>

<p><span style="color: orange;"><strong>퀵셀렉트</strong></span>를 했는데 시간초과가 났다.<br />
조금만 수정하면 통과할 수 있다.</p>

<blockquote>
  <h4 id="설계">설계</h4>
  <hr />
</blockquote>

<p>java 코드에서 pivot을 중앙 값으로 설정했다.<br />
그런데 찾는 값이 한쪽으로 치우치면 시간 복잡도가 O(N^2) 까지 갈 수 있다.</p>

<p>만약 <span style="color: orange;"><strong>pivot을 무작위 난수</strong></span>를 생성해 선택하면 한쪽으로 치우치는걸 다소 방지할 수 있다.<br />
그리고 수열의 요소가 서로 다른 값임이 보장되지 않는다.<br />
이 부분에 대한 로직도 추가한다.</p>

<blockquote>
  <h4 id="구현">구현</h4>
  <hr />
</blockquote>

<p>pivot은 start와 end 사이 랜덤으로 설정한다.<br />
중복값인 경우 정확한 판단을 위해 pivot을 기준으로 <span style="color: orange;"><strong>3분할</strong></span>한다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">kth</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">k</span><span class="p">):</span>
    <span class="kn">import</span> <span class="n">random</span>

    <span class="n">n</span> <span class="o">=</span> <span class="nf">len</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>
    <span class="n">start</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="n">end</span> <span class="o">=</span> <span class="n">n</span> <span class="o">-</span> <span class="mi">1</span>
    <span class="n">k</span> <span class="o">-=</span> <span class="mi">1</span>

    <span class="k">while</span> <span class="n">start</span> <span class="o">&lt;=</span> <span class="n">end</span><span class="p">:</span> 
        <span class="c1"># 3분할
</span>        <span class="n">i</span> <span class="o">=</span> <span class="n">start</span>
        <span class="n">j</span> <span class="o">=</span> <span class="n">start</span>
        <span class="n">l</span> <span class="o">=</span> <span class="n">end</span>

        <span class="c1"># 무작위 값
</span>        <span class="n">pivot</span> <span class="o">=</span> <span class="n">a</span><span class="p">[</span><span class="n">random</span><span class="p">.</span><span class="nf">randint</span><span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="n">l</span><span class="p">)]</span>

        <span class="k">while</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">l</span><span class="p">:</span>
            <span class="c1"># pivot보다 작을때
</span>            <span class="k">if</span> <span class="n">a</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&lt;</span> <span class="n">pivot</span><span class="p">:</span>
                <span class="n">a</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="n">a</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="n">a</span><span class="p">[</span><span class="n">j</span><span class="p">],</span> <span class="n">a</span><span class="p">[</span><span class="n">i</span><span class="p">]</span>
                <span class="n">i</span> <span class="o">+=</span> <span class="mi">1</span>
                <span class="n">j</span> <span class="o">+=</span> <span class="mi">1</span>
            <span class="c1"># pivot보다 클떄
</span>            <span class="k">elif</span> <span class="n">a</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&gt;</span> <span class="n">pivot</span><span class="p">:</span>
                <span class="n">a</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="n">a</span><span class="p">[</span><span class="n">l</span><span class="p">]</span> <span class="o">=</span> <span class="n">a</span><span class="p">[</span><span class="n">l</span><span class="p">],</span> <span class="n">a</span><span class="p">[</span><span class="n">i</span><span class="p">]</span>
                <span class="n">l</span> <span class="o">-=</span> <span class="mi">1</span>
            <span class="k">else</span><span class="p">:</span>
                <span class="n">i</span> <span class="o">+=</span> <span class="mi">1</span>
        
        
        <span class="k">if</span> <span class="n">k</span> <span class="o">&lt;</span> <span class="n">j</span><span class="p">:</span>
            <span class="n">end</span> <span class="o">=</span> <span class="n">j</span> <span class="o">-</span> <span class="mi">1</span>
        <span class="k">elif</span> <span class="n">k</span> <span class="o">&gt;</span> <span class="n">l</span><span class="p">:</span>
            <span class="n">start</span> <span class="o">=</span> <span class="n">l</span> <span class="o">+</span> <span class="mi">1</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="k">return</span> <span class="n">pivot</span>
</code></pre></div></div>

<blockquote>
  <h4 id="채점">채점</h4>
  <hr />
</blockquote>

<p><img src="/assets/images/posts/BOJ/Python/2025-07-03-16455/img02.webp" alt="img02" /></p>

<blockquote>
  <h4 id="반성">반성</h4>
  <hr />
</blockquote>

<p>좀 빡쎘다…<br />
옛날 코드 잘 해놔서 그대로 포팅하면 쉽게 날먹할 줄 알았는데</p>

<blockquote>
  <h4 id="코드-확인">코드 확인</h4>
  <hr />
</blockquote>

<p><a href="https://raw.githubusercontent.com/movingwoo/movingwoo-snippets/refs/heads/main/BOJ/Python/2025-07-03-16455.py">Link to GitHub</a></p>]]></content><author><name>movingwoo</name></author><category term="BOJ/Python/" /><category term="PYTHON" /><category term="알고리즘" /><category term="백준" /><category term="16455" /><category term="K번째 수 찾는 함수" /><category term="퀵셀렉트" /><summary type="html"><![CDATA[백준 16455번 K번째 수 찾는 함수 PYTHON 문제풀이]]></summary></entry><entry><title type="html">2252번 줄 세우기</title><link href="https://movingwoo.com/boj/python/2025/07/03/2252.html" rel="alternate" type="text/html" title="2252번 줄 세우기" /><published>2025-07-03T02:00:00+00:00</published><updated>2025-07-03T02:00:00+00:00</updated><id>https://movingwoo.com/boj/python/2025/07/03/2252</id><content type="html" xml:base="https://movingwoo.com/boj/python/2025/07/03/2252.html"><![CDATA[<blockquote>
  <h4 id="이왜틀">이왜틀?</h4>
  <hr />
</blockquote>

<p><img src="/assets/images/posts/BOJ/Python/2025-07-03-2252/img01.webp" alt="img01" /></p>

<p><a href="https://www.acmicpc.net/problem/2252">2252번 줄 세우기 - 백준</a></p>

<p>런타임 에러가 났고 코드가 너무 길어서 안가져오기로 했다.<br />
대충 리스트에 넣고 빼면서 시뮬레이션 하는 내용이다.</p>

<blockquote>
  <h4 id="설계">설계</h4>
  <hr />
</blockquote>

<p><span style="color: orange;"><strong>위상정렬</strong></span>을 한다.</p>

<blockquote>
  <h4 id="구현">구현</h4>
  <hr />
</blockquote>

<p>대충 그래프 그리고, 진입차수가 0인 노드를 큐에 모으고, 연결된 노드 진입차수 감소시킨다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="n">collections</span> <span class="kn">import</span> <span class="n">deque</span>

<span class="n">N</span><span class="p">,</span> <span class="n">M</span> <span class="o">=</span> <span class="nf">map</span><span class="p">(</span><span class="nb">int</span><span class="p">,</span> <span class="nf">input</span><span class="p">().</span><span class="nf">split</span><span class="p">())</span>

<span class="c1"># 그래프, 간선, 진입차수, 큐
</span><span class="n">graph</span> <span class="o">=</span> <span class="p">[[]</span> <span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="n">N</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)]</span>
<span class="n">edges</span> <span class="o">=</span> <span class="p">[</span><span class="nf">tuple</span><span class="p">(</span><span class="nf">map</span><span class="p">(</span><span class="nb">int</span><span class="p">,</span> <span class="nf">input</span><span class="p">().</span><span class="nf">split</span><span class="p">()))</span> <span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="n">M</span><span class="p">)]</span>
<span class="n">degree</span> <span class="o">=</span> <span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">*</span> <span class="p">(</span><span class="n">N</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span>
<span class="n">que</span> <span class="o">=</span> <span class="nf">deque</span><span class="p">()</span>
<span class="n">result</span> <span class="o">=</span> <span class="p">[]</span>

<span class="k">for</span> <span class="n">A</span><span class="p">,</span> <span class="n">B</span> <span class="ow">in</span> <span class="n">edges</span><span class="p">:</span>
    <span class="n">graph</span><span class="p">[</span><span class="n">A</span><span class="p">].</span><span class="nf">append</span><span class="p">(</span><span class="n">B</span><span class="p">)</span>
    <span class="n">degree</span><span class="p">[</span><span class="n">B</span><span class="p">]</span> <span class="o">+=</span> <span class="mi">1</span>

<span class="c1"># 진입차수 0
</span><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="n">N</span> <span class="o">+</span> <span class="mi">1</span><span class="p">):</span>
    <span class="k">if</span> <span class="n">degree</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
        <span class="n">que</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>

<span class="k">while</span> <span class="n">que</span><span class="p">:</span>
    <span class="n">now</span> <span class="o">=</span> <span class="n">que</span><span class="p">.</span><span class="nf">popleft</span><span class="p">()</span>
    <span class="n">result</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">now</span><span class="p">)</span>

    <span class="c1"># 연결된 노드 진입차수 감소
</span>    <span class="k">for</span> <span class="n">node</span> <span class="ow">in</span> <span class="n">graph</span><span class="p">[</span><span class="n">now</span><span class="p">]:</span>
        <span class="n">degree</span><span class="p">[</span><span class="n">node</span><span class="p">]</span> <span class="o">-=</span> <span class="mi">1</span>
        <span class="k">if</span> <span class="n">degree</span><span class="p">[</span><span class="n">node</span><span class="p">]</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
            <span class="n">que</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">node</span><span class="p">)</span>

<span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s"> </span><span class="sh">"</span><span class="p">.</span><span class="nf">join</span><span class="p">(</span><span class="nf">map</span><span class="p">(</span><span class="nb">str</span><span class="p">,</span> <span class="n">result</span><span class="p">)))</span>
</code></pre></div></div>

<blockquote>
  <h4 id="채점">채점</h4>
  <hr />
</blockquote>

<p><img src="/assets/images/posts/BOJ/Python/2025-07-03-2252/img02.webp" alt="img02" /></p>

<blockquote>
  <h4 id="반성">반성</h4>
  <hr />
</blockquote>

<p>뭐지 위상정렬 왜 재밌지?<br />
그래프 그리는 것 부터 짜증나야하는데<br />
파이썬 코드가 예뻐서 그런 것 같다.</p>

<blockquote>
  <h4 id="코드-확인">코드 확인</h4>
  <hr />
</blockquote>

<p><a href="https://raw.githubusercontent.com/movingwoo/movingwoo-snippets/refs/heads/main/BOJ/Python/2025-07-03-2252.py">Link to GitHub</a></p>]]></content><author><name>movingwoo</name></author><category term="BOJ/Python/" /><category term="PYTHON" /><category term="알고리즘" /><category term="백준" /><category term="2252" /><category term="줄 세우기" /><category term="위상정렬" /><summary type="html"><![CDATA[백준 2252번 줄 세우기 PYTHON 문제풀이]]></summary></entry><entry><title type="html">1669번 멍멍이 쓰다듬기</title><link href="https://movingwoo.com/boj/python/2025/07/03/1669.html" rel="alternate" type="text/html" title="1669번 멍멍이 쓰다듬기" /><published>2025-07-03T00:00:00+00:00</published><updated>2025-07-03T00:00:00+00:00</updated><id>https://movingwoo.com/boj/python/2025/07/03/1669</id><content type="html" xml:base="https://movingwoo.com/boj/python/2025/07/03/1669.html"><![CDATA[<blockquote>
  <h4 id="이왜틀">이왜틀?</h4>
  <hr />
</blockquote>

<p><img src="/assets/images/posts/BOJ/Python/2025-07-03-1669/img01.webp" alt="img01" /></p>

<p><a href="https://www.acmicpc.net/problem/1669">1669번 멍멍이 쓰다듬기 - 백준</a></p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">Scanner</span> <span class="n">sc</span><span class="o">=</span><span class="k">new</span> <span class="nc">Scanner</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
<span class="kt">long</span> <span class="n">num</span><span class="o">=(</span><span class="n">sc</span><span class="o">.</span><span class="na">nextLong</span><span class="o">()-</span><span class="n">sc</span><span class="o">.</span><span class="na">nextLong</span><span class="o">())*-</span><span class="mi">1</span><span class="o">;</span>
    <span class="kt">long</span> <span class="n">distance</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span>
    <span class="kt">int</span> <span class="n">answer</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span>
    <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">1</span><span class="o">;;)</span> <span class="o">{</span>
        <span class="k">if</span><span class="o">(</span><span class="n">num</span><span class="o">&lt;</span><span class="n">distance</span><span class="o">+</span><span class="n">j</span><span class="o">)</span> <span class="k">break</span><span class="o">;</span>
        <span class="k">else</span> <span class="o">{</span>					
            <span class="n">distance</span><span class="o">+=</span><span class="n">j</span><span class="o">;</span>
            <span class="n">answer</span><span class="o">++;</span>
            <span class="k">if</span><span class="o">(</span><span class="n">answer</span><span class="o">%</span><span class="mi">2</span><span class="o">!=</span><span class="mi">0</span><span class="o">)</span> <span class="n">j</span><span class="o">++;</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">answer</span><span class="o">);</span>
</code></pre></div></div>

<p>얼추 맞는데 한가지 조건을 더 고려해야한다.<br />
키를 0cm 조절할 수도 있다.</p>

<blockquote>
  <h4 id="설계">설계</h4>
  <hr />
</blockquote>

<p>키를 1cm 단위로 조절할 수 있는데, 첫 날과 마지막 날은 반드시 1cm다.<br />
전체 수열은 <span style="color: orange;"><strong>1, 2, 3, 2, 1</strong></span> 형태가 될거다.<br />
수열의 가장 높은 값을 k로 두면 <span style="color: orange;"><strong>수열의 합은 k^2, 길이는 2 * k - 1</strong></span>이다.</p>

<p>0cm 조절도 가능하니 <span style="color: orange;"><strong>1, 2, 3, 3, 2, 1</strong></span> 형태의 수열도 가능하다.<br />
이런 경우 <span style="color: orange;"><strong>합은 k * (k + 1) 이며 길이는 2 * k</strong></span></p>

<blockquote>
  <h4 id="구현">구현</h4>
  <hr />
</blockquote>

<p>위 공식을 적용한다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">X</span><span class="p">,</span> <span class="n">Y</span> <span class="o">=</span> <span class="nf">map</span><span class="p">(</span><span class="nb">int</span><span class="p">,</span> <span class="nf">input</span><span class="p">().</span><span class="nf">split</span><span class="p">())</span>
<span class="n">sub</span> <span class="o">=</span> <span class="n">Y</span> <span class="o">-</span> <span class="n">X</span>
<span class="n">k</span> <span class="o">=</span> <span class="mi">0</span>
<span class="n">result</span> <span class="o">=</span> <span class="mi">0</span>

<span class="k">while</span> <span class="n">sub</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">:</span>

    <span class="k">if</span> <span class="n">k</span> <span class="o">*</span> <span class="n">k</span> <span class="o">&gt;=</span> <span class="n">sub</span><span class="p">:</span>
        <span class="n">result</span> <span class="o">=</span> <span class="mi">2</span> <span class="o">*</span> <span class="n">k</span> <span class="o">-</span> <span class="mi">1</span>
        <span class="k">break</span>

    <span class="k">elif</span> <span class="n">k</span> <span class="o">*</span> <span class="p">(</span><span class="n">k</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> <span class="o">&gt;=</span> <span class="n">sub</span><span class="p">:</span>
        <span class="n">result</span> <span class="o">=</span> <span class="mi">2</span> <span class="o">*</span> <span class="n">k</span>
        <span class="k">break</span>

    <span class="n">k</span> <span class="o">+=</span> <span class="mi">1</span>

<span class="nf">print</span><span class="p">(</span><span class="n">result</span><span class="p">)</span>
</code></pre></div></div>

<blockquote>
  <h4 id="채점">채점</h4>
  <hr />
</blockquote>

<p><img src="/assets/images/posts/BOJ/Python/2025-07-03-1669/img02.webp" alt="img02" /></p>

<blockquote>
  <h4 id="반성">반성</h4>
  <hr />
</blockquote>

<p>과거 자바코드 변수명이 의아해서 찾아보니 1011번 문제가 이 문제와 흡사하다.</p>

<p><a href="https://www.acmicpc.net/problem/1011">1011번 Fly me to the Alpha Centauri - 백준</a></p>

<p>이 문제는 6년 전에 유사 코드로 통과한 기록이 있다.<br />
아마 비슷한 문제라서 코드를 살짝 고쳐서 집어넣었다가 틀리고 그대로 도망간 것으로 추측된다.</p>

<blockquote>
  <h4 id="코드-확인">코드 확인</h4>
  <hr />
</blockquote>

<p><a href="https://raw.githubusercontent.com/movingwoo/movingwoo-snippets/refs/heads/main/BOJ/Python/2025-07-03-1669.py">Link to GitHub</a></p>]]></content><author><name>movingwoo</name></author><category term="BOJ/Python/" /><category term="PYTHON" /><category term="알고리즘" /><category term="백준" /><category term="1669" /><category term="멍멍이 쓰다듬기" /><category term="수학" /><summary type="html"><![CDATA[백준 1669번 멍멍이 쓰다듬기 PYTHON 문제풀이]]></summary></entry><entry><title type="html">2493번 탑</title><link href="https://movingwoo.com/boj/python/2025/07/02/2493.html" rel="alternate" type="text/html" title="2493번 탑" /><published>2025-07-02T07:00:00+00:00</published><updated>2025-07-02T07:00:00+00:00</updated><id>https://movingwoo.com/boj/python/2025/07/02/2493</id><content type="html" xml:base="https://movingwoo.com/boj/python/2025/07/02/2493.html"><![CDATA[<blockquote>
  <h4 id="이왜틀">이왜틀?</h4>
  <hr />
</blockquote>

<p><img src="/assets/images/posts/BOJ/Python/2025-07-02-2493/img01.webp" alt="img01" /></p>

<p><a href="https://www.acmicpc.net/problem/2493">2493번 탑 - 백준</a></p>

<p>빠른 문제 번호… 제법 낮은 정답률…<br />
어설픈 코드는 감히 통과하지 못할 문제다.</p>

<p>출력초과 받은 코드 말고 틀린 코드를 보자.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span> <span class="n">n</span><span class="o">=</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
<span class="nc">StringTokenizer</span> <span class="n">st</span><span class="o">=</span><span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">(),</span><span class="s">" "</span><span class="o">);</span>

<span class="kt">int</span><span class="o">[]</span> <span class="n">art</span><span class="o">=</span><span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">n</span><span class="o">+</span><span class="mi">1</span><span class="o">];</span>
<span class="kt">boolean</span><span class="o">[]</span> <span class="n">arr</span><span class="o">=</span><span class="k">new</span> <span class="kt">boolean</span><span class="o">[</span><span class="n">n</span><span class="o">+</span><span class="mi">1</span><span class="o">];</span>

<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="n">n</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span> <span class="n">art</span><span class="o">[</span><span class="n">i</span><span class="o">]=</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
<span class="kt">int</span> <span class="n">m</span><span class="o">=</span><span class="n">art</span><span class="o">[</span><span class="n">n</span><span class="o">];</span>
<span class="kt">int</span> <span class="n">t</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>

<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="n">n</span><span class="o">;</span><span class="n">i</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">--){</span>
    <span class="k">if</span><span class="o">(</span><span class="n">art</span><span class="o">[</span><span class="n">i</span><span class="o">]&gt;=</span><span class="n">m</span><span class="o">){</span>
        <span class="n">arr</span><span class="o">[</span><span class="n">i</span><span class="o">]=</span><span class="kc">true</span><span class="o">;</span>
        <span class="n">m</span><span class="o">=</span><span class="n">art</span><span class="o">[</span><span class="n">i</span><span class="o">];</span>
    <span class="o">}</span>
<span class="o">}</span>

<span class="nc">StringBuilder</span> <span class="n">sb</span><span class="o">=</span><span class="k">new</span> <span class="nc">StringBuilder</span><span class="o">();</span>

<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="n">n</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
    <span class="n">art</span><span class="o">[</span><span class="n">i</span><span class="o">]=</span><span class="n">t</span><span class="o">;</span>
    <span class="k">if</span><span class="o">(</span><span class="n">arr</span><span class="o">[</span><span class="n">i</span><span class="o">]){</span>
        <span class="n">t</span><span class="o">=</span><span class="n">i</span><span class="o">;</span>
    <span class="o">}</span>
    <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">art</span><span class="o">[</span><span class="n">i</span><span class="o">]+</span><span class="s">" "</span><span class="o">);</span>
<span class="o">}</span>
<span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">sb</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
</code></pre></div></div>

<p>문제에서 스택쓰라는데 왜 안썼지</p>

<blockquote>
  <h4 id="설계">설계</h4>
  <hr />
</blockquote>

<p>스택에 손도 안 댄 과거의 내가 괘씸해서 <span style="color: orange;"><strong>스택</strong></span>으로 푼다.<br />
왼쩍에서 오른쪽으로 탐색하며 레이저 수신 가능 여부를 판단한다.</p>

<blockquote>
  <h4 id="구현">구현</h4>
  <hr />
</blockquote>

<p>파이썬은 <span style="color: orange;"><strong>리스트</strong></span>가 pop까지 지원해서 스택 역할을 할 수 있다.<br />
append와 pop을 사용한다.</p>

<p>왼쪽부터 탐색하며 <span style="color: orange;"><strong>수신가능한 탑을 제외하고 pop</strong></span> 한다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">N</span> <span class="o">=</span> <span class="nf">int</span><span class="p">(</span><span class="nf">input</span><span class="p">())</span>

<span class="n">towers</span> <span class="o">=</span> <span class="nf">list</span><span class="p">(</span><span class="nf">map</span><span class="p">(</span><span class="nb">int</span><span class="p">,</span> <span class="nf">input</span><span class="p">().</span><span class="nf">split</span><span class="p">()))</span>
<span class="n">stack</span> <span class="o">=</span> <span class="p">[]</span> <span class="c1"># 타워 담을 스택
</span><span class="n">result</span> <span class="o">=</span> <span class="p">[]</span> <span class="c1"># 결과 출력용
</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="n">N</span><span class="p">):</span>
    <span class="c1"># 스택 타워가 현재 타워보다 낮으면 수신 못해서 의미 없음
</span>    <span class="k">while</span> <span class="n">stack</span> <span class="ow">and</span> <span class="n">stack</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span> <span class="o">&lt;</span> <span class="n">towers</span><span class="p">[</span><span class="n">i</span><span class="p">]:</span>
        <span class="n">stack</span><span class="p">.</span><span class="nf">pop</span><span class="p">()</span>

    <span class="k">if</span> <span class="ow">not</span> <span class="n">stack</span><span class="p">:</span>
        <span class="n">result</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="c1"># 수신 가능함
</span>        <span class="n">result</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">stack</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span>

    <span class="n">stack</span><span class="p">.</span><span class="nf">append</span><span class="p">((</span><span class="n">i</span><span class="p">,</span> <span class="n">towers</span><span class="p">[</span><span class="n">i</span><span class="p">]))</span>

<span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s"> </span><span class="sh">"</span><span class="p">.</span><span class="nf">join</span><span class="p">(</span><span class="nf">map</span><span class="p">(</span><span class="nb">str</span><span class="p">,</span> <span class="n">result</span><span class="p">)))</span>
</code></pre></div></div>

<blockquote>
  <h4 id="채점">채점</h4>
  <hr />
</blockquote>

<p><img src="/assets/images/posts/BOJ/Python/2025-07-02-2493/img02.webp" alt="img02" /></p>

<blockquote>
  <h4 id="반성">반성</h4>
  <hr />
</blockquote>

<p>처음에 파이썬 스택은 어디있지? 컬렉션을 import 해야하나? 하고 찾다가 없다고 해서 당황했다.<br />
그런데 리스트가 기능을 다 지원해준다.<br />
파이썬 너는 다 계획이 있구나!</p>

<blockquote>
  <h4 id="코드-확인">코드 확인</h4>
  <hr />
</blockquote>

<p><a href="https://raw.githubusercontent.com/movingwoo/movingwoo-snippets/refs/heads/main/BOJ/Python/2025-07-02-2493.py">Link to GitHub</a></p>]]></content><author><name>movingwoo</name></author><category term="BOJ/Python/" /><category term="PYTHON" /><category term="알고리즘" /><category term="백준" /><category term="2493" /><category term="탑" /><category term="구현" /><summary type="html"><![CDATA[백준 2493번 탑 PYTHON 문제풀이]]></summary></entry><entry><title type="html">12730번 Saving the Universe (Large)</title><link href="https://movingwoo.com/boj/python/2025/07/02/12730.html" rel="alternate" type="text/html" title="12730번 Saving the Universe (Large)" /><published>2025-07-02T06:00:00+00:00</published><updated>2025-07-02T06:00:00+00:00</updated><id>https://movingwoo.com/boj/python/2025/07/02/12730</id><content type="html" xml:base="https://movingwoo.com/boj/python/2025/07/02/12730.html"><![CDATA[<blockquote>
  <h4 id="이왜틀">이왜틀?</h4>
  <hr />
</blockquote>

<p><img src="/assets/images/posts/BOJ/Python/2025-07-02-12730/img01.webp" alt="img01" /></p>

<p><a href="https://www.acmicpc.net/problem/12730">12730번 Saving the Universe (Large) - 백준</a></p>

<p>이왜틀 마지막 실버문제</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span> <span class="n">n</span><span class="o">=</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
<span class="nc">Map</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">se</span><span class="o">=</span><span class="k">new</span> <span class="nc">HashMap</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span><span class="nc">Integer</span><span class="o">&gt;();</span>
<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span> <span class="n">se</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">(),</span> <span class="mi">0</span><span class="o">);</span>
<span class="kt">int</span> <span class="n">m</span><span class="o">=</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">m</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
    <span class="nc">String</span> <span class="n">c</span><span class="o">=</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">();</span>
    <span class="k">if</span><span class="o">(</span><span class="n">se</span><span class="o">.</span><span class="na">containsKey</span><span class="o">(</span><span class="n">c</span><span class="o">))</span> <span class="n">se</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">c</span><span class="o">,</span> <span class="n">se</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">c</span><span class="o">)+</span><span class="mi">1</span><span class="o">);</span>
<span class="o">}</span>
<span class="kt">int</span> <span class="n">u</span><span class="o">=</span><span class="nc">Integer</span><span class="o">.</span><span class="na">MAX_VALUE</span><span class="o">;</span>
<span class="nc">Iterator</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">e</span><span class="o">=</span><span class="n">se</span><span class="o">.</span><span class="na">keySet</span><span class="o">().</span><span class="na">iterator</span><span class="o">();</span>
<span class="k">while</span><span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">hasNext</span><span class="o">()){</span>
    <span class="nc">String</span> <span class="n">y</span><span class="o">=(</span><span class="nc">String</span><span class="o">)</span><span class="n">e</span><span class="o">.</span><span class="na">next</span><span class="o">();</span>
    <span class="k">if</span><span class="o">(</span><span class="n">se</span><span class="o">.</span><span class="na">containsKey</span><span class="o">(</span><span class="n">y</span><span class="o">)){</span>
        <span class="kt">int</span> <span class="n">v</span><span class="o">=</span><span class="n">se</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">y</span><span class="o">);</span>
        <span class="k">if</span><span class="o">(</span><span class="n">u</span><span class="o">&gt;=</span><span class="n">v</span><span class="o">)</span> <span class="n">u</span><span class="o">=</span><span class="n">v</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
<span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="s">"Case #"</span><span class="o">+</span><span class="n">k</span><span class="o">+</span><span class="s">": "</span><span class="o">+(</span><span class="n">u</span><span class="o">==</span><span class="n">m</span><span class="o">?</span><span class="n">u</span><span class="o">-</span><span class="mi">1</span><span class="o">:</span><span class="n">u</span><span class="o">)+</span><span class="s">"\n"</span><span class="o">);</span>
</code></pre></div></div>

<p>제일 적게 등장한 검색엔진을 이용하려 한건가?<br />
애초에 문제 요건이랑 맞지 않는 것 같다.</p>

<blockquote>
  <h4 id="설계">설계</h4>
  <hr />
</blockquote>

<p>처음에 그리디로 접근했는데<br />
쿼리에 검색엔진이 존재하지 않는 경우도 고려해야하고<br />
탈출 시 조건 걸고 스위칭 횟수 늘리기도 애매하고 해서<br />
<span style="color: orange;"><strong>set을 두고 set이 가득차면 스위칭 횟수를 늘리는 것</strong></span>으로 판별한다.</p>

<blockquote>
  <h4 id="구현">구현</h4>
  <hr />
</blockquote>

<p>사용한 검색엔진 set이 가득차면 카운트 올리고<br />
set을 비우고 해당 검색엔진 하나로 초기화한다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">N</span> <span class="o">=</span> <span class="nf">int</span><span class="p">(</span><span class="nf">input</span><span class="p">())</span>

<span class="k">for</span> <span class="n">t</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="n">N</span> <span class="o">+</span> <span class="mi">1</span><span class="p">):</span>
    <span class="n">S</span> <span class="o">=</span> <span class="nf">int</span><span class="p">(</span><span class="nf">input</span><span class="p">())</span>
    <span class="n">engines</span> <span class="o">=</span> <span class="p">[</span><span class="nf">input</span><span class="p">().</span><span class="nf">strip</span><span class="p">()</span> <span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="n">S</span><span class="p">)]</span>

    <span class="n">Q</span> <span class="o">=</span> <span class="nf">int</span><span class="p">(</span><span class="nf">input</span><span class="p">())</span>
    <span class="n">queries</span> <span class="o">=</span> <span class="p">[</span><span class="nf">input</span><span class="p">().</span><span class="nf">strip</span><span class="p">()</span> <span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="n">Q</span><span class="p">)]</span>

    <span class="c1"># 사용한 검색엔진
</span>    <span class="n">used_engines</span> <span class="o">=</span> <span class="nf">set</span><span class="p">()</span>
    <span class="n">switch</span> <span class="o">=</span> <span class="mi">0</span>

    <span class="k">for</span> <span class="n">query</span> <span class="ow">in</span> <span class="n">queries</span><span class="p">:</span>
        <span class="k">if</span> <span class="n">query</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">used_engines</span><span class="p">:</span>
            <span class="n">used_engines</span><span class="p">.</span><span class="nf">add</span><span class="p">(</span><span class="n">query</span><span class="p">)</span>

            <span class="c1"># 사용한 검색엔진이 가득참 == 스위치 해야함
</span>            <span class="k">if</span> <span class="nf">len</span><span class="p">(</span><span class="n">used_engines</span><span class="p">)</span> <span class="o">==</span> <span class="n">S</span><span class="p">:</span>
                <span class="n">switch</span> <span class="o">+=</span> <span class="mi">1</span>
                <span class="c1"># 초기화
</span>                <span class="n">used_engines</span> <span class="o">=</span> <span class="p">{</span><span class="n">query</span><span class="p">}</span>
                
    <span class="nf">print</span><span class="p">(</span><span class="sa">f</span><span class="sh">"</span><span class="s">Case #</span><span class="si">{</span><span class="n">t</span><span class="si">}</span><span class="s">: </span><span class="si">{</span><span class="n">switch</span><span class="si">}</span><span class="sh">"</span><span class="p">)</span>
</code></pre></div></div>

<blockquote>
  <h4 id="채점">채점</h4>
  <hr />
</blockquote>

<p><img src="/assets/images/posts/BOJ/Python/2025-07-02-12730/img02.webp" alt="img02" /></p>

<blockquote>
  <h4 id="반성">반성</h4>
  <hr />
</blockquote>

<p>실버가 끝났다.<br />
골드부터가 진짜지.</p>

<blockquote>
  <h4 id="코드-확인">코드 확인</h4>
  <hr />
</blockquote>

<p><a href="https://raw.githubusercontent.com/movingwoo/movingwoo-snippets/refs/heads/main/BOJ/Python/2025-07-02-12730.py">Link to GitHub</a></p>]]></content><author><name>movingwoo</name></author><category term="BOJ/Python/" /><category term="PYTHON" /><category term="알고리즘" /><category term="백준" /><category term="12730" /><category term="Saving the Universe (Large)" /><category term="구현" /><summary type="html"><![CDATA[백준 12730번 Saving the Universe (Large) PYTHON 문제풀이]]></summary></entry><entry><title type="html">11973번 Angry Cows (Silver)</title><link href="https://movingwoo.com/boj/python/2025/07/02/11973.html" rel="alternate" type="text/html" title="11973번 Angry Cows (Silver)" /><published>2025-07-02T04:00:00+00:00</published><updated>2025-07-02T04:00:00+00:00</updated><id>https://movingwoo.com/boj/python/2025/07/02/11973</id><content type="html" xml:base="https://movingwoo.com/boj/python/2025/07/02/11973.html"><![CDATA[<blockquote>
  <h4 id="이왜틀">이왜틀?</h4>
  <hr />
</blockquote>

<p><a href="https://www.acmicpc.net/problem/11973">11973번 Angry Cows (Silver) - 백준</a></p>

<p>아 이 문제 그거다.<br />
골드 풀고 소스 그대로 집어넣었다가 틀린 문제.<br />
골드랑 완전히 다른 문제라 틀린 문제다.</p>

<p>그냥 새로 풀어야한다는 뜻</p>

<blockquote>
  <h4 id="번역">번역</h4>
  <hr />
</blockquote>

<p>골드랑 비슷한데 조금 다르다.</p>

<p>소를 날리면 반지름 R 범위 내 건초더미를 폭발시킨다.<br />
K마리의 소를 날려 N개의 건초더미를 터뜨릴때 필요한 힘 R의 최소 값을 구하는 문제.</p>

<blockquote>
  <h4 id="설계">설계</h4>
  <hr />
</blockquote>

<p>건초더미를 정렬해서 힘 R의 소를 날린다.<br />
x위치에 떨어졌을 경우 x - R, x + R 건초더미를 터칠 때 K마리가 되는지 확인한다.</p>

<blockquote>
  <h4 id="구현">구현</h4>
  <hr />
</blockquote>

<p><span style="color: orange;"><strong>정렬 후 이분탐색</strong></span>을 진행한다.<br />
유효성 검증 시 제일 왼쪽 건초더미를 폭발의 제일 왼쪽 기준점으로 잡고 K마리 이하의 소가 필요한지 확인한다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">isValid</span><span class="p">(</span><span class="n">R</span><span class="p">):</span>
    <span class="n">count</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="n">idx</span> <span class="o">=</span> <span class="mi">0</span>

    <span class="k">while</span> <span class="n">idx</span> <span class="o">&lt;</span> <span class="n">N</span><span class="p">:</span>
        <span class="n">count</span> <span class="o">+=</span> <span class="mi">1</span>
        <span class="c1"># 힘 R로 터질 때 현재 건초더미를 제일 왼쪽으로 두고 2 * R 만큼 오른쪽
</span>        <span class="n">explode</span> <span class="o">=</span> <span class="n">haybales</span><span class="p">[</span><span class="n">idx</span><span class="p">]</span> <span class="o">+</span> <span class="p">(</span><span class="mi">2</span> <span class="o">*</span> <span class="n">R</span><span class="p">)</span>

        <span class="k">while</span> <span class="n">idx</span> <span class="o">&lt;</span> <span class="n">N</span> <span class="ow">and</span> <span class="n">haybales</span><span class="p">[</span><span class="n">idx</span><span class="p">]</span> <span class="o">&lt;=</span> <span class="n">explode</span><span class="p">:</span>
            <span class="n">idx</span> <span class="o">+=</span> <span class="mi">1</span>
    
    <span class="c1"># K마리 이하로 날렸으면 true
</span>    <span class="k">return</span> <span class="n">count</span> <span class="o">&lt;=</span> <span class="n">K</span>

<span class="n">N</span><span class="p">,</span> <span class="n">K</span> <span class="o">=</span> <span class="nf">map</span><span class="p">(</span><span class="nb">int</span><span class="p">,</span> <span class="nf">input</span><span class="p">().</span><span class="nf">split</span><span class="p">())</span>

<span class="n">haybales</span> <span class="o">=</span> <span class="p">[</span><span class="nf">int</span><span class="p">(</span><span class="nf">input</span><span class="p">())</span> <span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="n">N</span><span class="p">)]</span>
<span class="n">haybales</span><span class="p">.</span><span class="nf">sort</span><span class="p">()</span>

<span class="n">left</span> <span class="o">=</span> <span class="mi">0</span>
<span class="n">right</span> <span class="o">=</span> <span class="mi">1000000000</span>
<span class="n">R</span> <span class="o">=</span> <span class="mi">0</span>

<span class="k">while</span> <span class="n">left</span> <span class="o">&lt;=</span> <span class="n">right</span><span class="p">:</span>
    <span class="n">mid</span> <span class="o">=</span> <span class="p">(</span><span class="n">left</span> <span class="o">+</span> <span class="n">right</span><span class="p">)</span> <span class="o">//</span> <span class="mi">2</span>

    <span class="k">if</span> <span class="nf">isValid</span><span class="p">(</span><span class="n">mid</span><span class="p">):</span>
        <span class="n">R</span> <span class="o">=</span> <span class="n">mid</span>
        <span class="n">right</span> <span class="o">=</span> <span class="n">mid</span> <span class="o">-</span> <span class="mi">1</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="n">left</span> <span class="o">=</span> <span class="n">mid</span> <span class="o">+</span> <span class="mi">1</span>

<span class="nf">print</span><span class="p">(</span><span class="n">R</span><span class="p">)</span>
</code></pre></div></div>

<blockquote>
  <h4 id="채점">채점</h4>
  <hr />
</blockquote>

<p><img src="/assets/images/posts/BOJ/Python/2025-07-02-11973/img01.webp" alt="img01" /></p>

<p>2번 제출했는데 첫 번째 제출은 틀린 코드가 통과했다.<br />
이분 탐색 범위를 haybales 범위로 잡아서 틀려야할 코드인데 테스트케이스가 부족했는지 통과해버렸다.</p>

<p>반례 데이터는 아래와 같다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Input
</span><span class="mi">5</span> <span class="mi">1</span>
<span class="mi">100</span>
<span class="mi">101</span>
<span class="mi">102</span>
<span class="mi">103</span>
<span class="mi">104</span>

<span class="c1"># Answer
</span><span class="mi">2</span>

<span class="c1"># Output
</span><span class="mi">100</span>
</code></pre></div></div>

<blockquote>
  <h4 id="반성">반성</h4>
  <hr />
</blockquote>

<p>틀린 코드가 통과해서 자기 코드 저격해보는건 또 첫 경험이다.<br />
신선하고 즐거운걸?</p>

<blockquote>
  <h4 id="코드-확인">코드 확인</h4>
  <hr />
</blockquote>

<p><a href="https://raw.githubusercontent.com/movingwoo/movingwoo-snippets/refs/heads/main/BOJ/Python/2025-07-02-11973.py">Link to GitHub</a></p>]]></content><author><name>movingwoo</name></author><category term="BOJ/Python/" /><category term="PYTHON" /><category term="알고리즘" /><category term="백준" /><category term="11973" /><category term="Angry Cows (Silver)" /><category term="이분탐색" /><summary type="html"><![CDATA[백준 11973번 Angry Cows (Silver) PYTHON 문제풀이]]></summary></entry><entry><title type="html">16194번 카드 구매하기 2</title><link href="https://movingwoo.com/boj/python/2025/07/02/16194.html" rel="alternate" type="text/html" title="16194번 카드 구매하기 2" /><published>2025-07-02T02:00:00+00:00</published><updated>2025-07-02T02:00:00+00:00</updated><id>https://movingwoo.com/boj/python/2025/07/02/16194</id><content type="html" xml:base="https://movingwoo.com/boj/python/2025/07/02/16194.html"><![CDATA[<blockquote>
  <h4 id="이왜틀">이왜틀?</h4>
  <hr />
</blockquote>

<p><img src="/assets/images/posts/BOJ/Python/2025-07-02-16194/img01.webp" alt="img01" /></p>

<p><a href="https://www.acmicpc.net/problem/16194">16194번 카드 구매하기 2 - 백준</a></p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span> <span class="n">n</span><span class="o">=</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
<span class="kt">int</span><span class="o">[]</span> <span class="n">pack</span><span class="o">=</span><span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">n</span><span class="o">+</span><span class="mi">1</span><span class="o">];</span>
<span class="kt">int</span><span class="o">[]</span> <span class="n">arr</span><span class="o">=</span><span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">n</span><span class="o">+</span><span class="mi">1</span><span class="o">];</span>
<span class="nc">StringTokenizer</span> <span class="n">st</span><span class="o">=</span><span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">(),</span><span class="s">" "</span><span class="o">);</span>
<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="n">n</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
    <span class="n">pack</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
<span class="o">}</span>
<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="n">n</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
    <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span><span class="n">j</span><span class="o">&lt;=</span><span class="n">i</span><span class="o">;</span><span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
        <span class="n">arr</span><span class="o">[</span><span class="n">i</span><span class="o">]=</span><span class="nc">Math</span><span class="o">.</span><span class="na">max</span><span class="o">(</span><span class="n">arr</span><span class="o">[</span><span class="n">i</span><span class="o">],</span><span class="n">arr</span><span class="o">[</span><span class="n">i</span><span class="o">-</span><span class="n">j</span><span class="o">]+</span><span class="n">pack</span><span class="o">[</span><span class="n">j</span><span class="o">]);</span>
    <span class="o">}</span>
<span class="o">}</span>
<span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">arr</span><span class="o">[</span><span class="n">n</span><span class="o">]+</span><span class="s">""</span><span class="o">);</span>
</code></pre></div></div>

<p>최소 비용을 구해야하는데 왜 Math.max를 쓴거지?</p>

<blockquote>
  <h4 id="설계">설계</h4>
  <hr />
</blockquote>

<p>점화식은 다 짜두었으니 그대로 가져가서 쓰되, <span style="color: orange;"><strong>min</strong></span>을 쓰도록 한다.</p>

<blockquote>
  <h4 id="구현">구현</h4>
  <hr />
</blockquote>

<p>인덱스 범위에 주의한다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">N</span> <span class="o">=</span> <span class="nf">int</span><span class="p">(</span><span class="nf">input</span><span class="p">())</span>

<span class="n">pack</span> <span class="o">=</span> <span class="nf">list</span><span class="p">(</span><span class="nf">map</span><span class="p">(</span><span class="nb">int</span><span class="p">,</span> <span class="nf">input</span><span class="p">().</span><span class="nf">split</span><span class="p">()))</span>
<span class="c1"># 대충 큰 값
</span><span class="n">dp</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1000000</span><span class="p">]</span> <span class="o">*</span> <span class="p">(</span><span class="n">N</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span>
<span class="n">dp</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span>

<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="n">N</span> <span class="o">+</span> <span class="mi">1</span><span class="p">):</span>
    <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="n">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">):</span>
        <span class="n">dp</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="nf">min</span><span class="p">(</span><span class="n">dp</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="n">dp</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="n">j</span><span class="p">]</span> <span class="o">+</span> <span class="n">pack</span><span class="p">[</span><span class="n">j</span> <span class="o">-</span> <span class="mi">1</span><span class="p">])</span>

<span class="nf">print</span><span class="p">(</span><span class="n">dp</span><span class="p">[</span><span class="n">N</span><span class="p">])</span>
</code></pre></div></div>

<blockquote>
  <h4 id="채점">채점</h4>
  <hr />
</blockquote>

<p><img src="/assets/images/posts/BOJ/Python/2025-07-02-16194/img02.webp" alt="img02" /></p>

<blockquote>
  <h4 id="반성">반성</h4>
  <hr />
</blockquote>

<p>5년 전 나는 DP 개념을 몰랐을 텐데 나름 점화식을 작성해 풀려고 노력한 모습이 보인다.<br />
장하다 과거의 나</p>

<blockquote>
  <h4 id="코드-확인">코드 확인</h4>
  <hr />
</blockquote>

<p><a href="https://raw.githubusercontent.com/movingwoo/movingwoo-snippets/refs/heads/main/BOJ/Python/2025-07-02-16194.py">Link to GitHub</a></p>]]></content><author><name>movingwoo</name></author><category term="BOJ/Python/" /><category term="PYTHON" /><category term="알고리즘" /><category term="백준" /><category term="16194" /><category term="카드 구매하기 2" /><category term="DP" /><summary type="html"><![CDATA[백준 16194번 카드 구매하기 2 PYTHON 문제풀이]]></summary></entry><entry><title type="html">14569번 시간표 짜기</title><link href="https://movingwoo.com/boj/python/2025/07/02/14569.html" rel="alternate" type="text/html" title="14569번 시간표 짜기" /><published>2025-07-02T01:00:00+00:00</published><updated>2025-07-02T01:00:00+00:00</updated><id>https://movingwoo.com/boj/python/2025/07/02/14569</id><content type="html" xml:base="https://movingwoo.com/boj/python/2025/07/02/14569.html"><![CDATA[<blockquote>
  <h4 id="이왜틀">이왜틀?</h4>
  <hr />
</blockquote>

<p><img src="/assets/images/posts/BOJ/Python/2025-07-02-14569/img01.webp" alt="img01" /></p>

<p><a href="https://www.acmicpc.net/problem/14569">14569번 시간표 짜기 - 백준</a></p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span> <span class="n">n</span><span class="o">=</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
<span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">[]&gt;</span> <span class="n">clas</span><span class="o">=</span><span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>
<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
    <span class="nc">StringTokenizer</span> <span class="n">st</span><span class="o">=</span><span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">(),</span><span class="s">" "</span><span class="o">);</span>
    <span class="kt">int</span> <span class="n">ntmp</span><span class="o">=</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
    <span class="nc">String</span><span class="o">[]</span> <span class="n">atmp</span><span class="o">=</span><span class="k">new</span> <span class="nc">String</span><span class="o">[</span><span class="n">ntmp</span><span class="o">];</span>
    <span class="kt">int</span> <span class="n">idx</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
    <span class="k">while</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">hasMoreTokens</span><span class="o">())</span> <span class="o">{</span>
        <span class="n">atmp</span><span class="o">[</span><span class="n">idx</span><span class="o">++]=</span><span class="s">" "</span><span class="o">+</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">();</span>
    <span class="o">}</span>
    <span class="n">clas</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">atmp</span><span class="o">);</span>
<span class="o">}</span>

<span class="kt">int</span> <span class="n">m</span><span class="o">=</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
<span class="kt">int</span><span class="o">[]</span> <span class="n">gn</span><span class="o">=</span><span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">m</span><span class="o">];</span>
<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">m</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
    <span class="nc">String</span> <span class="n">l</span><span class="o">=</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">();</span>
    <span class="k">if</span><span class="o">(</span><span class="n">l</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"0"</span><span class="o">))</span> <span class="k">continue</span><span class="o">;</span>
    <span class="k">else</span> <span class="o">{</span>
        <span class="n">l</span><span class="o">=</span><span class="n">l</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="n">l</span><span class="o">.</span><span class="na">indexOf</span><span class="o">(</span><span class="sc">' '</span><span class="o">));</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">j</span><span class="o">&lt;</span><span class="n">n</span><span class="o">;</span><span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
            <span class="nc">String</span><span class="o">[]</span> <span class="n">atmp</span><span class="o">=</span><span class="n">clas</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">j</span><span class="o">);</span>
            <span class="kt">boolean</span> <span class="n">chk</span><span class="o">=</span><span class="kc">true</span><span class="o">;</span>
            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">k</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">k</span><span class="o">&lt;</span><span class="n">atmp</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">k</span><span class="o">++)</span> <span class="o">{</span>
                <span class="k">if</span><span class="o">(!</span><span class="n">l</span><span class="o">.</span><span class="na">contains</span><span class="o">(</span><span class="n">atmp</span><span class="o">[</span><span class="n">k</span><span class="o">]))</span> <span class="o">{</span>
                    <span class="n">chk</span><span class="o">=</span><span class="kc">false</span><span class="o">;</span>
                    <span class="k">break</span><span class="o">;</span>
                <span class="o">}</span>
            <span class="o">}</span>
            <span class="k">if</span><span class="o">(</span><span class="n">chk</span><span class="o">)</span> <span class="n">gn</span><span class="o">[</span><span class="n">i</span><span class="o">]++;</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span>
<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">m</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span> <span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">gn</span><span class="o">[</span><span class="n">i</span><span class="o">]+</span><span class="s">"\n"</span><span class="o">);</span>
</code></pre></div></div>

<p>String으로 뭘 해보려했던 것 같은데 넘어가자.</p>

<blockquote>
  <h4 id="설계">설계</h4>
  <hr />
</blockquote>

<p>수업시간은 최대 50이니 50비트로 표현할 수 있다.<br />
전부 입력 받아 시간표가 학생의 빈시간에 포함되는지 확인하면 된다.</p>

<blockquote>
  <h4 id="구현">구현</h4>
  <hr />
</blockquote>

<p>입력 리스트의 첫 번째 숫자는 뒤에 이어질 숫자의 갯수라 빼고 마스킹해야한다.<br />
이후 <span style="color: orange;"><strong>교집합</strong></span>을 찾으면 된다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 비트마스킹
</span><span class="k">def</span> <span class="nf">masking</span><span class="p">(</span><span class="n">n</span><span class="p">):</span>
    <span class="n">mask</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">n</span><span class="p">:</span>
        <span class="n">mask</span> <span class="o">|=</span> <span class="mi">1</span> <span class="o">&lt;&lt;</span> <span class="n">i</span>

    <span class="k">return</span> <span class="n">mask</span>

<span class="n">N</span> <span class="o">=</span> <span class="nf">int</span><span class="p">(</span><span class="nf">input</span><span class="p">())</span>
<span class="n">classes</span> <span class="o">=</span> <span class="p">[]</span>

<span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="n">N</span><span class="p">):</span>
   <span class="c1"># 첫 숫자 슬라이싱 해야함
</span>   <span class="n">class_time</span> <span class="o">=</span> <span class="nf">list</span><span class="p">(</span><span class="nf">map</span><span class="p">(</span><span class="nb">int</span><span class="p">,</span> <span class="nf">input</span><span class="p">().</span><span class="nf">split</span><span class="p">()))[</span><span class="mi">1</span><span class="p">:]</span>
   <span class="n">classes</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="nf">masking</span><span class="p">(</span><span class="n">class_time</span><span class="p">))</span>

<span class="n">M</span> <span class="o">=</span> <span class="nf">int</span><span class="p">(</span><span class="nf">input</span><span class="p">())</span>

<span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="n">M</span><span class="p">):</span>
    <span class="c1"># 첫 숫자 슬라이싱 해야함
</span>    <span class="n">student</span> <span class="o">=</span> <span class="nf">masking</span><span class="p">(</span><span class="nf">list</span><span class="p">(</span><span class="nf">map</span><span class="p">(</span><span class="nb">int</span><span class="p">,</span> <span class="nf">input</span><span class="p">().</span><span class="nf">split</span><span class="p">()))[</span><span class="mi">1</span><span class="p">:])</span>
    
    <span class="n">count</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="k">for</span> <span class="n">class_time</span> <span class="ow">in</span> <span class="n">classes</span><span class="p">:</span>
        <span class="c1"># 수업 시간과 학생 빈 시간의 교집합
</span>        <span class="k">if</span> <span class="n">class_time</span> <span class="o">&amp;</span> <span class="n">student</span> <span class="o">==</span> <span class="n">class_time</span><span class="p">:</span>
            <span class="n">count</span> <span class="o">+=</span> <span class="mi">1</span>

    <span class="nf">print</span><span class="p">(</span><span class="n">count</span><span class="p">)</span>
</code></pre></div></div>

<blockquote>
  <h4 id="채점">채점</h4>
  <hr />
</blockquote>

<p><img src="/assets/images/posts/BOJ/Python/2025-07-02-14569/img02.webp" alt="img02" /></p>

<blockquote>
  <h4 id="반성">반성</h4>
  <hr />
</blockquote>

<p>알고리즘 분류에 비트마스킹이 있어서 그렇게 풀었는데<br />
이거 파이썬 <span style="color: orange;"><strong>set</strong></span>도 가능할까?<br />
테스트해보자.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">N</span> <span class="o">=</span> <span class="nf">int</span><span class="p">(</span><span class="nf">input</span><span class="p">())</span>

<span class="n">classes</span> <span class="o">=</span> <span class="p">[]</span>

<span class="c1"># set 써보기
</span><span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="n">N</span><span class="p">):</span>
    <span class="n">classes</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="nf">set</span><span class="p">(</span><span class="nf">map</span><span class="p">(</span><span class="nb">int</span><span class="p">,</span> <span class="nf">input</span><span class="p">().</span><span class="nf">split</span><span class="p">()[</span><span class="mi">1</span><span class="p">:])))</span>

<span class="n">M</span> <span class="o">=</span> <span class="nf">int</span><span class="p">(</span><span class="nf">input</span><span class="p">())</span>

<span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="n">M</span><span class="p">):</span>
    <span class="n">student</span> <span class="o">=</span> <span class="nf">set</span><span class="p">(</span><span class="nf">map</span><span class="p">(</span><span class="nb">int</span><span class="p">,</span> <span class="nf">input</span><span class="p">().</span><span class="nf">split</span><span class="p">()[</span><span class="mi">1</span><span class="p">:]))</span>
    <span class="n">count</span> <span class="o">=</span> <span class="mi">0</span>
    
    <span class="k">for</span> <span class="n">class_time</span> <span class="ow">in</span> <span class="n">classes</span><span class="p">:</span>
        <span class="c1"># subset
</span>        <span class="k">if</span> <span class="n">class_time</span><span class="p">.</span><span class="nf">issubset</span><span class="p">(</span><span class="n">student</span><span class="p">):</span>
            <span class="n">count</span> <span class="o">+=</span> <span class="mi">1</span>

    <span class="nf">print</span><span class="p">(</span><span class="n">count</span><span class="p">)</span>
</code></pre></div></div>

<p>코드 이렇게 하고 제출</p>

<p><img src="/assets/images/posts/BOJ/Python/2025-07-02-14569/img03.webp" alt="img03" /></p>

<p>오 되네<br />
시간도 나쁘지 않다.<br />
<span style="color: orange;"><strong>파이썬 set 성능이 우수</strong></span>하다고 들었는데 진짜 그런가보다.<br />
자바 Set의 형언할 수 없는 그 묵직하고 느린 것 때문에 성능에 편견이 있었는데</p>

<blockquote>
  <h4 id="코드-확인">코드 확인</h4>
  <hr />
</blockquote>

<p><a href="https://raw.githubusercontent.com/movingwoo/movingwoo-snippets/refs/heads/main/BOJ/Python/2025-07-02-14569.py">Link to GitHub</a></p>]]></content><author><name>movingwoo</name></author><category term="BOJ/Python/" /><category term="PYTHON" /><category term="알고리즘" /><category term="백준" /><category term="14569" /><category term="시간표 짜기" /><category term="비트마스킹" /><summary type="html"><![CDATA[백준 14569번 시간표 짜기 PYTHON 문제풀이]]></summary></entry><entry><title type="html">1913번 달팽이</title><link href="https://movingwoo.com/boj/python/2025/07/02/1913.html" rel="alternate" type="text/html" title="1913번 달팽이" /><published>2025-07-02T00:00:00+00:00</published><updated>2025-07-02T00:00:00+00:00</updated><id>https://movingwoo.com/boj/python/2025/07/02/1913</id><content type="html" xml:base="https://movingwoo.com/boj/python/2025/07/02/1913.html"><![CDATA[<blockquote>
  <h4 id="이왜틀">이왜틀?</h4>
  <hr />
</blockquote>

<p><img src="/assets/images/posts/BOJ/Python/2025-07-02-1913/img01.webp" alt="img01" /></p>

<p><a href="https://www.acmicpc.net/problem/1913">1913번 달팽이 - 백준</a></p>

<p>달팽이 그리는 것만 있으면 아주 기초적인 문제인데<br />
좌표를 구하는게 추가되었다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span><span class="kd">interface</span> <span class="nc">Main</span><span class="o">{</span><span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span><span class="n">z</span><span class="o">){</span><span class="nc">Scanner</span> <span class="n">s</span><span class="o">=</span><span class="k">new</span> <span class="nc">Scanner</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span><span class="kt">int</span> <span class="n">n</span><span class="o">=</span><span class="n">s</span><span class="o">.</span><span class="na">nextInt</span><span class="o">(),</span><span class="n">y</span><span class="o">=</span><span class="n">s</span><span class="o">.</span><span class="na">nextInt</span><span class="o">(),</span><span class="n">g</span><span class="o">=</span><span class="mi">1</span><span class="o">,</span><span class="n">i</span><span class="o">=</span><span class="n">n</span><span class="o">/</span><span class="mi">2</span><span class="o">,</span><span class="n">j</span><span class="o">=</span><span class="n">n</span><span class="o">/</span><span class="mi">2</span><span class="o">,</span><span class="n">k</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span><span class="kt">int</span><span class="o">[][]</span><span class="n">a</span><span class="o">=</span><span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">n</span><span class="o">][</span><span class="n">n</span><span class="o">];</span><span class="n">a</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]=</span><span class="n">k</span><span class="o">;</span><span class="kt">boolean</span> <span class="n">u</span><span class="o">=</span><span class="kc">true</span><span class="o">;</span><span class="nl">h:</span><span class="k">for</span><span class="o">(;;){</span><span class="k">if</span><span class="o">(</span><span class="n">u</span><span class="o">){</span><span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">l</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span><span class="n">l</span><span class="o">&lt;=</span><span class="n">g</span><span class="o">;</span><span class="n">l</span><span class="o">++){</span><span class="n">a</span><span class="o">[--</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]=++</span><span class="n">k</span><span class="o">;</span><span class="k">if</span><span class="o">(</span><span class="n">k</span><span class="o">==</span><span class="n">n</span><span class="o">*</span><span class="n">n</span><span class="o">)</span><span class="k">break</span> <span class="n">h</span><span class="o">;}</span><span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">l</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span><span class="n">l</span><span class="o">&lt;=</span><span class="n">g</span><span class="o">;</span><span class="n">l</span><span class="o">++){</span><span class="n">a</span><span class="o">[</span><span class="n">i</span><span class="o">][++</span><span class="n">j</span><span class="o">]=++</span><span class="n">k</span><span class="o">;</span><span class="k">if</span><span class="o">(</span><span class="n">k</span><span class="o">==</span><span class="n">n</span><span class="o">*</span><span class="n">n</span><span class="o">)</span><span class="k">break</span> <span class="n">h</span><span class="o">;}</span><span class="n">u</span><span class="o">=!</span><span class="n">u</span><span class="o">;</span><span class="n">g</span><span class="o">++;}</span><span class="k">else</span><span class="o">{</span><span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">l</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span><span class="n">l</span><span class="o">&lt;=</span><span class="n">g</span><span class="o">;</span><span class="n">l</span><span class="o">++){</span><span class="n">a</span><span class="o">[++</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]=++</span><span class="n">k</span><span class="o">;</span><span class="k">if</span><span class="o">(</span><span class="n">k</span><span class="o">==</span><span class="n">n</span><span class="o">*</span><span class="n">n</span><span class="o">)</span><span class="k">break</span> <span class="n">h</span><span class="o">;}</span><span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">l</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span><span class="n">l</span><span class="o">&lt;=</span><span class="n">g</span><span class="o">;</span><span class="n">l</span><span class="o">++){</span><span class="n">a</span><span class="o">[</span><span class="n">i</span><span class="o">][--</span><span class="n">j</span><span class="o">]=++</span><span class="n">k</span><span class="o">;</span><span class="k">if</span><span class="o">(</span><span class="n">k</span><span class="o">==</span><span class="n">n</span><span class="o">*</span><span class="n">n</span><span class="o">)</span><span class="k">break</span> <span class="n">h</span><span class="o">;}</span><span class="n">u</span><span class="o">=!</span><span class="n">u</span><span class="o">;</span><span class="n">g</span><span class="o">++;}}</span><span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">m</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">m</span><span class="o">&lt;</span><span class="n">n</span><span class="o">;</span><span class="n">m</span><span class="o">++){</span><span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">l</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">l</span><span class="o">&lt;</span><span class="n">n</span><span class="o">;</span><span class="n">l</span><span class="o">++){</span><span class="n">k</span><span class="o">=</span><span class="n">a</span><span class="o">[</span><span class="n">m</span><span class="o">][</span><span class="n">l</span><span class="o">];</span><span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="n">k</span><span class="o">+(</span><span class="n">l</span><span class="o">==</span><span class="n">n</span><span class="o">-</span><span class="mi">1</span><span class="o">?</span><span class="s">"\n"</span><span class="o">:</span><span class="s">" "</span><span class="o">));</span><span class="k">if</span><span class="o">(</span><span class="n">k</span><span class="o">==</span><span class="n">y</span><span class="o">){</span><span class="n">i</span><span class="o">=</span><span class="n">m</span><span class="o">+</span><span class="mi">1</span><span class="o">;</span><span class="n">j</span><span class="o">=</span><span class="n">l</span><span class="o">+</span><span class="mi">1</span><span class="o">;}}}</span><span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="s">" "</span><span class="o">+</span><span class="n">j</span><span class="o">);}}</span>
</code></pre></div></div>

<p><span style="color: red;"><strong>미친 뭔 짓을 한거임</strong></span><br />
대체 뭐가 문제였을까?<br />
세상에 불만이 많았나?<br />
때려치고 처음부터 풀자.</p>

<blockquote>
  <h4 id="설계">설계</h4>
  <hr />
</blockquote>

<p>다 그리고 좌표를 찾으려 하면 아마 시간초과에 걸릴 것이다.<br />
<span style="color: orange;"><strong>달팽이를 그리면서 좌표를 찾는게 훨씬 빠르다.</strong></span></p>

<blockquote>
  <h4 id="구현">구현</h4>
  <hr />
</blockquote>

<p>출발할 중앙 점부터 달팽이를 그린다.<br />
찾으려는 타겟이 나오는 순간 해당 좌표를 확인한다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">N</span> <span class="o">=</span> <span class="nf">int</span><span class="p">(</span><span class="nf">input</span><span class="p">())</span>
<span class="n">target</span> <span class="o">=</span> <span class="nf">int</span><span class="p">(</span><span class="nf">input</span><span class="p">())</span>

<span class="n">x</span><span class="p">,</span> <span class="n">y</span> <span class="o">=</span> <span class="n">N</span> <span class="o">//</span> <span class="mi">2</span><span class="p">,</span> <span class="n">N</span> <span class="o">//</span> <span class="mi">2</span>

<span class="c1"># 달팽이 방향 위 오른쪽 아래 왼쪽
</span><span class="n">dx</span> <span class="o">=</span> <span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">]</span>
<span class="n">dy</span> <span class="o">=</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">]</span>

<span class="n">snail</span> <span class="o">=</span> <span class="p">[[</span><span class="mi">0</span><span class="p">]</span> <span class="o">*</span> <span class="n">N</span> <span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="n">N</span><span class="p">)]</span>
<span class="n">n</span> <span class="o">=</span> <span class="mi">1</span>
<span class="nb">len</span> <span class="o">=</span> <span class="mi">1</span>
<span class="n">tx</span><span class="p">,</span> <span class="n">ty</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span>

<span class="n">snail</span><span class="p">[</span><span class="n">x</span><span class="p">][</span><span class="n">y</span><span class="p">]</span> <span class="o">=</span> <span class="n">n</span>

<span class="c1"># n == 1 일때 타겟좌표 체크
</span><span class="k">if</span> <span class="n">n</span> <span class="o">==</span> <span class="n">target</span><span class="p">:</span>
    <span class="n">tx</span><span class="p">,</span> <span class="n">ty</span> <span class="o">=</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span>

<span class="k">while</span> <span class="n">n</span> <span class="o">&lt;</span> <span class="n">N</span> <span class="o">*</span> <span class="n">N</span><span class="p">:</span>
    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="mi">4</span><span class="p">):</span>
        <span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="nb">len</span><span class="p">):</span>
            <span class="n">x</span> <span class="o">+=</span> <span class="n">dx</span><span class="p">[</span><span class="n">i</span><span class="p">]</span>
            <span class="n">y</span> <span class="o">+=</span> <span class="n">dy</span><span class="p">[</span><span class="n">i</span><span class="p">]</span>

            <span class="k">if</span> <span class="mi">0</span> <span class="o">&lt;=</span> <span class="n">x</span> <span class="o">&lt;</span> <span class="n">N</span> <span class="ow">and</span> <span class="mi">0</span> <span class="o">&lt;=</span> <span class="n">y</span> <span class="o">&lt;</span> <span class="n">N</span><span class="p">:</span>
                <span class="n">n</span> <span class="o">+=</span> <span class="mi">1</span>
                <span class="n">snail</span><span class="p">[</span><span class="n">x</span><span class="p">][</span><span class="n">y</span><span class="p">]</span> <span class="o">=</span> <span class="n">n</span>
                
                <span class="k">if</span> <span class="n">n</span> <span class="o">==</span> <span class="n">target</span><span class="p">:</span>
                    <span class="c1"># 타겟 좌표 미리 저장
</span>                    <span class="n">tx</span><span class="p">,</span> <span class="n">ty</span> <span class="o">=</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span>
        
        <span class="k">if</span> <span class="n">i</span> <span class="o">%</span> <span class="mi">2</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
            <span class="c1"># 2번마다 길이 연장
</span>            <span class="nb">len</span> <span class="o">+=</span> <span class="mi">1</span>

<span class="k">for</span> <span class="n">r</span> <span class="ow">in</span> <span class="n">snail</span><span class="p">:</span>
    <span class="nf">print</span><span class="p">(</span><span class="sh">'</span><span class="s"> </span><span class="sh">'</span><span class="p">.</span><span class="nf">join</span><span class="p">(</span><span class="nf">map</span><span class="p">(</span><span class="nb">str</span><span class="p">,</span> <span class="n">r</span><span class="p">)))</span>
<span class="nf">print</span><span class="p">(</span><span class="n">tx</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,</span> <span class="n">ty</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> 
</code></pre></div></div>

<blockquote>
  <h4 id="채점">채점</h4>
  <hr />
</blockquote>

<p><img src="/assets/images/posts/BOJ/Python/2025-07-02-1913/img02.webp" alt="img02" /></p>

<p>n == 1일때 타겟좌표 갱신 부분 추가하고 통과</p>

<blockquote>
  <h4 id="반성">반성</h4>
  <hr />
</blockquote>

<p>곰곰히 생각해보니까 저 자바 소스 숏코딩하려고 그랬던 것 같다.<br />
숏코딩 그거 아무 의미 없는데…<br />
보기 좋고 주석 달린 코드가 최고인데<br />
그땐 몰랐지</p>

<blockquote>
  <h4 id="코드-확인">코드 확인</h4>
  <hr />
</blockquote>

<p><a href="https://raw.githubusercontent.com/movingwoo/movingwoo-snippets/refs/heads/main/BOJ/Python/2025-07-02-1913.py">Link to GitHub</a></p>]]></content><author><name>movingwoo</name></author><category term="BOJ/Python/" /><category term="PYTHON" /><category term="알고리즘" /><category term="백준" /><category term="1913" /><category term="달팽이" /><category term="구현" /><summary type="html"><![CDATA[백준 1913번 달팽이 PYTHON 문제풀이]]></summary></entry></feed>