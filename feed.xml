<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="ko-KR"><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="https://movingwoo.com/feed.xml" rel="self" type="application/atom+xml" /><link href="https://movingwoo.com/" rel="alternate" type="text/html" hreflang="ko-KR" /><updated>2025-06-17T07:15:20+00:00</updated><id>https://movingwoo.com/feed.xml</id><title type="html">뭐라도 하겠지</title><subtitle>개발, C++, JAVA, Python, Shortcut, 백준</subtitle><entry><title type="html">5430번 AC</title><link href="https://movingwoo.com/boj/java/2025/06/17/5430.html" rel="alternate" type="text/html" title="5430번 AC" /><published>2025-06-17T07:00:00+00:00</published><updated>2025-06-17T07:00:00+00:00</updated><id>https://movingwoo.com/boj/java/2025/06/17/5430</id><content type="html" xml:base="https://movingwoo.com/boj/java/2025/06/17/5430.html"><![CDATA[<blockquote>
  <h4 id="이왜틀">이왜틀?</h4>
  <hr />
</blockquote>

<p><img src="/assets/images/posts/BOJ/Java/2025-06-17-5410/img01.webp" alt="img01" /></p>

<p>과거의 나는 이걸 왜 틀렸을까?<br />
틀린 문제를 파헤쳐보는 시간 <span style="color: orange;"><strong>이왜틀?</strong></span></p>

<p>대부분 java로 틀렸던 문제들이라 웬만하면 java로 다시 해결하지 않을까 싶다.<br />
아무튼 이 문제는 5년 전에 런타임 에러 1회 이후로 손을 안댄 것 같은데…</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.io.*</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span><span class="o">{</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span><span class="n">z</span><span class="o">){</span>
		<span class="k">try</span> <span class="o">(</span><span class="nc">BufferedReader</span> <span class="n">br</span><span class="o">=</span><span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">InputStreamReader</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">));</span>
				<span class="nc">BufferedWriter</span> <span class="n">bw</span><span class="o">=</span><span class="k">new</span> <span class="nc">BufferedWriter</span><span class="o">(</span><span class="k">new</span> <span class="nc">OutputStreamWriter</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">));)</span> <span class="o">{</span>
			<span class="kt">int</span> <span class="n">tc</span><span class="o">=</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
			<span class="k">while</span><span class="o">(</span><span class="n">tc</span><span class="o">--&gt;</span><span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
				<span class="kt">char</span><span class="o">[]</span> <span class="n">p</span><span class="o">=</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">().</span><span class="na">toCharArray</span><span class="o">();</span>
				<span class="kt">int</span> <span class="n">n</span><span class="o">=</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
				<span class="kt">boolean</span> <span class="n">chk</span><span class="o">=</span><span class="kc">true</span><span class="o">;</span>
				<span class="nc">String</span> <span class="n">q</span><span class="o">=</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">();</span>
				<span class="nc">StringTokenizer</span> <span class="n">st</span><span class="o">=</span><span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">q</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span><span class="n">q</span><span class="o">.</span><span class="na">length</span><span class="o">()-</span><span class="mi">1</span><span class="o">),</span><span class="s">","</span><span class="o">);</span>
				<span class="nc">Deque</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">deq</span><span class="o">=</span><span class="k">new</span> <span class="nc">LinkedList</span><span class="o">&lt;&gt;();</span>
				<span class="k">while</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">hasMoreTokens</span><span class="o">())</span> <span class="n">deq</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">()));</span>
				<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">p</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
					<span class="kt">char</span> <span class="n">c</span><span class="o">=</span><span class="n">p</span><span class="o">[</span><span class="n">i</span><span class="o">];</span>
					<span class="k">if</span><span class="o">(</span><span class="n">c</span><span class="o">==</span><span class="sc">'R'</span><span class="o">)</span> <span class="o">{</span>
						<span class="nc">Stack</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">stk</span><span class="o">=</span><span class="k">new</span> <span class="nc">Stack</span><span class="o">&lt;&gt;();</span>
						<span class="k">while</span><span class="o">(!</span><span class="n">deq</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">())</span> <span class="n">stk</span><span class="o">.</span><span class="na">push</span><span class="o">(</span><span class="n">deq</span><span class="o">.</span><span class="na">pollFirst</span><span class="o">());</span>
						<span class="k">while</span><span class="o">(!</span><span class="n">stk</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">())</span> <span class="n">deq</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">stk</span><span class="o">.</span><span class="na">pop</span><span class="o">());</span>
					<span class="o">}</span><span class="k">else</span> <span class="o">{</span>
						<span class="k">if</span><span class="o">(</span><span class="n">deq</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">())</span> <span class="o">{</span>
							<span class="n">chk</span><span class="o">=</span><span class="kc">false</span><span class="o">;</span>
							<span class="k">break</span><span class="o">;</span>
						<span class="o">}</span><span class="k">else</span> <span class="o">{</span>
							<span class="n">deq</span><span class="o">.</span><span class="na">pollFirst</span><span class="o">();</span>
						<span class="o">}</span>
					<span class="o">}</span>
				<span class="o">}</span>
				<span class="k">if</span><span class="o">(</span><span class="n">chk</span><span class="o">)</span> <span class="o">{</span>
					<span class="nc">StringBuilder</span> <span class="n">sb</span><span class="o">=</span><span class="k">new</span> <span class="nc">StringBuilder</span><span class="o">();</span>
					<span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"["</span><span class="o">);</span>
					<span class="k">while</span><span class="o">(</span><span class="kc">true</span><span class="o">)</span> <span class="o">{</span>
						<span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="n">deq</span><span class="o">.</span><span class="na">pollFirst</span><span class="o">();</span>
						<span class="k">if</span><span class="o">(</span><span class="n">deq</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">())</span> <span class="o">{</span>
							<span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="s">"]"</span><span class="o">);</span>
							<span class="k">break</span><span class="o">;</span>
						<span class="o">}</span>
						<span class="k">else</span> <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">i</span><span class="o">+</span><span class="s">","</span><span class="o">);</span>
					<span class="o">}</span>
					<span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">sb</span><span class="o">.</span><span class="na">toString</span><span class="o">()+</span><span class="s">"\n"</span><span class="o">);</span>
				<span class="o">}</span><span class="k">else</span> <span class="o">{</span>
					<span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="s">"error\n"</span><span class="o">);</span>
				<span class="o">}</span>
				
			<span class="o">}</span>
		<span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span><span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();}</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<p>디큐를 쓴 건 좋은데 마지막에 <span style="color: orange;"><strong>deq.pollFirst() 이전에 널체크</strong></span>를 했어야 하지 않을까?<br />
모르겠고 머리아프니 새로 짜는게 낫겠다.<br />
주석도 하나도 없어서 보기 싫다.</p>

<blockquote>
  <h4 id="설계">설계</h4>
  <hr />
</blockquote>

<p>입력이 고약한게 java 쓰기 싫은데… 그래도 java로 마무리 지어야겠다.<br />
<span style="color: orange;"><strong>그냥 잘 받아서 잘 출력</strong></span>하면 그만인데 왜 틀렸을까</p>

<blockquote>
  <h4 id="구현">구현</h4>
  <hr />
</blockquote>

<h5 id="1-그지같은-입력-받기">1. 그지같은 입력 받기</h5>

<p>무조건 깔끔하게 짜는게 목표라서 스캐너를 사용한다.<br />
숫자 리스트는 앞 뒤 대괄호를 떼어주고 분해해서 deque에 넣는다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">Scanner</span> <span class="n">sc</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Scanner</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
		
<span class="kt">int</span> <span class="no">T</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">sc</span><span class="o">.</span><span class="na">nextLine</span><span class="o">());</span>

<span class="k">while</span><span class="o">(</span><span class="no">T</span><span class="o">--</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
	<span class="kt">char</span><span class="o">[]</span> <span class="n">p</span> <span class="o">=</span> <span class="n">sc</span><span class="o">.</span><span class="na">nextLine</span><span class="o">().</span><span class="na">toCharArray</span><span class="o">();</span>
	<span class="n">sc</span><span class="o">.</span><span class="na">nextLine</span><span class="o">();</span> <span class="c1">// n은 쓸데없음</span>
	<span class="nc">String</span> <span class="n">x</span> <span class="o">=</span> <span class="n">sc</span><span class="o">.</span><span class="na">nextLine</span><span class="o">();</span>
	<span class="n">x</span> <span class="o">=</span> <span class="n">x</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="n">x</span><span class="o">.</span><span class="na">length</span><span class="o">()</span> <span class="o">-</span> <span class="mi">1</span><span class="o">);</span> <span class="c1">// 앞뒤 대괄호 제거</span>
	
	<span class="c1">// deque</span>
	<span class="nc">Deque</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">deque</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">LinkedList</span><span class="o">&lt;&gt;();</span>
	
	<span class="k">if</span><span class="o">(!</span><span class="n">x</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">())</span> <span class="o">{</span>
		<span class="nc">StringTokenizer</span> <span class="n">st</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">x</span><span class="o">,</span> <span class="s">","</span><span class="o">);</span>
		<span class="k">while</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">hasMoreTokens</span><span class="o">())</span> <span class="o">{</span>
			<span class="n">deque</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">()));</span>
		<span class="o">}</span>
	<span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<h5 id="2-명령-수행하여-출력">2. 명령 수행하여 출력</h5>

<p>커서 역할을 할 불 값을 두고 R 명령어 시 변경한다.<br />
D 명령어 시 예외처리해주며 poll 한다.</p>

<p>출력 시에는 앞 뒤에 다시 대괄호가 붙어야한다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">boolean</span> <span class="n">front</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
<span class="kt">boolean</span> <span class="n">error</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>

<span class="k">for</span><span class="o">(</span><span class="kt">char</span> <span class="n">oper</span> <span class="o">:</span> <span class="n">p</span><span class="o">)</span> <span class="o">{</span>
	<span class="k">if</span> <span class="o">(</span><span class="n">oper</span> <span class="o">==</span> <span class="sc">'R'</span><span class="o">)</span> <span class="o">{</span>
		<span class="n">front</span> <span class="o">=</span> <span class="o">!</span><span class="n">front</span><span class="o">;</span>
	<span class="o">}</span>
	
	<span class="c1">// poll 할때만 error check</span>
	<span class="k">if</span> <span class="o">(</span><span class="n">oper</span> <span class="o">==</span> <span class="sc">'D'</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">if</span> <span class="o">(</span><span class="n">deque</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">&lt;</span> <span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
			<span class="n">error</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
			<span class="k">break</span><span class="o">;</span>
		<span class="o">}</span>
		
		<span class="k">if</span> <span class="o">(</span><span class="n">front</span><span class="o">)</span> <span class="n">deque</span><span class="o">.</span><span class="na">pollFirst</span><span class="o">();</span>
		<span class="k">else</span> <span class="n">deque</span><span class="o">.</span><span class="na">pollLast</span><span class="o">();</span>
	<span class="o">}</span>
<span class="o">}</span>

<span class="k">if</span> <span class="o">(</span><span class="n">error</span><span class="o">)</span> <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"error"</span><span class="o">);</span>
<span class="k">else</span> <span class="o">{</span>
	<span class="nc">StringBuilder</span> <span class="n">sb</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringBuilder</span><span class="o">();</span>
	<span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"["</span><span class="o">);</span>
	
	<span class="c1">// deque 출력</span>
	<span class="k">while</span><span class="o">(!</span><span class="n">deque</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">())</span> <span class="o">{</span>
		<span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">((</span><span class="n">sb</span><span class="o">.</span><span class="na">length</span><span class="o">()</span> <span class="o">==</span> <span class="mi">1</span> <span class="o">?</span> <span class="s">""</span> <span class="o">:</span> <span class="s">","</span><span class="o">));</span>
		<span class="k">if</span> <span class="o">(</span><span class="n">front</span><span class="o">)</span> <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">deque</span><span class="o">.</span><span class="na">pollFirst</span><span class="o">());</span>
		<span class="k">else</span> <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">deque</span><span class="o">.</span><span class="na">pollLast</span><span class="o">());</span>
	<span class="o">}</span>
	
	<span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"]"</span><span class="o">);</span>
	<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">sb</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
<span class="o">}</span>
</code></pre></div></div>

<blockquote>
  <h4 id="채점">채점</h4>
  <hr />
</blockquote>

<p><img src="/assets/images/posts/BOJ/Java/2025-06-17-5410/img02.webp" alt="img02" /></p>

<blockquote>
  <h4 id="반성">반성</h4>
  <hr />
</blockquote>

<p>입력도 그지같은데 출력도 그지같아서 대괄호 출력 부분에서 실수가 나서 한 번 틀렸다.<br />
5년 전의 나야 내가 너를 구원했단다… 그곳에서는 편안하렴…</p>

<blockquote>
  <h4 id="코드-확인">코드 확인</h4>
  <hr />
</blockquote>

<p><a href="https://raw.githubusercontent.com/movingwoo/movingwoo-snippets/refs/heads/main/BOJ/Java/2025-06-17-5430.java">Link to GitHub</a></p>]]></content><author><name>movingwoo</name></author><category term="BOJ/Java/" /><category term="JAVA" /><category term="알고리즘" /><category term="백준" /><category term="5430" /><category term="AC" /><category term="구현" /><summary type="html"><![CDATA[백준 5430번 AC JAVA 문제풀이]]></summary></entry><entry><title type="html">3655번 먼저 가세요</title><link href="https://movingwoo.com/boj/python/2025/06/16/3655.html" rel="alternate" type="text/html" title="3655번 먼저 가세요" /><published>2025-06-16T08:00:00+00:00</published><updated>2025-06-17T06:00:00+00:00</updated><id>https://movingwoo.com/boj/python/2025/06/16/3655</id><content type="html" xml:base="https://movingwoo.com/boj/python/2025/06/16/3655.html"><![CDATA[<blockquote>
  <h4 id="문제">문제</h4>
  <hr />
</blockquote>

<p><img src="/assets/images/posts/random-solve/Python/2025-06-16-3655/img01.webp" alt="img01" /></p>

<p><a href="https://www.acmicpc.net/problem/3655">3655번 먼저 가세요 - 백준</a></p>

<blockquote>
  <h4 id="설계">설계</h4>
  <hr />
</blockquote>

<p>쉬워보였는데 생각할게 좀 많다.<br />
양보를 하게되면 그룹의 첫 사람과 마지막 사람의 순서차이 * 5초만큼 이득이다.<br />
공식 잘 만들면 되려나 싶어서 계산해봤는데 너무 복잡하다.<br />
고려할게 너무 많다.</p>

<p>그렇다면 그리디는 어떨까?<br />
큐를 만들어서 넣고 만지작거리는데 너무 오래걸릴 것 같은 예감<br />
그리디도 결국 시뮬레이션인데 넣다 뺐다 하다보니 이게 맞나 싶다.</p>

<p>복잡한 두번째 예제를 보며 다시 정리를 해보자.</p>

<p><span style="color: orange;"><strong>Ab9AAb2bC2</strong></span></p>

<p>양보받은 경우를 가정하고 그룹별로 정리한다면?<br />
그룹의 가장 마지막 사람이 앞으로 당겨오는 느낌으로 정리해야한다.<br />
양보를 하면서 손해가 발생하면 절대 안된다.</p>

<p><span style="color: orange;"><strong>9AAAbbbC22</strong></span></p>

<p>이렇게 하고 각 그룹의 이득을 계산해보면(처음 줄의 마지막 인덱스와 정리 후 마지막 인덱스의 차)<br />
<span style="color: orange;"><strong>A - 1</strong></span><br />
<span style="color: orange;"><strong>b - 1</strong></span><br />
<span style="color: orange;"><strong>9 - 2</strong></span><br />
<span style="color: orange;"><strong>2 - 0</strong></span><br />
<span style="color: orange;"><strong>C - 1</strong></span></p>

<p>여기에 시간 5초와 각 그룹원의 수를 곱해주면<br />
<span style="color: orange;"><strong>1 * 5 * 3 + 1 * 5 * 3 + 2 * 5 * 1 + 0 * 5 * 2 + 1 * 5 * 1 = 45</strong></span><br />
정답이 나왔다.</p>

<p>결국 정렬이 관건으로 보인다.</p>

<blockquote>
  <h4 id="구현">구현</h4>
  <hr />
</blockquote>

<h5 id="1-정렬">1. 정렬</h5>

<p>각 그룹의 전체 인원 수와 최초 상태에서의 마지막 인덱스를 찾아서 리스트로 만든 후 정렬한다.<br />
분명 sort 함수를 쓰면 될건데…</p>

<p>Java나 C는 정렬함수를 커스텀해봤는데 Python은 해본 적이 없다.<br />
일단 그냥 선택정렬을 직접 구현하고 풀고 난 다음에 공부하자.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">n</span> <span class="o">=</span> <span class="nf">int</span><span class="p">(</span><span class="nf">input</span><span class="p">())</span>
<span class="n">people</span> <span class="o">=</span> <span class="nf">list</span><span class="p">(</span><span class="nf">input</span><span class="p">().</span><span class="nf">strip</span><span class="p">())</span>

<span class="n">count</span> <span class="o">=</span> <span class="p">{}</span>
<span class="n">last_index</span> <span class="o">=</span> <span class="p">{}</span>

<span class="c1"># 각 그룹 별 인원 수 카운팅
</span><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="n">n</span><span class="p">):</span>

    <span class="k">if</span> <span class="n">people</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">count</span><span class="p">:</span>
        <span class="n">count</span><span class="p">[</span><span class="n">people</span><span class="p">[</span><span class="n">i</span><span class="p">]]</span> <span class="o">=</span> <span class="mi">1</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="n">count</span><span class="p">[</span><span class="n">people</span><span class="p">[</span><span class="n">i</span><span class="p">]]</span> <span class="o">+=</span> <span class="mi">1</span>
    
    <span class="c1"># 그룹의 마지막 인덱스
</span>    <span class="n">last_index</span><span class="p">[</span><span class="n">people</span><span class="p">[</span><span class="n">i</span><span class="p">]]</span> <span class="o">=</span> <span class="n">i</span>


<span class="n">groups</span> <span class="o">=</span> <span class="nf">list</span><span class="p">(</span><span class="n">last_index</span><span class="p">.</span><span class="nf">items</span><span class="p">())</span>

<span class="c1"># 그룹의 마지막 인덱스 기준으로 선택 정렬 
</span><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="nf">len</span><span class="p">(</span><span class="n">groups</span><span class="p">)):</span>
    <span class="n">idx</span> <span class="o">=</span> <span class="n">i</span>
    <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="n">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,</span> <span class="nf">len</span><span class="p">(</span><span class="n">groups</span><span class="p">)):</span>
        <span class="k">if</span> <span class="n">groups</span><span class="p">[</span><span class="n">idx</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span> <span class="o">&gt;</span> <span class="n">groups</span><span class="p">[</span><span class="n">j</span><span class="p">][</span><span class="mi">1</span><span class="p">]:</span>
            <span class="n">idx</span> <span class="o">=</span> <span class="n">j</span>

    <span class="n">groups</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="n">groups</span><span class="p">[</span><span class="n">idx</span><span class="p">]</span> <span class="o">=</span> <span class="n">groups</span><span class="p">[</span><span class="n">idx</span><span class="p">],</span> <span class="n">groups</span><span class="p">[</span><span class="n">i</span><span class="p">]</span>
</code></pre></div></div>

<h5 id="2-절약시간-구하기">2. 절약시간 구하기</h5>

<p>위에서 예제로 확인했듯이 실제 절약된 시간은 (저장해둔 마지막 인덱스 - 현재 마지막 인덱스) * 5 * 인원 수 이다.<br />
정렬한 리스트와 미리 찾아둔 값을 비교하여 계산한다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">result</span> <span class="o">=</span> <span class="mi">0</span>
<span class="n">idx</span> <span class="o">=</span> <span class="mi">0</span>

<span class="c1"># 실제 절약된 시간 = (저장해둔 마지막 인덱스 - 현재 마지막 인덱스) * 5 * 인원 수
</span><span class="k">for</span> <span class="n">group</span><span class="p">,</span> <span class="n">index</span> <span class="ow">in</span> <span class="n">groups</span><span class="p">:</span>
    <span class="n">group_count</span> <span class="o">=</span> <span class="n">count</span><span class="p">[</span><span class="n">group</span><span class="p">]</span>
    <span class="n">last_group_idx</span> <span class="o">=</span> <span class="n">idx</span> <span class="o">+</span> <span class="n">group_count</span> <span class="o">-</span> <span class="mi">1</span>

    <span class="n">time</span> <span class="o">=</span> <span class="p">(</span><span class="n">index</span> <span class="o">-</span> <span class="n">last_group_idx</span><span class="p">)</span> <span class="o">*</span> <span class="mi">5</span> <span class="o">*</span> <span class="n">group_count</span>

    <span class="n">result</span> <span class="o">+=</span> <span class="n">time</span>
    <span class="n">idx</span> <span class="o">+=</span> <span class="n">group_count</span>

<span class="nf">print</span><span class="p">(</span><span class="n">result</span><span class="p">)</span>
</code></pre></div></div>

<blockquote>
  <h4 id="채점">채점</h4>
  <hr />
</blockquote>

<p><img src="/assets/images/posts/random-solve/Python/2025-06-16-3655/img02.webp" alt="img02" /></p>

<blockquote>
  <h4 id="반성">반성</h4>
  <hr />
</blockquote>

<p>파이썬 sort 함수를 쓰면 어떻게 되는지 확인한다.<br />
람다식을 쓰면 이렇게 된다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">groups</span> <span class="o">=</span> <span class="nf">sorted</span><span class="p">(</span><span class="n">last_index</span><span class="p">.</span><span class="nf">items</span><span class="p">(),</span> <span class="n">key</span><span class="o">=</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="n">x</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span>
</code></pre></div></div>

<p>이걸 def로 풀어쓰면 아래와 같다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">get_last_index</span><span class="p">(</span><span class="n">item</span><span class="p">):</span>
    <span class="k">return</span> <span class="n">item</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>

<span class="n">groups</span> <span class="o">=</span> <span class="nf">sorted</span><span class="p">(</span><span class="n">last_index</span><span class="p">.</span><span class="nf">items</span><span class="p">(),</span> <span class="n">key</span><span class="o">=</span><span class="n">get_last_index</span><span class="p">)</span>
</code></pre></div></div>

<p>풀어쓰니 모양이 익숙한게 자바랑 비슷해보인다.<br />
다음에 정렬할 일 있으면 활용할 수 있겠다.</p>

<p>쉬운문제인줄 알고 대충 풀다가 어? 어? 하면서 갈아엎느라 유독 변수명이 개판된거 같다.<br />
원래 변수명 신경쓰는 편은 아니지만 맘에 걸린다.</p>

<blockquote>
  <h4 id="코드-확인">코드 확인</h4>
  <hr />
</blockquote>

<p><a href="https://raw.githubusercontent.com/movingwoo/movingwoo-snippets/refs/heads/main/random-solve/Python/2025-06-16-3655.py">Link to GitHub</a></p>]]></content><author><name>movingwoo</name></author><category term="BOJ/Python/" /><category term="PYTHON" /><category term="알고리즘" /><category term="백준" /><category term="3655" /><category term="먼저 가세요" /><category term="정렬" /><summary type="html"><![CDATA[백준 3655번 먼저 가세요 PYTHON 문제풀이]]></summary></entry><entry><title type="html">10722번 Binary Mobile Tree</title><link href="https://movingwoo.com/boj/c++/2025/06/16/10722.html" rel="alternate" type="text/html" title="10722번 Binary Mobile Tree" /><published>2025-06-16T05:00:00+00:00</published><updated>2025-06-17T06:00:00+00:00</updated><id>https://movingwoo.com/boj/c++/2025/06/16/10722</id><content type="html" xml:base="https://movingwoo.com/boj/c++/2025/06/16/10722.html"><![CDATA[<blockquote>
  <h4 id="문제">문제</h4>
  <hr />
</blockquote>

<p><img src="/assets/images/posts/random-solve/C++/2025-06-16-10722/img01.webp" alt="img01" /></p>

<p><a href="https://www.acmicpc.net/problem/10722">10722번 Binary Mobile Tree - 백준</a></p>

<blockquote>
  <h4 id="설계">설계</h4>
  <hr />
</blockquote>

<p>모빌의 크기를 구하는 문제인데 눈여겨볼 조건은 아래인 것 같다.</p>
<ul>
  <li><span style="color: orange;"><strong>양수는 구슬 음수는 막대</strong></span></li>
  <li><span style="color: orange;"><strong>1번 막대가 루트 노드 (-1)</strong></span></li>
  <li><span style="color: orange;"><strong>구슬은 질량만 있고 부피는 없음</strong></span></li>
</ul>

<p>DFS를 사용해서 탐색하며 질량과 막대너비를 전달하면 되겠지 아마</p>

<blockquote>
  <h4 id="구현">구현</h4>
  <hr />
</blockquote>

<p>재귀호출하며 길이와 질량 정보를 받아 합친다.<br />
<span style="color: orange;"><strong>왼쪽 질량 * 왼쪽 거리 == 오른쪽 질량 * 오른쪽 거리</strong></span> 공식에 따라 양쪽 거리를 구하고<br />
서브트리가 반대로 퍼지는 걸 고려해서 좌우 폭을 구해 더해서 출력한다.</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// DFS</span>
<span class="n">tuple</span><span class="o">&lt;</span><span class="kt">double</span><span class="p">,</span> <span class="kt">double</span><span class="p">,</span> <span class="kt">double</span><span class="o">&gt;</span> <span class="n">DFS</span><span class="p">(</span><span class="kt">int</span> <span class="n">node</span><span class="p">,</span> <span class="k">const</span> <span class="n">vector</span><span class="o">&lt;</span><span class="n">tuple</span><span class="o">&lt;</span><span class="kt">int</span><span class="p">,</span> <span class="kt">int</span><span class="p">,</span> <span class="kt">int</span><span class="o">&gt;&gt;</span> <span class="o">&amp;</span><span class="n">bar</span><span class="p">)</span> <span class="p">{</span>

    <span class="c1">// 양수면 구슬, 질량만 있음</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">node</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">return</span> <span class="p">{</span><span class="k">static_cast</span><span class="o">&lt;</span><span class="kt">double</span><span class="o">&gt;</span><span class="p">(</span><span class="n">node</span><span class="p">),</span> <span class="mf">0.0</span><span class="p">,</span> <span class="mf">0.0</span><span class="p">};</span>
    <span class="p">}</span>

    <span class="c1">// 음수면 막대</span>
    <span class="k">auto</span> <span class="p">[</span><span class="n">len</span><span class="p">,</span> <span class="n">l</span><span class="p">,</span> <span class="n">r</span><span class="p">]</span> <span class="o">=</span> <span class="n">bar</span><span class="p">[</span><span class="o">-</span><span class="n">node</span><span class="p">];</span>


    <span class="k">auto</span> <span class="p">[</span><span class="n">lm</span><span class="p">,</span> <span class="n">ll</span><span class="p">,</span> <span class="n">lr</span><span class="p">]</span> <span class="o">=</span> <span class="n">DFS</span><span class="p">(</span><span class="n">l</span><span class="p">,</span> <span class="n">bar</span><span class="p">);</span>
    <span class="k">auto</span> <span class="p">[</span><span class="n">rm</span><span class="p">,</span> <span class="n">rl</span><span class="p">,</span> <span class="n">rr</span><span class="p">]</span> <span class="o">=</span> <span class="n">DFS</span><span class="p">(</span><span class="n">r</span><span class="p">,</span> <span class="n">bar</span><span class="p">);</span>

    <span class="kt">double</span> <span class="n">tm</span> <span class="o">=</span> <span class="n">lm</span> <span class="o">+</span> <span class="n">rm</span><span class="p">;</span>

    <span class="c1">// 왼쪽 질량 * 왼쪽 거리 == 오른쪽 질량 * 오른쪽 거리</span>
    <span class="kt">double</span> <span class="n">ldist</span> <span class="o">=</span> <span class="n">len</span> <span class="o">*</span> <span class="p">(</span><span class="n">rm</span> <span class="o">/</span> <span class="n">tm</span><span class="p">);</span>
    <span class="kt">double</span> <span class="n">rdist</span> <span class="o">=</span> <span class="n">len</span> <span class="o">-</span> <span class="n">ldist</span><span class="p">;</span>

    <span class="c1">// 서브트리가 반대로 퍼지는 경우를 고려해야함</span>
    <span class="kt">double</span> <span class="n">lw</span> <span class="o">=</span> <span class="n">min</span><span class="p">(</span><span class="o">-</span><span class="n">ldist</span> <span class="o">-</span> <span class="n">ll</span><span class="p">,</span> <span class="n">rdist</span> <span class="o">-</span> <span class="n">rl</span><span class="p">);</span>
    <span class="kt">double</span> <span class="n">rw</span> <span class="o">=</span> <span class="n">max</span><span class="p">(</span><span class="o">-</span><span class="n">ldist</span> <span class="o">+</span> <span class="n">lr</span><span class="p">,</span> <span class="n">rdist</span> <span class="o">+</span> <span class="n">rr</span><span class="p">);</span>

    <span class="k">return</span> <span class="p">{</span><span class="n">tm</span><span class="p">,</span> <span class="o">-</span><span class="n">lw</span><span class="p">,</span> <span class="n">rw</span><span class="p">};</span>
<span class="p">}</span>

<span class="c1">// ... 중략 ...</span>

<span class="c1">// 루트 노드는 -1</span>
<span class="k">auto</span> <span class="p">[</span><span class="n">mass</span><span class="p">,</span> <span class="n">left</span><span class="p">,</span> <span class="n">right</span><span class="p">]</span> <span class="o">=</span> <span class="n">DFS</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="n">bar</span><span class="p">);</span>

<span class="n">printf</span><span class="p">(</span><span class="s">"%.6f</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="n">left</span> <span class="o">+</span> <span class="n">right</span><span class="p">);</span>
</code></pre></div></div>

<blockquote>
  <h4 id="채점">채점</h4>
  <hr />
</blockquote>

<p><img src="/assets/images/posts/random-solve/C++/2025-06-16-10722/img02.webp" alt="img02" /></p>

<blockquote>
  <h4 id="반성">반성</h4>
  <hr />
</blockquote>

<p>auto 사용에 더 익숙해져야겠다.<br />
좋은 건 잘 써먹어야지<br />
엄청 깨끗하고 짧고 좋지 않은가?</p>

<blockquote>
  <h4 id="코드-확인">코드 확인</h4>
  <hr />
</blockquote>

<p><a href="https://raw.githubusercontent.com/movingwoo/movingwoo-snippets/refs/heads/main/random-solve/C%2B%2B/2025-06-16-10722.cpp">Link to GitHub</a></p>]]></content><author><name>movingwoo</name></author><category term="BOJ/C++/" /><category term="C++" /><category term="알고리즘" /><category term="백준" /><category term="10722" /><category term="Binary Mobile Tree" /><category term="DFS" /><summary type="html"><![CDATA[백준 10722번 Binary Mobile Tree C++ 문제풀이]]></summary></entry><entry><title type="html">24008번 Catch Them All</title><link href="https://movingwoo.com/boj/java/2025/06/13/24008.html" rel="alternate" type="text/html" title="24008번 Catch Them All" /><published>2025-06-13T07:00:00+00:00</published><updated>2025-06-17T06:00:00+00:00</updated><id>https://movingwoo.com/boj/java/2025/06/13/24008</id><content type="html" xml:base="https://movingwoo.com/boj/java/2025/06/13/24008.html"><![CDATA[<blockquote>
  <h4 id="문제">문제</h4>
  <hr />
</blockquote>

<p><img src="/assets/images/posts/random-solve/Java/2025-06-13-24008/img01.webp" alt="img01" /></p>

<p><a href="https://www.acmicpc.net/problem/24008">24008번 Catch Them All - 백준</a></p>

<blockquote>
  <h4 id="번역">번역</h4>
  <hr />
</blockquote>

<p>Codejamon GO 게임을 한다.<br />
도시는 1부터 N까지 장소가 있으며 M개의 양방향 도로가 있고 <span style="color: orange;"><strong>시작 지점은 항상 1</strong></span>이다.</p>

<p>Codejamon이 랜덤 장소에 등장하면 가장 빠른 경로로 이동해 잡는다.<br />
잡은 즉시 다른 랜덤 위치에 Codejamon이 나타난다.</p>

<p>총 P마리 Codejamon을 잡을 때 기대 소요 시간을 구하시오.</p>

<blockquote>
  <h4 id="설계">설계</h4>
  <hr />
</blockquote>

<p>푸키먼 고를 흉내낸 문제.</p>

<p>현재 장소를 제외한 무작위 위치에 푸키먼이 등장하는데<br />
우선 각 위치에서 다른 모든 위치까지의 최단 거리를 알아야한다.</p>

<p>거리를 알게되면 이동시간을 구할 수 있고 이동시간을 알면 평균을 낼 수 있다.<br />
이를 P번 반복해서 기대 소요 시간을 구한다.</p>

<blockquote>
  <h4 id="구현">구현</h4>
  <hr />
</blockquote>

<h5 id="1-그래프-그리기">1. 그래프 그리기</h5>

<p>입력받아서 그래프를 그려준다.<br />
<span style="color: orange;"><strong>중복 간선이 없다는게 보장</strong></span>되므로 그냥 쑥쑥 집어넣기만 하면 된다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">try</span><span class="o">(</span><span class="nc">BufferedReader</span> <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">InputStreamReader</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">));</span>
	<span class="nc">BufferedWriter</span> <span class="n">bw</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedWriter</span><span class="o">(</span><span class="k">new</span> <span class="nc">OutputStreamWriter</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">))){</span>
	
	<span class="kt">int</span> <span class="no">T</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">().</span><span class="na">trim</span><span class="o">());</span>
	
	<span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">t</span> <span class="o">=</span> <span class="mi">1</span> <span class="o">;</span> <span class="n">t</span> <span class="o">&lt;=</span> <span class="no">T</span> <span class="o">;</span> <span class="n">t</span><span class="o">++)</span> <span class="o">{</span>
		
		<span class="nc">StringTokenizer</span> <span class="n">st</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">().</span><span class="na">trim</span><span class="o">(),</span> <span class="s">" "</span><span class="o">);</span>
		<span class="kt">int</span> <span class="no">N</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
		<span class="kt">int</span> <span class="no">M</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
		<span class="kt">int</span> <span class="no">P</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
		
		<span class="c1">// 그래프 초기화</span>
		<span class="kt">int</span><span class="o">[][]</span> <span class="n">dist</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="no">N</span> <span class="o">+</span> <span class="mi">1</span><span class="o">][</span><span class="no">N</span> <span class="o">+</span> <span class="mi">1</span><span class="o">];</span>
		
		<span class="k">for</span><span class="o">(</span> <span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span> <span class="o">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="no">N</span> <span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
			<span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">1</span> <span class="o">;</span> <span class="n">j</span> <span class="o">&lt;=</span> <span class="no">N</span> <span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
				<span class="c1">// U V D가 크지않아서 적당히 큰 값 세팅</span>
				<span class="n">dist</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]</span> <span class="o">=</span> <span class="n">i</span> <span class="o">==</span> <span class="n">j</span> <span class="o">?</span> <span class="mi">0</span> <span class="o">:</span> <span class="mi">100000</span><span class="o">;</span>
			<span class="o">}</span>
		<span class="o">}</span>
		
		<span class="c1">// 간선 등록</span>
		<span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span> <span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="no">M</span> <span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
			<span class="n">st</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">().</span><span class="na">trim</span><span class="o">(),</span> <span class="s">" "</span><span class="o">);</span>
			
			<span class="kt">int</span> <span class="no">U</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
			<span class="kt">int</span> <span class="no">V</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
			<span class="kt">int</span> <span class="no">D</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
			
			<span class="c1">// 양방향</span>
			<span class="n">dist</span><span class="o">[</span><span class="no">U</span><span class="o">][</span><span class="no">V</span><span class="o">]</span> <span class="o">=</span> <span class="no">D</span><span class="o">;</span>
			<span class="n">dist</span><span class="o">[</span><span class="no">V</span><span class="o">][</span><span class="no">U</span><span class="o">]</span> <span class="o">=</span> <span class="no">D</span><span class="o">;</span>
		<span class="o">}</span>
	<span class="o">}</span>
	
<span class="o">}</span><span class="k">catch</span><span class="o">(</span><span class="nc">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
	<span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
<span class="o">}</span>
</code></pre></div></div>

<h5 id="2-최단거리">2. 최단거리</h5>

<p><span style="color: orange;"><strong>플로이드 워셜 알고리즘</strong></span>을 사용한다.<br />
시간 복잡도가 O(N^3) 인데 N이 크지가 않아서 괜찮을거다.<br />
다익스트라보다 간단하다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// 플로이드 워셜 알고리즘</span>
<span class="c1">// 경유지 k가 가장 바깥</span>
<span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">k</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span> <span class="n">k</span> <span class="o">&lt;=</span> <span class="no">N</span> <span class="o">;</span> <span class="n">k</span><span class="o">++)</span> <span class="o">{</span>
	<span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span> <span class="o">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="no">N</span> <span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
		<span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">1</span> <span class="o">;</span> <span class="n">j</span> <span class="o">&lt;=</span> <span class="no">N</span> <span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
			<span class="c1">// k 를 경유해서 가는게 더 빠르면 갱신</span>
			<span class="n">dist</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]</span> <span class="o">=</span> <span class="nc">Math</span><span class="o">.</span><span class="na">min</span><span class="o">(</span><span class="n">dist</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">],</span> <span class="n">dist</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">k</span><span class="o">]</span> <span class="o">+</span> <span class="n">dist</span><span class="o">[</span><span class="n">k</span><span class="o">][</span><span class="n">j</span><span class="o">])</span> <span class="o">;</span>
		<span class="o">}</span>
	<span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<h5 id="3-시간-계산">3. 시간 계산</h5>

<p>원래 대충 근사값 계산했는데 계속 틀렸다고해서 수학공부를 좀 진행해야했다.<br />
단순 근사값 계산 대신 <span style="color: orange;"><strong>마르코프 체인</strong></span>을 활용해 P (최대 10^9) 에 대한 누적 기대 시간을 효율적으로 추정한다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// 시간 계산</span>
<span class="c1">// 첫번째는 반드시 1번에서 출발</span>
<span class="kt">double</span> <span class="n">start</span> <span class="o">=</span> <span class="mf">0.0</span><span class="o">;</span>
<span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">2</span> <span class="o">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="no">N</span> <span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
	<span class="n">start</span> <span class="o">+=</span> <span class="n">dist</span><span class="o">[</span><span class="mi">1</span><span class="o">][</span><span class="n">i</span><span class="o">];</span>
<span class="o">}</span>
<span class="n">start</span> <span class="o">/=</span> <span class="o">(</span><span class="kt">double</span><span class="o">)(</span><span class="no">N</span> <span class="o">-</span> <span class="mi">1</span><span class="o">);</span>

<span class="c1">// 같은 위치 제외 모든 거리의 평균</span>
<span class="kt">double</span> <span class="n">result</span> <span class="o">=</span> <span class="mf">0.0</span><span class="o">;</span>
<span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span> <span class="o">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="no">N</span> <span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
	<span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">1</span> <span class="o">;</span> <span class="n">j</span> <span class="o">&lt;=</span> <span class="no">N</span> <span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
		<span class="k">if</span> <span class="o">(</span><span class="n">i</span> <span class="o">==</span> <span class="n">j</span><span class="o">)</span> <span class="k">continue</span><span class="o">;</span>
		
		<span class="n">result</span> <span class="o">+=</span> <span class="n">dist</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">];</span>
	<span class="o">}</span>
<span class="o">}</span>
<span class="c1">// N * (N - 1)</span>
<span class="n">result</span> <span class="o">/=</span> <span class="o">(</span><span class="no">N</span> <span class="o">*</span> <span class="o">(</span><span class="kt">double</span><span class="o">)(</span><span class="no">N</span> <span class="o">-</span> <span class="mi">1</span><span class="o">));</span>

<span class="c1">// 근사값 계산했더니 틀려서 상세하게 접근</span>
<span class="c1">// 람다</span>
<span class="kt">double</span> <span class="n">lambda</span> <span class="o">=</span> <span class="o">-</span><span class="mf">1.0</span> <span class="o">/</span> <span class="o">(</span><span class="no">N</span> <span class="o">-</span> <span class="mi">1</span><span class="o">);</span>
<span class="c1">// 기하급수 합</span>
<span class="kt">double</span> <span class="n">geoSum</span> <span class="o">=</span> <span class="o">(</span><span class="mi">1</span> <span class="o">-</span> <span class="nc">Math</span><span class="o">.</span><span class="na">pow</span><span class="o">(</span><span class="n">lambda</span><span class="o">,</span> <span class="no">P</span><span class="o">))</span> <span class="o">/</span> <span class="o">(</span><span class="mi">1</span> <span class="o">-</span> <span class="n">lambda</span><span class="o">);</span>

<span class="n">result</span> <span class="o">=</span> <span class="n">result</span> <span class="o">*</span> <span class="no">P</span> <span class="o">+</span> <span class="o">(</span><span class="n">start</span> <span class="o">-</span> <span class="n">result</span><span class="o">)</span> <span class="o">*</span> <span class="n">geoSum</span><span class="o">;</span>

<span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="nc">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">"Case #%d: %.6f\n"</span><span class="o">,</span> <span class="n">t</span><span class="o">,</span> <span class="n">result</span><span class="o">));</span>
</code></pre></div></div>

<blockquote>
  <h4 id="채점">채점</h4>
  <hr />
</blockquote>

<p><img src="/assets/images/posts/random-solve/Java/2025-06-13-24008/img02.webp" alt="img02" /></p>

<blockquote>
  <h4 id="반성">반성</h4>
  <hr />
</blockquote>

<p>이상한 일이 있다.<br />
분명히 처음에 예제 입력이 너무 개판이었다.<br />
한 줄에 3개씩 숫자가 들어와야하는데 4개 2개 이렇게 개판으로 들어와서 입력을 희한하게도 주네 했는데<br />
<span style="color: red;"><strong>문제 맞추고 다시 보니 예제가 3개씩 들어오는 것으로 정상화 되어있다.</strong></span></p>

<p><span style="color: red;"><strong>최면 걸렸나? 사이버 귀신인가?</strong></span></p>

<p>그래서 다시 입력받는 부분 간소화하고 돌렸더니 메모리와 시간이 확 줄었다.<br />
진짜 무슨 일이 일어난거지</p>

<blockquote>
  <h4 id="코드-확인">코드 확인</h4>
  <hr />
</blockquote>

<p><a href="https://raw.githubusercontent.com/movingwoo/movingwoo-snippets/refs/heads/main/random-solve/Java/2025-06-13-24008.java">Link to GitHub</a></p>]]></content><author><name>movingwoo</name></author><category term="BOJ/Java/" /><category term="JAVA" /><category term="알고리즘" /><category term="백준" /><category term="24008" /><category term="Catch Them All" /><category term="최단거리" /><summary type="html"><![CDATA[백준 24008번 Catch Them All JAVA 문제풀이]]></summary></entry><entry><title type="html">16256번 Painting the Wall</title><link href="https://movingwoo.com/boj/c++/2025/06/13/16256.html" rel="alternate" type="text/html" title="16256번 Painting the Wall" /><published>2025-06-13T01:00:00+00:00</published><updated>2025-06-17T06:00:00+00:00</updated><id>https://movingwoo.com/boj/c++/2025/06/13/16256</id><content type="html" xml:base="https://movingwoo.com/boj/c++/2025/06/13/16256.html"><![CDATA[<blockquote>
  <h4 id="문제">문제</h4>
  <hr />
</blockquote>

<p><img src="/assets/images/posts/random-solve/C++/2025-06-13-16256/img01.webp" alt="img01" /></p>

<p><a href="https://www.acmicpc.net/problem/16256">16256번 Painting the Wall - 백준</a></p>

<blockquote>
  <h4 id="번역">번역</h4>
  <hr />
</blockquote>

<p>정사각형 타일로 구성된 n * m 사이즈의 벽이 있다.<br />
타일의 일부는 램프다.(0이면 램프 1이면 타일)</p>

<p>타일에 페인트를 칠하려 한다.<br />
<span style="color: orange;"><strong>수직 또는 수평으로 연속된 타일이 있을 때 각 타일은 모두 다른 색의 페인트로 칠해야한다.</strong></span><br />
서로 다른 색상의 페인트 k개가 있을 때 모두 다른 색상으로 벽을 칠할 수 있으면 YES와 페인트칠 한 예시를<br />
불가능하면 NO를 출력한다.</p>

<p>k개의 페인트를 모두 사용할 필요는 없다.</p>

<blockquote>
  <h4 id="설계">설계</h4>
  <hr />
</blockquote>

<p>페인트칠 불가능한 조건부터 생각해보자.<br />
<span style="color: orange;"><strong>타일이 연속된 구간 중 가장 긴 구간의 길이가 k보다 크면 색칠이 불가능</strong></span>하다.<br />
가령 1 1 1 인 경우 연속 구간의 페인트 색은 모두 달라야 하기 때문에 k가 3보다 작다면 NO를 출력해야한다.</p>

<p>구간 확인 후 색칠이 가능하면 각 연속 구간 내 1부터 k까지 칠해서 출력한다.</p>

<blockquote>
  <h4 id="구현">구현</h4>
  <hr />
</blockquote>

<h5 id="1-불가능한-경우">1. 불가능한 경우</h5>

<p>타일이 연속되는 구간을 확인해 k와 비교해서 페인트칠 가능한지 확인한다.</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">vector</span><span class="o">&lt;</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;&gt;</span> <span class="n">wall</span><span class="p">(</span><span class="n">n</span><span class="p">,</span> <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span><span class="p">(</span><span class="n">m</span><span class="p">));</span>

<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">n</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">m</span><span class="p">;</span> <span class="o">++</span><span class="n">j</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">wall</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">];</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="kt">bool</span> <span class="n">paintable</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>

<span class="c1">// 연속된 행 방향 타일 구간 탐색</span>
<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span> <span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">n</span> <span class="o">&amp;&amp;</span> <span class="n">paintable</span> <span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span> <span class="p">{</span>
    <span class="kt">int</span> <span class="n">cnt</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>

    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">0</span> <span class="p">;</span> <span class="n">j</span> <span class="o">&lt;=</span> <span class="n">m</span> <span class="p">;</span> <span class="o">++</span><span class="n">j</span><span class="p">)</span> <span class="p">{</span> 
        <span class="k">if</span> <span class="p">(</span><span class="n">j</span> <span class="o">&lt;</span> <span class="n">m</span> <span class="o">&amp;&amp;</span> <span class="n">wall</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="o">==</span> <span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">cnt</span><span class="o">++</span><span class="p">;</span>
        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">cnt</span> <span class="o">&gt;</span> <span class="n">k</span><span class="p">)</span> <span class="p">{</span>
                <span class="n">paintable</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
                <span class="k">break</span><span class="p">;</span>
            <span class="p">}</span>

            <span class="n">cnt</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="c1">// 연속된 열 방향 타일 구간 탐색</span>
<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">0</span> <span class="p">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">m</span> <span class="o">&amp;&amp;</span> <span class="n">paintable</span> <span class="p">;</span> <span class="o">++</span><span class="n">j</span><span class="p">)</span> <span class="p">{</span>
    <span class="kt">int</span> <span class="n">cnt</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>

    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span> <span class="p">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">n</span> <span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">i</span> <span class="o">&lt;</span> <span class="n">n</span> <span class="o">&amp;&amp;</span> <span class="n">wall</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="o">==</span> <span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">cnt</span><span class="o">++</span><span class="p">;</span>
        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">cnt</span> <span class="o">&gt;</span> <span class="n">k</span><span class="p">)</span> <span class="p">{</span>
                <span class="n">paintable</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
                <span class="k">break</span><span class="p">;</span>
            <span class="p">}</span>
            
            <span class="n">cnt</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">paintable</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"NO</span><span class="se">\n</span><span class="s">"</span><span class="p">;</span>
    <span class="k">continue</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<h5 id="2-가능한-경우">2. 가능한 경우</h5>

<p>색칠이 가능하면 겹치지 않게 숫자를 매긴다.<br />
겹치지만 않으면 되므로 mod 연산으로 대충 뿌려준다.</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// 가능하면 페인트칠</span>
<span class="n">vector</span><span class="o">&lt;</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;&gt;</span> <span class="n">painted_wall</span><span class="p">(</span><span class="n">n</span><span class="p">,</span> <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span><span class="p">(</span><span class="n">m</span><span class="p">,</span> <span class="mi">0</span><span class="p">));</span>

<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">n</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">){</span>
    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">m</span><span class="p">;</span> <span class="o">++</span><span class="n">j</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">wall</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="o">==</span> <span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
            <span class="c1">// 모든 행열 구간에서 중복되지 않게</span>
            <span class="n">painted_wall</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="p">((</span><span class="n">i</span> <span class="o">+</span> <span class="n">j</span><span class="p">)</span> <span class="o">%</span> <span class="n">k</span><span class="p">)</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>    

<span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"YES</span><span class="se">\n</span><span class="s">"</span><span class="p">;</span>
<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span> <span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">n</span> <span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">0</span> <span class="p">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">m</span> <span class="p">;</span> <span class="o">++</span><span class="n">j</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">painted_wall</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="o">&lt;&lt;</span> <span class="s">" "</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"</span><span class="se">\n</span><span class="s">"</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<blockquote>
  <h4 id="채점">채점</h4>
  <hr />
</blockquote>

<p><img src="/assets/images/posts/random-solve/C++/2025-06-13-16256/img02.webp" alt="img02" /></p>

<blockquote>
  <h4 id="반성">반성</h4>
  <hr />
</blockquote>

<p>벡터가 아니라 배열로 쓰면 더 나았으려나?<br />
java면 배열로 했겠지만 C++라서 벡터를 사용한건데</p>

<blockquote>
  <h4 id="코드-확인">코드 확인</h4>
  <hr />
</blockquote>

<p><a href="https://raw.githubusercontent.com/movingwoo/movingwoo-snippets/refs/heads/main/random-solve/C%2B%2B/2025-06-13-16256.cpp">Link to GitHub</a></p>]]></content><author><name>movingwoo</name></author><category term="BOJ/C++/" /><category term="C++" /><category term="알고리즘" /><category term="백준" /><category term="16256" /><category term="Painting the Wall" /><summary type="html"><![CDATA[백준 16256번 Painting the Wall C++ 문제풀이]]></summary></entry><entry><title type="html">제비 뽑기</title><link href="https://movingwoo.com/development/shortcuts/2025/06/11/Drawing-Lots.html" rel="alternate" type="text/html" title="제비 뽑기" /><published>2025-06-11T02:00:00+00:00</published><updated>2025-06-17T06:00:00+00:00</updated><id>https://movingwoo.com/development/shortcuts/2025/06/11/Drawing%20Lots</id><content type="html" xml:base="https://movingwoo.com/development/shortcuts/2025/06/11/Drawing-Lots.html"><![CDATA[<blockquote>
  <h4 id="개요">개요</h4>
  <hr />
</blockquote>

<p>점심 먹고 커피를 누가 살지, 술 마시고 대표로 누가 결제할지 등<br />
각종 내기할 때 준비물이 필요 없고 밸런스가 잘 맞는 게임은 가위바위보가 있다.<br />
좀 더 익스트림한 경험을 원하면 사다리타기나 핀볼을 하기도 한다.</p>

<p>오늘은 단축어로 내기에 쓸 수 있는 제비뽑기를 만들어 볼 것이다.<br />
js를 사용하지 않으면 GUI가 극적이진 않지만 직접 만들어서 사용하면 제법 재미있다.</p>

<p>단축어 js 연동은 다소 불편하기도 하고…</p>

<blockquote>
  <h4 id="설계">설계</h4>
  <hr />
</blockquote>

<p>입력을 받을 때 인원 수에 따라 항목은 얼마든지 늘어날 수 있게 설정해야한다.</p>

<p>입력 받으면 무작위 셔플 후 각각에 인덱스를 부여해 하나의 제비로 만든다.<br />
제비 클래스를 구현할 수는 없으므로 <span style="color: orange;"><strong>사전</strong></span>을 사용하는게 좋겠다.</p>

<p>각 제비는 하나를 선택해 하나씩 열어볼 수 있게하고<br />
전체를 한 번에 열어볼 수 있게도 만든다.</p>

<p>어떤 단축어 블럭을 사용할지 고민하는게 어렵고 로직 자체는 심플하다.</p>

<blockquote>
  <h4 id="구현">구현</h4>
  <hr />
</blockquote>

<h5 id="1-목록-입력받아-사전-생성">1. 목록 입력받아 사전 생성</h5>

<p>기본 값으로 당첨 하나와 꽝 2개 총 3개 항목을 설정하고 보여준다.<br />
당첨과 꽝 문구는 변경할 수 있게 하고 항목을 추가할 수 있게 한다.</p>

<p>필터 블럭으로 제비를 무작위 셔플하고 목록 수 만큼 반복문을 구성한다.<br />
3가지 작업을 하게 되는데</p>
<ul>
  <li><span style="color: orange;"><strong>인덱스와 셔플된 값으로 사전</strong></span> 구성</li>
  <li>목록을 선택할 수 있게 별도 <span style="color: orange;"><strong>인덱스 변수</strong></span> 구성</li>
  <li>전체 보기 시 출력할 <span style="color: orange;"><strong>텍스트 변수</strong></span> 구성</li>
</ul>

<p>전체 보기의 경우 뒤에서 사용하게 될건데<br />
결과 보기 블럭에 사전을 그냥 넣을 경우 json 형식으로 출력한다.<br />
보기 불편하기 때문에 결과를 텍스트로 미리 다듬어서 변수로 선언해두고<br />
전체 보기 할 경우 해당 텍스트 변수를 출력한다.</p>

<p>반복문이 종료되면 사용자에게 보여줄 목록 변수에 ‘전체 보기’ 항목을 넣어서 한 번에 전체를 볼 수 있게 한다.</p>

<p><img src="/assets/images/posts/one-pan/Shortcuts/2025-06-11-Drawing Lots/img01.webp" alt="img01" width="300" style="height: auto;" /><br />
<img src="/assets/images/posts/one-pan/Shortcuts/2025-06-11-Drawing Lots/img02.webp" alt="img02" width="300" style="height: auto;" /><br />
<img src="/assets/images/posts/one-pan/Shortcuts/2025-06-11-Drawing Lots/img03.webp" alt="img03" width="300" style="height: auto;" /></p>

<h5 id="2-반복문과-조건문">2. 반복문과 조건문</h5>

<p>반복 블럭을 새로 구성해서 인덱스 변수를 목록으로 보여준다.</p>

<p>만약 전체 보기를 선택할 경우에 미리 선언해둔 전체 보기 변수를 출력 후 단축어를 종료한다.<br />
그렇지 않으면 해당 인덱스의 값을 사전에서 가져와 출력한다.<br />
사전에서 값을 가져오면 인덱스 변수에서 선택한 값을 필터 블럭으로 제거해 남은 제비만을 다시 보여준다.</p>

<p>모든 제비를 열어보았다면 전체 보기 변수를 출력해 최종 결과를 출력한다.</p>

<p><img src="/assets/images/posts/one-pan/Shortcuts/2025-06-11-Drawing Lots/img04.webp" alt="img04" width="300" style="height: auto;" /><br />
<img src="/assets/images/posts/one-pan/Shortcuts/2025-06-11-Drawing Lots/img05.webp" alt="img05" width="300" style="height: auto;" /><br />
<img src="/assets/images/posts/one-pan/Shortcuts/2025-06-11-Drawing Lots/img06.webp" alt="img06" width="300" style="height: auto;" /></p>

<blockquote>
  <h4 id="완성">완성</h4>
  <hr />
</blockquote>

<p><span style="color: red;"><strong>당첨자는 오늘 커피를 산다!!!</strong></span></p>

<p><img src="/assets/images/posts/one-pan/Shortcuts/2025-06-11-Drawing Lots/img07.webp" alt="img07" width="300" style="height: auto;" /></p>

<blockquote>
  <h4 id="반성">반성</h4>
  <hr />
</blockquote>

<p>ios 판올림할 때마다 단축어도 조금씩 바뀌는데<br />
원래 반복 블럭에 for each처럼 쓰는게 있었나 기억이 안난다.</p>

<p>사전 값 출력하려고 각각 반복 블럭을 사용해봤는데 예상한대로 동작하지 않아서 기본 반복 블럭을 사용했다.<br />
개발자 문서를 찾아봐야하나…</p>

<p>단축어의 장점은 제공되는 기본 기능을 자유롭게 확장할 수 있다는 것이며
단축어의 단점은 제공되는 기본 기능만 자유롭게 확장할 수 있다는 것</p>

<p>api 연동까지는 어떻게 편하게 써도 js 엮이는 순간 골치아파지는데<br />
나중에 포스트로 다뤄볼 기회가 있을 것이다.</p>

<blockquote>
  <h4 id="공유">공유</h4>
  <hr />
</blockquote>

<p>사파리에서 링크 실행</p>

<p><a href="https://www.icloud.com/shortcuts/1846ec094ab34bf79d689d4dcbd32a36">제비 뽑기 - iCloud Link</a></p>]]></content><author><name>movingwoo</name></author><category term="Development/Shortcuts/" /><category term="단축어" /><category term="제비 뽑기" /><summary type="html"><![CDATA[단축어 제비 뽑기 프로그램 개발]]></summary></entry><entry><title type="html">21237번 Clockwise Fence</title><link href="https://movingwoo.com/boj/java/2025/06/10/21237.html" rel="alternate" type="text/html" title="21237번 Clockwise Fence" /><published>2025-06-10T01:00:00+00:00</published><updated>2025-06-17T06:00:00+00:00</updated><id>https://movingwoo.com/boj/java/2025/06/10/21237</id><content type="html" xml:base="https://movingwoo.com/boj/java/2025/06/10/21237.html"><![CDATA[<blockquote>
  <h4 id="문제">문제</h4>
  <hr />
</blockquote>

<p><img src="/assets/images/posts/random-solve/Java/2025-06-10-21237/img01.webp" alt="img01" /></p>

<p><a href="https://www.acmicpc.net/problem/21237">21237번 Clockwise Fence - 백준</a></p>

<blockquote>
  <h4 id="번역">번역</h4>
  <hr />
</blockquote>

<p>울타리를 설치했는데 울타리가 시계 방향으로 설치되었는지 반시계 방향으로 설치되었는지 구하시오.<br />
시작점과 도착점은 같으며 울타리가 하나의 영역을 감싸고 있는게 보장된다.</p>

<blockquote>
  <h4 id="설계">설계</h4>
  <hr />
</blockquote>

<p>신발끈 공식을 써서 양수면 반시계 방향, 음수면 시계 방향이다.</p>

<blockquote>
  <h4 id="구현">구현</h4>
  <hr />
</blockquote>

<p>NSWE 형식으로 방향이 들어오니 Map으로 방향 별 더할 좌표를 구성해두고<br />
방향 데이터를 받아서 순회하며 신발끈 공식으로 면적을 구한다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span> <span class="no">N</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
			
<span class="c1">// 방향</span>
<span class="nc">Map</span><span class="o">&lt;</span><span class="nc">Character</span><span class="o">,</span> <span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">dx</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HashMap</span><span class="o">&lt;&gt;();</span>
<span class="n">dx</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="sc">'N'</span><span class="o">,</span> <span class="mi">0</span><span class="o">);</span>
<span class="n">dx</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="sc">'E'</span><span class="o">,</span> <span class="mi">1</span><span class="o">);</span>
<span class="n">dx</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="sc">'S'</span><span class="o">,</span> <span class="mi">0</span><span class="o">);</span>
<span class="n">dx</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="sc">'W'</span><span class="o">,</span> <span class="o">-</span><span class="mi">1</span><span class="o">);</span>

<span class="nc">Map</span><span class="o">&lt;</span><span class="nc">Character</span><span class="o">,</span> <span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">dy</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HashMap</span><span class="o">&lt;&gt;();</span>
<span class="n">dy</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="sc">'N'</span><span class="o">,</span> <span class="mi">1</span><span class="o">);</span>
<span class="n">dy</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="sc">'E'</span><span class="o">,</span> <span class="mi">0</span><span class="o">);</span>
<span class="n">dy</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="sc">'S'</span><span class="o">,</span> <span class="o">-</span><span class="mi">1</span><span class="o">);</span>
<span class="n">dy</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="sc">'W'</span><span class="o">,</span> <span class="mi">0</span><span class="o">);</span>

<span class="k">while</span><span class="o">(</span><span class="no">N</span><span class="o">--</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
	<span class="kt">char</span><span class="o">[]</span> <span class="n">fences</span> <span class="o">=</span> <span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">().</span><span class="na">toCharArray</span><span class="o">();</span>
	
	<span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
	<span class="kt">int</span> <span class="n">y</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
	<span class="kt">int</span> <span class="n">result</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
	
	<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span> <span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">fences</span><span class="o">.</span><span class="na">length</span> <span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
		<span class="kt">int</span> <span class="n">nx</span> <span class="o">=</span> <span class="n">x</span> <span class="o">+</span> <span class="n">dx</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">fences</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
		<span class="kt">int</span> <span class="n">ny</span> <span class="o">=</span> <span class="n">y</span> <span class="o">+</span> <span class="n">dy</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">fences</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>

		<span class="c1">// 신발끈 공식</span>
		<span class="n">result</span> <span class="o">+=</span> <span class="n">x</span> <span class="o">*</span> <span class="n">ny</span> <span class="o">-</span> <span class="n">y</span> <span class="o">*</span> <span class="n">nx</span><span class="o">;</span>

		<span class="c1">// 이전 좌표 갱신</span>
		<span class="n">x</span> <span class="o">=</span> <span class="n">nx</span><span class="o">;</span>
		<span class="n">y</span> <span class="o">=</span> <span class="n">ny</span><span class="o">;</span>
	<span class="o">}</span>

	<span class="c1">// 음수면 시계 방향 아니면 반시계 방향</span>
	<span class="k">if</span><span class="o">(</span><span class="n">result</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="o">)</span> <span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="s">"CW\n"</span><span class="o">);</span>
	<span class="k">else</span> <span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="s">"CCW\n"</span><span class="o">);</span>
<span class="o">}</span>
</code></pre></div></div>

<blockquote>
  <h4 id="채점">채점</h4>
  <hr />
</blockquote>

<p><img src="/assets/images/posts/random-solve/Java/2025-06-10-21237/img02.webp" alt="img02" /></p>

<blockquote>
  <h4 id="반성">반성</h4>
  <hr />
</blockquote>

<p>파이썬 하다가 자바 보니까 코드가 못났다.<br />
점점 파이썬에 스며드는 중이다.</p>

<blockquote>
  <h4 id="코드-확인">코드 확인</h4>
  <hr />
</blockquote>

<p><a href="https://raw.githubusercontent.com/movingwoo/movingwoo-snippets/refs/heads/main/random-solve/Java/2025-06-10-21237.java">Link to GitHub</a></p>]]></content><author><name>movingwoo</name></author><category term="BOJ/Java/" /><category term="JAVA" /><category term="알고리즘" /><category term="백준" /><category term="21237" /><category term="Clockwise Fence" /><category term="수학" /><summary type="html"><![CDATA[백준 21237번 Clockwise Fence JAVA 문제풀이]]></summary></entry><entry><title type="html">하드웨어 모니터</title><link href="https://movingwoo.com/development/python/2025/06/09/Hardware-Monitor.html" rel="alternate" type="text/html" title="하드웨어 모니터" /><published>2025-06-09T23:00:00+00:00</published><updated>2025-06-17T06:00:00+00:00</updated><id>https://movingwoo.com/development/python/2025/06/09/Hardware%20Monitor</id><content type="html" xml:base="https://movingwoo.com/development/python/2025/06/09/Hardware-Monitor.html"><![CDATA[<blockquote>
  <h4 id="개요">개요</h4>
  <hr />
</blockquote>

<p><img src="/assets/images/posts/one-pan/Python/2025-06-10-Hardware Monitor/img01.webp" alt="img01" /></p>

<p>알리에서 3.5인치 모니터를 주웠다.<br />
온도 체크하기가 불편해서 사봤는데 리소스 사용량도 보여주고 상당히 괜찮다.</p>

<p>제조사에서 드라이버를 제공해서 예쁜 테마를 가져다 그대로 쓸 수 있는데<br />
다소 불안한 감이 있고 이런 건 또 직접해야 제맛이다.<br />
필요없는 정보는 지우고 감성보다 기능성에 초점을 맞춘 새로운 테마를 만든다.</p>

<blockquote>
  <h4 id="설계">설계</h4>
  <hr />
</blockquote>

<p><a href="https://github.com/mathoudebine/turing-smart-screen-python">turing-smart-screen-python</a></p>

<p><img src="/assets/images/posts/one-pan/Python/2025-06-10-Hardware Monitor/img02.webp" alt="img02" /></p>

<p>이 오픈소스 프로젝트는 소형 시스템 모니터에 각종 정보를 보기 좋게 표시해주는 프로그램이다.<br />
능력자들이 밥을 다 차려놨으니 나는 숟가락만 들면 되는 것이다.</p>

<p>소스코드를 다운로드 해 필요한 부분만 커스텀하고 사용할 수 있도록 하자.</p>

<p>내게 필요한 정보는</p>
<ul>
  <li>CPU, GPU 온도</li>
  <li>CPU 전체, 코어 별 사용량</li>
  <li>GPU, VRAM 사용량</li>
  <li>RAM 사용량</li>
  <li>디스크 사용량</li>
</ul>

<p>필요 없는 정보는</p>
<ul>
  <li>날짜</li>
  <li>날씨</li>
  <li>네트워크 사용량</li>
  <li>업타임</li>
</ul>

<p>아니 진짜 날짜 날씨는 왜 있지?<br />
메인 모니터나 휴대폰이 훨씬 잘 알려주는데</p>

<blockquote>
  <h4 id="커스텀">커스텀</h4>
  <hr />
</blockquote>

<h5 id="1-설치">1. 설치</h5>

<p>파이썬만 있으면 설치는 간편하다.</p>

<div class="language-batch highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">pip</span> <span class="kd">install</span> <span class="na">-r </span><span class="kd">requirements</span>.txt
</code></pre></div></div>

<p>pip 의존성 설치 후 실행하면 켜진다.<br />
바로 실행하려면 <span style="color: orange;"><strong>main.py</strong></span>를, 설정 창을 띄우려면 <span style="color: orange;"><strong>configure.py</strong></span>를 실행한다.</p>

<div class="language-batch highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">python</span> <span class="kd">configure</span>.py
</code></pre></div></div>

<p><img src="/assets/images/posts/one-pan/Python/2025-06-10-Hardware Monitor/img03.webp" alt="img03" /></p>

<h5 id="2-커스텀-테마-생성">2. 커스텀 테마 생성</h5>

<p>테마 파일은 <span style="color: orange;"><strong>turing-smart-screen-python\res\themes</strong></span> 폴더에 위치해있다.<br />
MyCustomTheme 폴더를 생성하고 내부에 <span style="color: orange;"><strong>theme.yaml</strong></span> 파일을 생성한다.</p>

<p>구매한 3.5인치 모니터의 자체 프로그램 테마는 좀 다양한게 많아서 참고하려했더니<br />
.data 파일로 되어있어서 그냥 포기하고 새로 만들기로 한다.</p>

<p>3.5인치 모니터의 크기는 480 X 320 이고 배경은 검은색으로 만들거라 그림판으로 검은색 사진을 만들어 <span style="color: orange;"><strong>background.png</strong></span> 로 넣어준다.<br />
뭐 없으면 알아서 까만화면 될 줄 알았는데 오류 나더라…</p>

<p><img src="/assets/images/posts/one-pan/Python/2025-06-10-Hardware Monitor/img04.webp" alt="img04" /></p>

<p>yaml 수정은 즉각 반영되니 테마 에디터를 띄어두고 yaml을 수정하며 맞추면 된다.</p>

<div class="language-batch highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">python</span> <span class="kd">theme</span><span class="na">-editor</span>.py <span class="kd">MyCustomTheme</span>
</code></pre></div></div>

<p><img src="/assets/images/posts/one-pan/Python/2025-06-10-Hardware Monitor/img05.webp" alt="img05" /></p>

<h5 id="3-yaml-작성">3. yaml 작성</h5>

<p>기본적으로 yaml만 잘 작성해주면 해당 정보들을 알아서 가져온다.<br />
디폴트 테마를 예시로 삼아서 잘 작성해보자.</p>

<p>CPU와 디스크 쪽은 커스텀이 들어가야해서 머리아프다.</p>

<p>갱신은 디스크 제외 1초로 통일했다.<br />
1초 마다 사용량을 갱신할 의미가 있을까 싶어서 60초로 설정했다.</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">display</span><span class="pi">:</span>
  <span class="na">DISPLAY_SIZE</span><span class="pi">:</span> <span class="s2">"</span><span class="s">3.5</span><span class="se">\"</span><span class="s">"</span>
  <span class="na">DISPLAY_ORIENTATION</span><span class="pi">:</span> <span class="s2">"</span><span class="s">landscape"</span>
  <span class="na">DISPLAY_REVERSE</span><span class="pi">:</span> <span class="kc">true</span>
  <span class="na">DISPLAY_RGB_LED</span><span class="pi">:</span> <span class="s2">"</span><span class="s">0,</span><span class="nv"> </span><span class="s">0,</span><span class="nv"> </span><span class="s">0"</span>

<span class="na">static_images</span><span class="pi">:</span>
  <span class="na">BACKGROUND</span><span class="pi">:</span>
    <span class="na">PATH</span><span class="pi">:</span> <span class="s">background.png</span>
    <span class="na">X</span><span class="pi">:</span> <span class="m">0</span>
    <span class="na">Y</span><span class="pi">:</span> <span class="m">0</span>
    <span class="na">WIDTH</span><span class="pi">:</span> <span class="m">480</span>
    <span class="na">HEIGHT</span><span class="pi">:</span> <span class="m">320</span>

<span class="na">STATS</span><span class="pi">:</span>
  <span class="na">CPU</span><span class="pi">:</span>
    <span class="na">PERCENTAGE</span><span class="pi">:</span>
      <span class="na">INTERVAL</span><span class="pi">:</span> <span class="m">1</span>
      <span class="na">TEXT</span><span class="pi">:</span>
        <span class="na">SHOW</span><span class="pi">:</span> <span class="kc">true</span>
        <span class="na">X</span><span class="pi">:</span> <span class="m">70</span>
        <span class="na">Y</span><span class="pi">:</span> <span class="m">20</span>
        <span class="na">FONT</span><span class="pi">:</span> <span class="s2">"</span><span class="s">jetbrains-mono/JetBrainsMono-Bold.ttf"</span>
        <span class="na">FONT_SIZE</span><span class="pi">:</span> <span class="m">22</span>
        <span class="na">FONT_COLOR</span><span class="pi">:</span> <span class="s2">"</span><span class="s">255,</span><span class="nv"> </span><span class="s">50,</span><span class="nv"> </span><span class="s">0"</span>
        <span class="na">BACKGROUND_COLOR</span><span class="pi">:</span> <span class="s">0, 0, </span><span class="m">0</span>
      <span class="na">GRAPH</span><span class="pi">:</span>
        <span class="na">SHOW</span><span class="pi">:</span> <span class="kc">true</span>
        <span class="na">X</span><span class="pi">:</span> <span class="m">20</span>
        <span class="na">Y</span><span class="pi">:</span> <span class="m">50</span>
        <span class="na">WIDTH</span><span class="pi">:</span> <span class="m">200</span>
        <span class="na">HEIGHT</span><span class="pi">:</span> <span class="m">20</span>
        <span class="na">MIN_VALUE</span><span class="pi">:</span> <span class="m">0</span>
        <span class="na">MAX_VALUE</span><span class="pi">:</span> <span class="m">100</span>
        <span class="na">BAR_COLOR</span><span class="pi">:</span> <span class="s">255, 50, </span><span class="m">0</span>
        <span class="na">BAR_OUTLINE</span><span class="pi">:</span> <span class="kc">true</span>
        <span class="na">BAR_OUTLINE_COLOR</span><span class="pi">:</span> <span class="s">255, 50, </span><span class="m">0</span>
        <span class="na">BACKGROUND_COLOR</span><span class="pi">:</span> <span class="s">0, 0, </span><span class="m">0</span>
    <span class="na">TEMPERATURE</span><span class="pi">:</span>
      <span class="na">INTERVAL</span><span class="pi">:</span> <span class="m">1</span>
      <span class="na">TEXT</span><span class="pi">:</span>
        <span class="na">SHOW</span><span class="pi">:</span> <span class="kc">true</span>
        <span class="na">X</span><span class="pi">:</span> <span class="m">155</span>
        <span class="na">Y</span><span class="pi">:</span> <span class="m">20</span>
        <span class="na">FONT</span><span class="pi">:</span> <span class="s2">"</span><span class="s">jetbrains-mono/JetBrainsMono-Bold.ttf"</span>
        <span class="na">FONT_SIZE</span><span class="pi">:</span> <span class="m">22</span>
        <span class="na">FONT_COLOR</span><span class="pi">:</span> <span class="s2">"</span><span class="s">255,</span><span class="nv"> </span><span class="s">50,</span><span class="nv"> </span><span class="s">0"</span>
        <span class="na">BACKGROUND_COLOR</span><span class="pi">:</span> <span class="s">0, 0, </span><span class="m">0</span>
    <span class="na">CORE_0</span><span class="pi">:</span>
      <span class="na">GRAPH</span><span class="pi">:</span>
        <span class="na">SHOW</span><span class="pi">:</span> <span class="kc">true</span>
        <span class="na">X</span><span class="pi">:</span> <span class="m">70</span>
        <span class="na">Y</span><span class="pi">:</span> <span class="m">80</span>
        <span class="na">WIDTH</span><span class="pi">:</span> <span class="m">150</span>
        <span class="na">HEIGHT</span><span class="pi">:</span> <span class="m">10</span>
        <span class="na">MIN_VALUE</span><span class="pi">:</span> <span class="m">0</span>
        <span class="na">MAX_VALUE</span><span class="pi">:</span> <span class="m">100</span>
        <span class="na">BAR_COLOR</span><span class="pi">:</span> <span class="s">255, 50, </span><span class="m">0</span>
        <span class="na">BAR_OUTLINE</span><span class="pi">:</span> <span class="kc">true</span>
        <span class="na">BAR_OUTLINE_COLOR</span><span class="pi">:</span> <span class="s">255, 50, </span><span class="m">0</span>
        <span class="na">BACKGROUND_COLOR</span><span class="pi">:</span> <span class="s">0, 0, </span><span class="m">0</span>
    <span class="na">CORE_1</span><span class="pi">:</span>
      <span class="na">GRAPH</span><span class="pi">:</span>
        <span class="na">SHOW</span><span class="pi">:</span> <span class="kc">true</span>
        <span class="na">X</span><span class="pi">:</span> <span class="m">70</span>
        <span class="na">Y</span><span class="pi">:</span> <span class="m">95</span>
        <span class="na">WIDTH</span><span class="pi">:</span> <span class="m">150</span>
        <span class="na">HEIGHT</span><span class="pi">:</span> <span class="m">10</span>
        <span class="na">MIN_VALUE</span><span class="pi">:</span> <span class="m">0</span>
        <span class="na">MAX_VALUE</span><span class="pi">:</span> <span class="m">100</span>
        <span class="na">BAR_COLOR</span><span class="pi">:</span> <span class="s">255, 50, </span><span class="m">0</span>
        <span class="na">BAR_OUTLINE</span><span class="pi">:</span> <span class="kc">true</span>
        <span class="na">BAR_OUTLINE_COLOR</span><span class="pi">:</span> <span class="s">255, 50, </span><span class="m">0</span>
        <span class="na">BACKGROUND_COLOR</span><span class="pi">:</span> <span class="s">0, 0, </span><span class="m">0</span>

<span class="c1">### ... 후략 ... ###</span>
</code></pre></div></div>

<h5 id="4-파이썬-코드-커스텀">4. 파이썬 코드 커스텀</h5>

<p>theme.yaml을 읽어 파이썬 코드로 필요한 정보를 빼오는 식이다.<br />
코드를 수정하면 원하는 정보를 다양하게 가져올 수 있다는 것.</p>

<p>우선 기본 테두리 설정이 너무 얇아서 테두리를 굵게 해준다.<br />
수정 대상 파일은 <span style="color: orange;"><strong>turing-smart-screen-python\library\lcd\lcd_comm.py</strong></span></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">if</span> <span class="n">bar_outline</span><span class="p">:</span>
    <span class="c1"># Draw outline
</span>    <span class="c1"># 테두리 두께 추가
</span>    <span class="n">outline_width</span> <span class="o">=</span> <span class="mi">3</span>
    <span class="n">draw</span><span class="p">.</span><span class="nf">rectangle</span><span class="p">([</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">width</span> <span class="o">-</span> <span class="mi">1</span><span class="p">,</span> <span class="n">height</span> <span class="o">-</span> <span class="mi">1</span><span class="p">],</span> <span class="n">fill</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="n">outline</span><span class="o">=</span><span class="n">bar_color</span><span class="p">,</span> <span class="n">width</span><span class="o">=</span><span class="n">outline_width</span><span class="p">)</span>
</code></pre></div></div>

<p><span style="color: orange;"><strong>turing-smart-screen-python\library\stats.py</strong></span><br />
main.py 실행 시 스케쥴러를 통해 stats.py 를 주기적으로 호출한다.<br />
각 센서 데이터를 수집하니 가장 커스텀할게 많은 셈이다.</p>

<p>하나하나 커스텀하자면 끝도 없을텐데 최대한 쓸 수 있는 기능은 그대로 가져다 쓰고싶기 때문에 최소한의 커스텀을 해보자.<br />
yaml 만드는 것으로 이미 지쳤다.</p>

<p>우선 모든 CPU 코어를 한 눈에 볼 수 있게 코어 정보를 가져온다.<br />
CPU 클래스에 코어 확인 함수를 추가하고 퍼센티지 호출하는 부분 하단에 코어 확인 함수를 추가한다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@classmethod</span>
<span class="k">def</span> <span class="nf">percentage</span><span class="p">(</span><span class="n">cls</span><span class="p">):</span>
    <span class="n">theme_data</span> <span class="o">=</span> <span class="n">config</span><span class="p">.</span><span class="n">THEME_DATA</span><span class="p">[</span><span class="sh">'</span><span class="s">STATS</span><span class="sh">'</span><span class="p">][</span><span class="sh">'</span><span class="s">CPU</span><span class="sh">'</span><span class="p">][</span><span class="sh">'</span><span class="s">PERCENTAGE</span><span class="sh">'</span><span class="p">]</span>
    <span class="n">cpu_percentage</span> <span class="o">=</span> <span class="n">sensors</span><span class="p">.</span><span class="n">Cpu</span><span class="p">.</span><span class="nf">percentage</span><span class="p">(</span>
        <span class="n">interval</span><span class="o">=</span><span class="n">theme_data</span><span class="p">.</span><span class="nf">get</span><span class="p">(</span><span class="sh">"</span><span class="s">INTERVAL</span><span class="sh">"</span><span class="p">,</span> <span class="bp">None</span><span class="p">)</span>
    <span class="p">)</span>
    <span class="nf">save_last_value</span><span class="p">(</span><span class="n">cpu_percentage</span><span class="p">,</span> <span class="n">cls</span><span class="p">.</span><span class="n">last_values_cpu_percentage</span><span class="p">,</span>
                    <span class="n">theme_data</span><span class="p">[</span><span class="sh">'</span><span class="s">LINE_GRAPH</span><span class="sh">'</span><span class="p">].</span><span class="nf">get</span><span class="p">(</span><span class="sh">"</span><span class="s">HISTORY_SIZE</span><span class="sh">"</span><span class="p">,</span> <span class="n">DEFAULT_HISTORY_SIZE</span><span class="p">))</span>
    <span class="c1"># logger.debug(f"CPU Percentage: {cpu_percentage}")
</span>
    <span class="nf">display_themed_progress_bar</span><span class="p">(</span><span class="n">theme_data</span><span class="p">[</span><span class="sh">'</span><span class="s">GRAPH</span><span class="sh">'</span><span class="p">],</span> <span class="n">cpu_percentage</span><span class="p">)</span>
    <span class="nf">display_themed_percent_radial_bar</span><span class="p">(</span><span class="n">theme_data</span><span class="p">[</span><span class="sh">'</span><span class="s">RADIAL</span><span class="sh">'</span><span class="p">],</span> <span class="n">cpu_percentage</span><span class="p">)</span>
    <span class="nf">display_themed_percent_value</span><span class="p">(</span><span class="n">theme_data</span><span class="p">[</span><span class="sh">'</span><span class="s">TEXT</span><span class="sh">'</span><span class="p">],</span> <span class="n">cpu_percentage</span><span class="p">)</span>
    <span class="nf">display_themed_line_graph</span><span class="p">(</span><span class="n">theme_data</span><span class="p">[</span><span class="sh">'</span><span class="s">LINE_GRAPH</span><span class="sh">'</span><span class="p">],</span> <span class="n">cls</span><span class="p">.</span><span class="n">last_values_cpu_percentage</span><span class="p">)</span>

    <span class="c1"># 코어 확인 함수
</span>    <span class="n">CPU</span><span class="p">.</span><span class="nf">core_percentages</span><span class="p">()</span>

<span class="c1">### ... 중략 ...
</span>
<span class="c1"># 코어 확인 위한 함수
</span><span class="nd">@classmethod</span>
<span class="k">def</span> <span class="nf">core_percentages</span><span class="p">(</span><span class="n">cls</span><span class="p">):</span>
    <span class="c1"># theme.yaml에 정의된 코어별 항목을 자동으로 순회
</span>    <span class="n">cpu_theme</span> <span class="o">=</span> <span class="n">config</span><span class="p">.</span><span class="n">THEME_DATA</span><span class="p">[</span><span class="sh">'</span><span class="s">STATS</span><span class="sh">'</span><span class="p">][</span><span class="sh">'</span><span class="s">CPU</span><span class="sh">'</span><span class="p">]</span>

    <span class="kn">import</span> <span class="n">psutil</span>
    <span class="n">core_percents</span> <span class="o">=</span> <span class="n">psutil</span><span class="p">.</span><span class="nf">cpu_percent</span><span class="p">(</span><span class="n">percpu</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>

    <span class="k">for</span> <span class="n">idx</span><span class="p">,</span> <span class="n">percent</span> <span class="ow">in</span> <span class="nf">enumerate</span><span class="p">(</span><span class="n">core_percents</span><span class="p">):</span>
        <span class="n">key</span> <span class="o">=</span> <span class="sa">f</span><span class="sh">'</span><span class="s">CORE_</span><span class="si">{</span><span class="n">idx</span><span class="si">}</span><span class="sh">'</span>
        <span class="k">if</span> <span class="n">key</span> <span class="ow">in</span> <span class="n">cpu_theme</span> <span class="ow">and</span> <span class="sh">'</span><span class="s">GRAPH</span><span class="sh">'</span> <span class="ow">in</span> <span class="n">cpu_theme</span><span class="p">[</span><span class="n">key</span><span class="p">]:</span>
            <span class="nf">display_themed_progress_bar</span><span class="p">(</span><span class="n">cpu_theme</span><span class="p">[</span><span class="n">key</span><span class="p">][</span><span class="sh">'</span><span class="s">GRAPH</span><span class="sh">'</span><span class="p">],</span> <span class="n">percent</span><span class="p">)</span>
</code></pre></div></div>

<p>디스크의 경우는 C, D, E 드라이브를 사용 중인데<br />
각각 드라이브 사용량을 보여주기 위해 커스텀한다.</p>

<p>기존 코드는 단일 디스크의 사용량, 남은용량 등의 정보를 가져오는데<br />
나는 3개의 사용량만 확인하면 되기 때문에 전체 주석 처리 후 아래 코드로 사용량만 확인하게끔 바꿔주었다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@classmethod</span>
<span class="k">def</span> <span class="nf">stats</span><span class="p">(</span><span class="n">cls</span><span class="p">):</span>
    <span class="kn">import</span> <span class="n">psutil</span>
    <span class="n">disk_theme_data</span> <span class="o">=</span> <span class="n">config</span><span class="p">.</span><span class="n">THEME_DATA</span><span class="p">[</span><span class="sh">'</span><span class="s">STATS</span><span class="sh">'</span><span class="p">][</span><span class="sh">'</span><span class="s">DISK</span><span class="sh">'</span><span class="p">]</span>

    <span class="c1"># C 드라이브
</span>    <span class="k">try</span><span class="p">:</span>
        <span class="n">c_usage</span> <span class="o">=</span> <span class="n">psutil</span><span class="p">.</span><span class="nf">disk_usage</span><span class="p">(</span><span class="sh">'</span><span class="s">C:/</span><span class="sh">'</span><span class="p">).</span><span class="n">percent</span>
    <span class="k">except</span> <span class="nb">Exception</span><span class="p">:</span>
        <span class="n">c_usage</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="nf">display_themed_progress_bar</span><span class="p">(</span><span class="n">disk_theme_data</span><span class="p">[</span><span class="sh">'</span><span class="s">C</span><span class="sh">'</span><span class="p">][</span><span class="sh">'</span><span class="s">GRAPH</span><span class="sh">'</span><span class="p">],</span> <span class="n">c_usage</span><span class="p">)</span>
    <span class="nf">display_themed_percent_value</span><span class="p">(</span><span class="n">disk_theme_data</span><span class="p">[</span><span class="sh">'</span><span class="s">C</span><span class="sh">'</span><span class="p">][</span><span class="sh">'</span><span class="s">TEXT</span><span class="sh">'</span><span class="p">],</span> <span class="n">c_usage</span><span class="p">)</span>

    <span class="c1"># D 드라이브
</span>    <span class="k">try</span><span class="p">:</span>
        <span class="n">d_usage</span> <span class="o">=</span> <span class="n">psutil</span><span class="p">.</span><span class="nf">disk_usage</span><span class="p">(</span><span class="sh">'</span><span class="s">D:/</span><span class="sh">'</span><span class="p">).</span><span class="n">percent</span>
    <span class="k">except</span> <span class="nb">Exception</span><span class="p">:</span>
        <span class="n">d_usage</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="nf">display_themed_progress_bar</span><span class="p">(</span><span class="n">disk_theme_data</span><span class="p">[</span><span class="sh">'</span><span class="s">D</span><span class="sh">'</span><span class="p">][</span><span class="sh">'</span><span class="s">GRAPH</span><span class="sh">'</span><span class="p">],</span> <span class="n">d_usage</span><span class="p">)</span>
    <span class="nf">display_themed_percent_value</span><span class="p">(</span><span class="n">disk_theme_data</span><span class="p">[</span><span class="sh">'</span><span class="s">D</span><span class="sh">'</span><span class="p">][</span><span class="sh">'</span><span class="s">TEXT</span><span class="sh">'</span><span class="p">],</span> <span class="n">d_usage</span><span class="p">)</span>

    <span class="c1"># E 드라이브 
</span>    <span class="k">try</span><span class="p">:</span>
        <span class="n">e_usage</span> <span class="o">=</span> <span class="n">psutil</span><span class="p">.</span><span class="nf">disk_usage</span><span class="p">(</span><span class="sh">'</span><span class="s">E:/</span><span class="sh">'</span><span class="p">).</span><span class="n">percent</span>
    <span class="k">except</span> <span class="nb">Exception</span><span class="p">:</span>
        <span class="n">e_usage</span> <span class="o">=</span> <span class="mi">0</span>

    <span class="nf">display_themed_progress_bar</span><span class="p">(</span><span class="n">disk_theme_data</span><span class="p">[</span><span class="sh">'</span><span class="s">E</span><span class="sh">'</span><span class="p">][</span><span class="sh">'</span><span class="s">GRAPH</span><span class="sh">'</span><span class="p">],</span> <span class="n">e_usage</span><span class="p">)</span>
    <span class="nf">display_themed_percent_value</span><span class="p">(</span><span class="n">disk_theme_data</span><span class="p">[</span><span class="sh">'</span><span class="s">E</span><span class="sh">'</span><span class="p">][</span><span class="sh">'</span><span class="s">TEXT</span><span class="sh">'</span><span class="p">],</span> <span class="n">e_usage</span><span class="p">)</span>
</code></pre></div></div>

<blockquote>
  <h4 id="완성">완성</h4>
  <hr />
</blockquote>

<p><img src="/assets/images/posts/one-pan/Python/2025-06-10-Hardware Monitor/img06.webp" alt="img06" /></p>

<p>딱 내가 필요한 정보만 쑤셔박았다<br />
음 투박해 기능적이야</p>

<p>자동 실행을 위해 작업 스케쥴러에 등록하고<br />
깔끔하게 보이기 위해 어항 케이스 안으로 쑤셔박으면 된다.</p>

<blockquote>
  <h4 id="반성">반성</h4>
  <hr />
</blockquote>

<p>cpu나 보드, 그래픽카드 제품 명도 넣는게 좋을까? 생각했는데<br />
별로 기능적으로 의미가 없을 것 같다.</p>

<p>AI에 적당히 깔끔하게 백그라운드 만들어달라하고 거기에 맞추면 더 보기 좋을 것 같기도 하고…<br />
일단은 이대로 써보고 질리는 날이 오면 추가 커스텀 들어가야겠다.</p>

<blockquote>
  <h4 id="코드-확인">코드 확인</h4>
  <hr />
</blockquote>

<p>파이썬 코드는 위 내용이 전부기 때문에 theme.yaml만 업로드</p>

<p><a href="https://raw.githubusercontent.com/movingwoo/movingwoo-snippets/refs/heads/main/one-pan/Python/2025-06-10-Hardware%20Monitor-theme.yaml">Link to GitHub</a></p>]]></content><author><name>movingwoo</name></author><category term="Development/Python/" /><category term="PYTHON" /><category term="하드웨어 모니터" /><category term="turing-smart-screen-python" /><summary type="html"><![CDATA[PYTHON 하드웨어 모니터 프로그램 개발]]></summary></entry><entry><title type="html">2784번 가로 세로 퍼즐</title><link href="https://movingwoo.com/boj/java/2025/06/04/2784.html" rel="alternate" type="text/html" title="2784번 가로 세로 퍼즐" /><published>2025-06-04T07:00:00+00:00</published><updated>2025-06-17T06:00:00+00:00</updated><id>https://movingwoo.com/boj/java/2025/06/04/2784</id><content type="html" xml:base="https://movingwoo.com/boj/java/2025/06/04/2784.html"><![CDATA[<blockquote>
  <h4 id="문제">문제</h4>
  <hr />
</blockquote>

<p><img src="/assets/images/posts/random-solve/Java/2025-06-04-2784/img01.webp" alt="img01" /></p>

<p><a href="https://www.acmicpc.net/problem/2784">2784번 가로 세로 퍼즐 - 백준</a></p>

<blockquote>
  <h4 id="설계">설계</h4>
  <hr />
</blockquote>

<p><span style="color: orange;"><strong>개똥아</strong></span><br />
<span style="color: orange;"><strong>똥쌌니</strong></span><br />
<span style="color: orange;"><strong>아니오</strong></span><br />
를 만드는 문제</p>

<p>생각보다… 조건이 복잡한건가?
일단 모든 단어 6개가 들어가야하니 중복 체크가 필요하고<br />
출력 시 사전순으로 앞서는 것을 출력하라고 되어있는데<br />
가로3개-&gt;세로3개 순으로 사전순인가? 가로-&gt;세로-&gt;가로-&gt;세로-&gt;가로-&gt;세로 순인가?<br />
도통 알 수 없다.</p>

<p>단어 6개 밖에 안들어오기 때문에 하나씩 넣으면서 시뮬레이션 돌려보면 되려나?<br />
대충 하나하나 다 갖다박아보자.</p>

<blockquote>
  <h4 id="구현">구현</h4>
  <hr />
</blockquote>

<h5 id="1-세로-단어-추출">1. 세로 단어 추출</h5>

<p>일단 사전 순서대로 들어온다고 하니 i, j, k 인덱스를 잡아서 순서대로 가로로 배치한다.<br />
그리고 세로 단어를 뽑아서 존재하는 단어인지 확인한다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span> <span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">6</span> <span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
	<span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">0</span> <span class="o">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="mi">6</span> <span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
		<span class="k">if</span> <span class="o">(</span><span class="n">i</span> <span class="o">==</span> <span class="n">j</span><span class="o">)</span> <span class="k">continue</span><span class="o">;</span>
		<span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">k</span> <span class="o">=</span> <span class="mi">0</span> <span class="o">;</span> <span class="n">k</span> <span class="o">&lt;</span> <span class="mi">6</span> <span class="o">;</span> <span class="n">k</span><span class="o">++)</span> <span class="o">{</span>
			<span class="k">if</span> <span class="o">(</span><span class="n">i</span> <span class="o">==</span> <span class="n">k</span> <span class="o">||</span> <span class="n">j</span> <span class="o">==</span> <span class="n">k</span><span class="o">)</span> <span class="k">continue</span><span class="o">;</span>
			
			<span class="nc">String</span> <span class="n">horizontalWord1</span> <span class="o">=</span> <span class="n">words</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
			<span class="nc">String</span> <span class="n">horizontalWord2</span> <span class="o">=</span> <span class="n">words</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">j</span><span class="o">);</span>
			<span class="nc">String</span> <span class="n">horizontalWord3</span> <span class="o">=</span> <span class="n">words</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">k</span><span class="o">);</span>
			
			<span class="c1">// 만든 단어</span>
			<span class="nc">Map</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">used</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HashMap</span><span class="o">&lt;&gt;();</span>
			
			<span class="kt">int</span> <span class="n">putCount</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
			<span class="c1">// 세로 줄 단어 생성</span>
			<span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">l</span> <span class="o">=</span> <span class="mi">0</span> <span class="o">;</span> <span class="n">l</span> <span class="o">&lt;</span> <span class="mi">3</span> <span class="o">;</span> <span class="n">l</span><span class="o">++)</span> <span class="o">{</span>
				<span class="nc">String</span> <span class="n">verticalWord</span> <span class="o">=</span> <span class="s">""</span> <span class="o">+</span> <span class="n">horizontalWord1</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">l</span><span class="o">)</span> <span class="o">+</span> <span class="n">horizontalWord2</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">l</span><span class="o">)</span> <span class="o">+</span> <span class="n">horizontalWord3</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">l</span><span class="o">);</span>
				
				<span class="c1">// 세로단어가 존재하지 않는 단어면 통과</span>
				<span class="k">if</span> <span class="o">(!</span><span class="n">words</span><span class="o">.</span><span class="na">contains</span><span class="o">(</span><span class="n">verticalWord</span><span class="o">))</span> <span class="k">break</span><span class="o">;</span>
				
				<span class="n">used</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">verticalWord</span><span class="o">,</span> <span class="n">used</span><span class="o">.</span><span class="na">getOrDefault</span><span class="o">(</span><span class="n">verticalWord</span><span class="o">,</span> <span class="mi">0</span><span class="o">)</span> <span class="o">+</span> <span class="mi">1</span><span class="o">);</span>
				<span class="n">putCount</span><span class="o">++;</span>
			<span class="o">}</span>
			
			<span class="c1">// 3번 안넣었으면 굳이 더 볼 필요 없음</span>
			<span class="k">if</span> <span class="o">(</span><span class="n">putCount</span> <span class="o">&lt;</span> <span class="mi">3</span><span class="o">)</span> <span class="k">continue</span><span class="o">;</span>
			
		<span class="o">}</span>
	<span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<h5 id="2-단어가-모이면-비교">2. 단어가 모이면 비교</h5>

<p>입력으로 중복이 들어올 수 있어서 Set은 사용하면 안된다.<br />
입력 받을때 단어 사용 횟수를 저장하는 Map을 만들고<br />
세로단어 생성 후 나온 퍼즐의 Map과 비교해 유효한지 판단한다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">words</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>
<span class="c1">// 비교 시 중복때문에 Set을 못써서 Map 사용</span>
<span class="nc">Map</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">count</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HashMap</span><span class="o">&lt;&gt;();</span>

<span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span> <span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">6</span> <span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
	<span class="nc">String</span> <span class="n">word</span> <span class="o">=</span> <span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">();</span>
	<span class="n">words</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">word</span><span class="o">);</span>
	<span class="n">count</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">word</span><span class="o">,</span> <span class="n">count</span><span class="o">.</span><span class="na">getOrDefault</span><span class="o">(</span><span class="n">word</span><span class="o">,</span> <span class="mi">0</span><span class="o">)</span> <span class="o">+</span> <span class="mi">1</span><span class="o">);</span>
<span class="o">}</span>

<span class="c1">// ... 중략 ...</span>

<span class="kt">boolean</span> <span class="n">valid</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
<span class="c1">// 비교</span>
<span class="k">for</span> <span class="o">(</span><span class="nc">Map</span><span class="o">.</span><span class="na">Entry</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">entry</span> <span class="o">:</span> <span class="n">used</span><span class="o">.</span><span class="na">entrySet</span><span class="o">())</span> <span class="o">{</span>
	<span class="k">if</span> <span class="o">(</span><span class="n">entry</span><span class="o">.</span><span class="na">getValue</span><span class="o">()</span> <span class="o">!=</span> <span class="n">count</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">entry</span><span class="o">.</span><span class="na">getKey</span><span class="o">()))</span> <span class="o">{</span>
		<span class="n">valid</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
		<span class="k">break</span><span class="o">;</span>
	<span class="o">}</span>
<span class="o">}</span>

<span class="k">if</span> <span class="o">(</span><span class="n">valid</span><span class="o">)</span> <span class="o">{</span>
	<span class="n">result</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
	<span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">horizontalWord1</span><span class="o">);</span>
	<span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="s">"\n"</span><span class="o">);</span>
	<span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">horizontalWord2</span><span class="o">);</span>
	<span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="s">"\n"</span><span class="o">);</span>
	<span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">horizontalWord3</span><span class="o">);</span>
	<span class="k">break</span> <span class="n">exit</span><span class="o">;</span>
<span class="o">}</span>
</code></pre></div></div>

<blockquote>
  <h4 id="채점">채점</h4>
  <hr />
</blockquote>

<p><img src="/assets/images/posts/random-solve/Java/2025-06-04-2784/img02.webp" alt="img02" /></p>

<blockquote>
  <h4 id="반성">반성</h4>
  <hr />
</blockquote>

<p>입력이 너무 적어서 아무 의미 없겠지만 생각해보자.<br />
이거 입력이 터져 나가는 경우엔 어떻게 풀어야하지?<br />
가로줄을 추가할 때마다 세로줄을 추출해서 접두사 검색을 해봐야하나?<br />
그럼 백트래킹 같은 걸 끼얹고 접두사 검색을 위해 트라이를 써야하는건가…<br />
이거 굉장히 곤란한 문제가 될 수 있겠다.<br />
에잇 끔찍한 소리 치워 꼴도 보기 싫어</p>

<blockquote>
  <h4 id="코드-확인">코드 확인</h4>
  <hr />
</blockquote>

<p><a href="https://raw.githubusercontent.com/movingwoo/movingwoo-snippets/refs/heads/main/random-solve/Java/2025-06-04-2784.java">Link to GitHub</a></p>]]></content><author><name>movingwoo</name></author><category term="BOJ/Java/" /><category term="JAVA" /><category term="알고리즘" /><category term="백준" /><category term="2784" /><category term="가로 세로 퍼즐" /><summary type="html"><![CDATA[백준 2784번 가로 세로 퍼즐 JAVA 문제풀이]]></summary></entry><entry><title type="html">4676번 Haiku Review</title><link href="https://movingwoo.com/boj/python/2025/06/04/4676.html" rel="alternate" type="text/html" title="4676번 Haiku Review" /><published>2025-06-04T05:00:00+00:00</published><updated>2025-06-17T06:00:00+00:00</updated><id>https://movingwoo.com/boj/python/2025/06/04/4676</id><content type="html" xml:base="https://movingwoo.com/boj/python/2025/06/04/4676.html"><![CDATA[<blockquote>
  <h4 id="문제">문제</h4>
  <hr />
</blockquote>

<p><img src="/assets/images/posts/random-solve/Python/2025-06-04-4676/img01.webp" alt="img01" /></p>

<p><a href="https://www.acmicpc.net/problem/4676">4676번 Haiku Review - 백준</a></p>

<blockquote>
  <h4 id="번역">번역</h4>
  <hr />
</blockquote>

<p>하이쿠는 5/7/5 조의 일본 시다.<br />
입력을 받아 하이쿠가 맞다면 Y 아니라면 잘못된 행의 숫자를 출력하시오.</p>

<blockquote>
  <h4 id="설계">설계</h4>
  <hr />
</blockquote>

<p><span style="color: orange;"><strong>a, e, i, o, u, y</strong></span> 6개를 모음으로 치며 모음이 붙어있는 경우에는 1음절로 친다.</p>

<p>예제의 경우를 확인해보면<br />
h<span style="color: orange;"><strong>a</strong></span>pp<span style="color: orange;"><strong>y</strong></span> p<span style="color: orange;"><strong>u</strong></span>rpl<span style="color: orange;"><strong>e</strong></span> fr<span style="color: orange;"><strong>o</strong></span>g<br />
<span style="color: orange;"><strong>ea</strong></span>t<span style="color: orange;"><strong>i</strong></span>ng b<span style="color: orange;"><strong>u</strong></span>gs <span style="color: orange;"><strong>i</strong></span>n th<span style="color: orange;"><strong>e</strong></span> m<span style="color: orange;"><strong>a</strong></span>rsh<span style="color: orange;"><strong>e</strong></span>s<br />
g<span style="color: orange;"><strong>e</strong></span>t <span style="color: orange;"><strong>i</strong></span>nd<span style="color: orange;"><strong>i</strong></span>g<span style="color: orange;"><strong>e</strong></span>sti<span style="color: orange;"><strong>o</strong></span>n</p>

<p>그래서 Y로 볼 수 있다.</p>

<p>아니 이거 정규식 짜면 한 방 아닌가?</p>

<blockquote>
  <h4 id="구현">구현</h4>
  <hr />
</blockquote>

<p>정규식은 <span style="color: orange;"><strong>[aeiouy]+</strong></span> 을 사용한다.<br />
aeiouy 중 하나 이상(+)의 연속된 그룹을 찾는 정규식이다.</p>

<p>자동으로 찾아주니 분기만 잘 태워주면 끝</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">re</span>

<span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
    <span class="n">haikus</span> <span class="o">=</span> <span class="nf">input</span><span class="p">().</span><span class="nf">strip</span><span class="p">()</span>
    <span class="k">if</span> <span class="n">haikus</span> <span class="o">==</span> <span class="sh">'</span><span class="s">e/o/i</span><span class="sh">'</span><span class="p">:</span>
        <span class="k">break</span>

    <span class="n">haiku</span> <span class="o">=</span> <span class="n">haikus</span><span class="p">.</span><span class="nf">split</span><span class="p">(</span><span class="sh">'</span><span class="s">/</span><span class="sh">'</span><span class="p">)</span>
    <span class="n">jo</span> <span class="o">=</span> <span class="p">[</span><span class="mi">5</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">5</span><span class="p">]</span>
    <span class="n">result</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
    
    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="mi">3</span><span class="p">):</span>

        <span class="k">if</span> <span class="nf">len</span><span class="p">(</span><span class="n">re</span><span class="p">.</span><span class="nf">findall</span><span class="p">(</span><span class="sa">r</span><span class="sh">'</span><span class="s">[aeiouy]+</span><span class="sh">'</span><span class="p">,</span> <span class="n">haiku</span><span class="p">[</span><span class="n">i</span><span class="p">]))</span> <span class="o">!=</span> <span class="n">jo</span><span class="p">[</span><span class="n">i</span><span class="p">]:</span>
            <span class="nf">print</span><span class="p">(</span><span class="n">result</span><span class="p">)</span>
            <span class="k">break</span>

        <span class="n">result</span> <span class="o">+=</span> <span class="mi">1</span>
    
    <span class="k">if</span> <span class="n">result</span> <span class="o">==</span> <span class="mi">4</span><span class="p">:</span>
        <span class="nf">print</span><span class="p">(</span><span class="sh">'</span><span class="s">Y</span><span class="sh">'</span><span class="p">)</span>
</code></pre></div></div>

<blockquote>
  <h4 id="채점">채점</h4>
  <hr />
</blockquote>

<p><img src="/assets/images/posts/random-solve/Python/2025-06-04-4676/img02.webp" alt="img02" /></p>

<blockquote>
  <h4 id="반성">반성</h4>
  <hr />
</blockquote>

<p>예전에 정규식으로 XSS 방지 스크립트 짜던 기억이 떠오른다.<br />
힘들었는데 진짜…</p>

<blockquote>
  <h4 id="코드-확인">코드 확인</h4>
  <hr />
</blockquote>

<p><a href="https://raw.githubusercontent.com/movingwoo/movingwoo-snippets/refs/heads/main/random-solve/Python/2025-06-04-4676.py">Link to GitHub</a></p>]]></content><author><name>movingwoo</name></author><category term="BOJ/Python/" /><category term="PYTHON" /><category term="알고리즘" /><category term="백준" /><category term="4676" /><category term="Haiku Review" /><summary type="html"><![CDATA[백준 4676번 Haiku Review PYTHON 문제풀이]]></summary></entry></feed>