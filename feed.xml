<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="ko-KR"><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="https://movingwoo.com/feed.xml" rel="self" type="application/atom+xml" /><link href="https://movingwoo.com/" rel="alternate" type="text/html" hreflang="ko-KR" /><updated>2025-06-27T05:59:53+00:00</updated><id>https://movingwoo.com/feed.xml</id><title type="html">뭐라도 하겠지</title><subtitle>개발, C++, JAVA, Python, Shortcut, 백준</subtitle><entry><title type="html">6976번 Divisibility by 11</title><link href="https://movingwoo.com/boj/python/2025/06/27/6976.html" rel="alternate" type="text/html" title="6976번 Divisibility by 11" /><published>2025-06-27T05:00:00+00:00</published><updated>2025-06-27T05:00:00+00:00</updated><id>https://movingwoo.com/boj/python/2025/06/27/6976</id><content type="html" xml:base="https://movingwoo.com/boj/python/2025/06/27/6976.html"><![CDATA[<blockquote>
  <h4 id="이왜틀">이왜틀?</h4>
  <hr />
</blockquote>

<p><img src="/assets/images/posts/BOJ/Python/2025-06-27-6976/img01.webp" alt="img01" /></p>

<p><a href="https://www.acmicpc.net/problem/6976">6976번 Divisibility by 11 - 백준</a></p>

<p>4년 전 메모리 초과 문제.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span> <span class="n">t</span><span class="o">=</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">q</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">q</span><span class="o">&lt;</span><span class="n">t</span><span class="o">;</span><span class="n">q</span><span class="o">++){</span>
    <span class="k">if</span><span class="o">(</span><span class="n">q</span><span class="o">!=</span><span class="mi">0</span><span class="o">)</span> <span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="s">"\n"</span><span class="o">);</span>
    <span class="nc">BigInteger</span> <span class="n">a</span><span class="o">=</span><span class="k">new</span> <span class="nc">BigInteger</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
    <span class="nc">BigInteger</span> <span class="n">b</span><span class="o">=</span><span class="n">a</span><span class="o">;</span>
    <span class="nc">StringBuilder</span> <span class="n">sb</span><span class="o">=</span><span class="k">new</span> <span class="nc">StringBuilder</span><span class="o">();</span>
    <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">a</span><span class="o">.</span><span class="na">toString</span><span class="o">()+</span><span class="s">"\n"</span><span class="o">);</span>
    <span class="k">while</span><span class="o">(</span><span class="kc">true</span><span class="o">){</span>
        <span class="k">if</span><span class="o">(</span><span class="n">b</span><span class="o">.</span><span class="na">toString</span><span class="o">().</span><span class="na">equals</span><span class="o">(</span><span class="s">"11"</span><span class="o">))</span> <span class="k">break</span><span class="o">;</span>
        <span class="n">b</span><span class="o">=</span><span class="n">b</span><span class="o">.</span><span class="na">divide</span><span class="o">(</span><span class="nc">BigInteger</span><span class="o">.</span><span class="na">TEN</span><span class="o">).</span><span class="na">subtract</span><span class="o">(</span><span class="n">b</span><span class="o">.</span><span class="na">mod</span><span class="o">(</span><span class="nc">BigInteger</span><span class="o">.</span><span class="na">TEN</span><span class="o">));</span>
        <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">b</span><span class="o">.</span><span class="na">toString</span><span class="o">()+</span><span class="s">"\n"</span><span class="o">);</span>
    <span class="o">}</span>
    <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"The number "</span><span class="o">+</span><span class="n">a</span><span class="o">.</span><span class="na">toString</span><span class="o">()+</span><span class="s">" is divisible by 11.\n"</span><span class="o">);</span>
    <span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">sb</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
<span class="o">}</span>
</code></pre></div></div>

<p>방식 자체는 맞는 것 같지만 메모리 초과다.</p>

<blockquote>
  <h4 id="설계">설계</h4>
  <hr />
</blockquote>

<p>최대 50자리라는 엄청나게 큰 숫자.<br />
일반적인 숫자 자료형으로는 해결할 수 없겠지.<br />
<span style="color: orange;"><strong>하지만 파이썬이 등장한다면 어떨까?</strong></span></p>

<blockquote>
  <h4 id="구현">구현</h4>
  <hr />
</blockquote>

<p>파이썬은 신이고 무적이라서 그냥 연산이 가능하다.<br />
<span style="color: orange;"><strong>진짜 파이썬은 전설이다…</strong></span></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">T</span> <span class="o">=</span> <span class="nf">int</span><span class="p">(</span><span class="nf">input</span><span class="p">())</span>

<span class="k">for</span> <span class="n">t</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="n">T</span><span class="p">):</span>
    <span class="nf">if </span><span class="p">(</span><span class="n">t</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">):</span>
        <span class="nf">print</span><span class="p">()</span>

    <span class="n">string_num</span> <span class="o">=</span> <span class="nf">input</span><span class="p">().</span><span class="nf">strip</span><span class="p">()</span>
    <span class="n">num</span> <span class="o">=</span> <span class="nf">int</span><span class="p">(</span><span class="n">string_num</span><span class="p">)</span>

    <span class="nf">print</span><span class="p">(</span><span class="n">num</span><span class="p">)</span>

    <span class="k">while</span> <span class="n">num</span> <span class="o">&gt;</span> <span class="mi">99</span><span class="p">:</span>
        <span class="n">remain</span> <span class="o">=</span> <span class="n">num</span> <span class="o">%</span> <span class="mi">10</span>
        <span class="n">num</span> <span class="o">=</span> <span class="n">num</span> <span class="o">//</span> <span class="mi">10</span> <span class="o">-</span> <span class="n">remain</span>
        <span class="nf">print</span><span class="p">(</span><span class="n">num</span><span class="p">)</span>
        
    <span class="nf">if </span><span class="p">(</span><span class="n">num</span> <span class="o">%</span> <span class="mi">11</span> <span class="o">==</span> <span class="mi">0</span><span class="p">):</span>
        <span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">The number {} is divisible by 11.</span><span class="sh">"</span><span class="p">.</span><span class="nf">format</span><span class="p">(</span><span class="n">string_num</span><span class="p">))</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">The number {} is not divisible by 11.</span><span class="sh">"</span><span class="p">.</span><span class="nf">format</span><span class="p">(</span><span class="n">string_num</span><span class="p">))</span>
</code></pre></div></div>

<blockquote>
  <h4 id="채점">채점</h4>
  <hr />
</blockquote>

<p><img src="/assets/images/posts/BOJ/Python/2025-06-27-6976/img02.webp" alt="img02" /></p>

<blockquote>
  <h4 id="반성">반성</h4>
  <hr />
</blockquote>

<p>테스트 케이스가 여럿인 경우 출력 사이에 공백 한 줄이 필요하다.<br />
연산은 두자리 수가 되면 멈춰야한다.<br />
조건들이 헷갈려서 자꾸 틀렸다.</p>

<p>아니 그러고보니 그러면 저 자바 코드도 틀린게 맞네.<br />
메모리 초과가 아니었어도 넌 나가리였어.</p>

<blockquote>
  <h4 id="코드-확인">코드 확인</h4>
  <hr />
</blockquote>

<p><a href="https://raw.githubusercontent.com/movingwoo/movingwoo-snippets/refs/heads/main/BOJ/Python/2025-06-27-6976.py">Link to GitHub</a></p>]]></content><author><name>movingwoo</name></author><category term="BOJ/Python/" /><category term="PYTHON" /><category term="알고리즘" /><category term="백준" /><category term="6976" /><category term="Divisibility by 11" /><category term="구현" /><summary type="html"><![CDATA[백준 6976번 Divisibility by 11 PYTHON 문제풀이]]></summary></entry><entry><title type="html">14551번 Card Game Contest</title><link href="https://movingwoo.com/boj/python/2025/06/27/14551.html" rel="alternate" type="text/html" title="14551번 Card Game Contest" /><published>2025-06-27T04:00:00+00:00</published><updated>2025-06-27T04:00:00+00:00</updated><id>https://movingwoo.com/boj/python/2025/06/27/14551</id><content type="html" xml:base="https://movingwoo.com/boj/python/2025/06/27/14551.html"><![CDATA[<blockquote>
  <h4 id="이왜틀">이왜틀?</h4>
  <hr />
</blockquote>

<p><img src="/assets/images/posts/BOJ/Python/2025-06-27-14551/img01.webp" alt="img01" /></p>

<p><a href="https://www.acmicpc.net/problem/14551">14551번 Card Game Contest - 백준</a></p>

<p>또 1년 전 틀렸습니다가 우수수 떨어진 문제.<br />
뭐가 문제였을까?</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">StringBuilder</span> <span class="n">sb</span><span class="o">=</span><span class="k">new</span> <span class="nc">StringBuilder</span><span class="o">();</span>
<span class="nc">StringTokenizer</span> <span class="n">st</span><span class="o">=</span><span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">(),</span><span class="s">" "</span><span class="o">);</span>
<span class="kt">int</span> <span class="n">n</span><span class="o">=</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
<span class="nc">BigInteger</span> <span class="n">m</span><span class="o">=</span><span class="k">new</span> <span class="nc">BigInteger</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
<span class="k">if</span><span class="o">(</span><span class="n">n</span><span class="o">==</span><span class="mi">0</span><span class="o">)</span> <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="mi">1</span><span class="o">);</span>
<span class="k">else</span> <span class="o">{</span>
    <span class="nc">BigInteger</span> <span class="n">r</span><span class="o">=</span><span class="k">new</span> <span class="nc">BigInteger</span><span class="o">(</span><span class="s">"1"</span><span class="o">);</span>
    <span class="k">while</span><span class="o">(</span><span class="n">n</span><span class="o">--&gt;</span><span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">String</span> <span class="n">t</span><span class="o">=</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">();</span>
        <span class="k">if</span><span class="o">(!</span><span class="n">t</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"0"</span><span class="o">))</span> <span class="n">r</span><span class="o">=</span><span class="n">r</span><span class="o">.</span><span class="na">multiply</span><span class="o">(</span><span class="k">new</span> <span class="nc">BigInteger</span><span class="o">(</span><span class="n">t</span><span class="o">));</span>
    <span class="o">}</span>
    <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">r</span><span class="o">.</span><span class="na">remainder</span><span class="o">(</span><span class="n">m</span><span class="o">).</span><span class="na">toString</span><span class="o">());</span>
<span class="o">}</span>
<span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">sb</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
</code></pre></div></div>

<p>BigInteger를 사용했으니 오버플로우는 없을테고<br />
이것도 일단은 맞지 않나??<br />
애초에 나머지 연산을 미리하면되는데 BigInteger는 왜 쓴거지?</p>

<blockquote>
  <h4 id="설계">설계</h4>
  <hr />
</blockquote>

<p>문제가 한글로 쓰인게 맞나 싶은데<br />
요지는 모든 정수 A를 곱하되 0은 1로 처리하면 된다.</p>

<blockquote>
  <h4 id="구현">구현</h4>
  <hr />
</blockquote>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">N</span><span class="p">,</span> <span class="n">M</span> <span class="o">=</span> <span class="nf">map</span><span class="p">(</span><span class="nb">int</span><span class="p">,</span> <span class="nf">input</span><span class="p">().</span><span class="nf">split</span><span class="p">())</span>

<span class="n">result</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>

<span class="k">while</span> <span class="n">N</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">:</span>
    <span class="n">A</span> <span class="o">=</span> <span class="nf">int</span><span class="p">(</span><span class="nf">input</span><span class="p">())</span>

    <span class="k">if</span> <span class="n">A</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">:</span>
        <span class="n">result</span> <span class="o">*=</span> <span class="n">A</span>
        <span class="n">result</span> <span class="o">%=</span> <span class="n">M</span>

    <span class="n">N</span> <span class="o">-=</span> <span class="mi">1</span>

<span class="nf">print</span><span class="p">(</span><span class="n">result</span> <span class="o">%</span> <span class="n">M</span><span class="p">)</span>
</code></pre></div></div>

<blockquote>
  <h4 id="채점">채점</h4>
  <hr />
</blockquote>

<p><img src="/assets/images/posts/BOJ/Python/2025-06-27-14551/img02.webp" alt="img02" /></p>

<p>아하… 풀어보고 알았다.<br />
<span style="color: orange;"><strong>Java 코드는 틀린 게 맞다.</strong></span><br />
0 1을 입력하면 경우의 수는 1이지만 1 모듈로 연산으로 0이 답인데 나는 1을 출력했다.</p>

<blockquote>
  <h4 id="반성">반성</h4>
  <hr />
</blockquote>

<p>틀리는 이유가 이렇게 잘 보이는데 왜 1년 전에는 몰랐을까</p>

<blockquote>
  <h4 id="코드-확인">코드 확인</h4>
  <hr />
</blockquote>

<p><a href="https://raw.githubusercontent.com/movingwoo/movingwoo-snippets/refs/heads/main/BOJ/Python/2025-06-27-14551.py">Link to GitHub</a></p>]]></content><author><name>movingwoo</name></author><category term="BOJ/Python/" /><category term="PYTHON" /><category term="알고리즘" /><category term="백준" /><category term="14551" /><category term="Card Game Contest" /><category term="구현" /><summary type="html"><![CDATA[백준 14551번 Card Game Contest PYTHON 문제풀이]]></summary></entry><entry><title type="html">2909번 캔디 구매</title><link href="https://movingwoo.com/boj/python/2025/06/26/2909.html" rel="alternate" type="text/html" title="2909번 캔디 구매" /><published>2025-06-26T05:00:00+00:00</published><updated>2025-06-26T05:00:00+00:00</updated><id>https://movingwoo.com/boj/python/2025/06/26/2909</id><content type="html" xml:base="https://movingwoo.com/boj/python/2025/06/26/2909.html"><![CDATA[<blockquote>
  <h4 id="이왜틀">이왜틀?</h4>
  <hr />
</blockquote>

<p><img src="/assets/images/posts/BOJ/Python/2025-06-26-2909/img01.webp" alt="img01" /></p>

<p><a href="https://www.acmicpc.net/problem/2909">2909번 캔디 구매 - 백준</a></p>

<p>빠른 번호의 낮은 레벨 문제는 테스트 케이스가 아주 많다는 것<br />
어떤 반례의 함정에 빠져 틀렸을까?</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">StringTokenizer</span> <span class="n">st</span><span class="o">=</span><span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">(),</span><span class="s">" "</span><span class="o">);</span>
<span class="kt">long</span> <span class="n">candy</span><span class="o">=</span><span class="nc">Long</span><span class="o">.</span><span class="na">parseLong</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
<span class="kt">long</span> <span class="n">zero</span><span class="o">=</span><span class="nc">Long</span><span class="o">.</span><span class="na">parseLong</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
<span class="kt">long</span> <span class="n">money</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span>
<span class="k">for</span><span class="o">(</span><span class="kt">long</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">zero</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
    <span class="n">money</span><span class="o">*=</span><span class="mi">10</span><span class="o">;</span>
<span class="o">}</span>

<span class="kt">long</span> <span class="n">price</span><span class="o">=</span><span class="n">candy</span><span class="o">/</span><span class="n">money</span><span class="o">*</span><span class="n">money</span><span class="o">;</span>

<span class="k">if</span><span class="o">(</span><span class="n">candy</span><span class="o">%</span><span class="n">money</span><span class="o">&gt;=</span><span class="n">money</span><span class="o">/</span><span class="mi">2</span><span class="o">)</span> <span class="n">candy</span><span class="o">=</span><span class="n">price</span><span class="o">+</span><span class="n">money</span><span class="o">;</span>
<span class="k">else</span> <span class="n">candy</span><span class="o">=</span><span class="n">price</span><span class="o">;</span>
<span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">candy</span><span class="o">+</span><span class="s">""</span><span class="o">);</span>
</code></pre></div></div>

<p>음 잘 모르겠다 나름 짱구 잘 굴린 것 같은데<br />
얼추 맞지 않나?</p>

<blockquote>
  <h4 id="설계">설계</h4>
  <hr />
</blockquote>

<p>일단 파이썬으로 깔끔하게 다시 짜보자.<br />
decimal을 사용해 반올림한다.</p>

<blockquote>
  <h4 id="구현">구현</h4>
  <hr />
</blockquote>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="n">decimal</span> <span class="kn">import</span> <span class="n">Decimal</span><span class="p">,</span> <span class="n">ROUND_HALF_UP</span>

<span class="n">C</span><span class="p">,</span> <span class="n">K</span> <span class="o">=</span> <span class="nf">map</span><span class="p">(</span><span class="nb">int</span><span class="p">,</span> <span class="nf">input</span><span class="p">().</span><span class="nf">split</span><span class="p">())</span>

<span class="n">shift</span> <span class="o">=</span> <span class="nc">Decimal</span><span class="p">(</span><span class="sh">'</span><span class="s">1e{}</span><span class="sh">'</span><span class="p">.</span><span class="nf">format</span><span class="p">(</span><span class="n">K</span><span class="p">))</span>
<span class="n">result</span> <span class="o">=</span> <span class="p">(</span><span class="nc">Decimal</span><span class="p">(</span><span class="n">C</span><span class="p">)</span> <span class="o">/</span> <span class="n">shift</span><span class="p">).</span><span class="nf">to_integral_value</span><span class="p">(</span><span class="n">rounding</span><span class="o">=</span><span class="n">ROUND_HALF_UP</span><span class="p">)</span> <span class="o">*</span> <span class="n">shift</span>

<span class="nf">print</span><span class="p">(</span><span class="nf">int</span><span class="p">(</span><span class="n">result</span><span class="p">))</span>
</code></pre></div></div>

<blockquote>
  <h4 id="채점">채점</h4>
  <hr />
</blockquote>

<p><img src="/assets/images/posts/BOJ/Python/2025-06-26-2909/img02.webp" alt="img02" /></p>

<blockquote>
  <h4 id="반성">반성</h4>
  <hr />
</blockquote>

<p>괜히 뻘짓하지말고 Math.round를 썼으면 통과했으려나?<br />
큰 수에서 걸릴 일은 K가 9라서 없었을텐데<br />
작은 수에서 걸렸나?</p>

<p>뭐 풀었으니 그냥 넘어가야지.</p>

<blockquote>
  <h4 id="코드-확인">코드 확인</h4>
  <hr />
</blockquote>

<p><a href="https://raw.githubusercontent.com/movingwoo/movingwoo-snippets/refs/heads/main/BOJ/Python/2025-06-26-2909.py">Link to GitHub</a></p>]]></content><author><name>movingwoo</name></author><category term="BOJ/Python/" /><category term="PYTHON" /><category term="알고리즘" /><category term="백준" /><category term="2909" /><category term="캔디 구매" /><category term="구현" /><summary type="html"><![CDATA[백준 2909번 캔디 구매 PYTHON 문제풀이]]></summary></entry><entry><title type="html">9924번 The Euclidean Algorithm</title><link href="https://movingwoo.com/boj/python/2025/06/26/9924.html" rel="alternate" type="text/html" title="9924번 The Euclidean Algorithm" /><published>2025-06-26T03:00:00+00:00</published><updated>2025-06-26T03:00:00+00:00</updated><id>https://movingwoo.com/boj/python/2025/06/26/9924</id><content type="html" xml:base="https://movingwoo.com/boj/python/2025/06/26/9924.html"><![CDATA[<blockquote>
  <h4 id="이왜틀">이왜틀?</h4>
  <hr />
</blockquote>

<p><img src="/assets/images/posts/BOJ/Python/2025-06-26-9924/img01.webp" alt="img01" /></p>

<p><a href="https://www.acmicpc.net/problem/9924">9924번 The Euclidean Algorithm - 백준</a></p>

<p>이건 또 무슨일이래<br />
브론즈 3문제에서 무슨 사고가 일어난거지?</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">String</span><span class="o">[]</span> <span class="n">arr</span><span class="o">=</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">().</span><span class="na">split</span><span class="o">(</span><span class="s">" "</span><span class="o">);</span>
<span class="kt">int</span> <span class="n">a</span><span class="o">=</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">arr</span><span class="o">[</span><span class="mi">0</span><span class="o">]);</span>
<span class="kt">int</span> <span class="n">b</span><span class="o">=</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">arr</span><span class="o">[</span><span class="n">arr</span><span class="o">.</span><span class="na">length</span><span class="o">-</span><span class="mi">1</span><span class="o">]);</span>
<span class="k">if</span><span class="o">(</span><span class="n">b</span><span class="o">&gt;</span><span class="n">a</span><span class="o">)</span> <span class="o">{</span>
	<span class="kt">int</span> <span class="n">t</span><span class="o">=</span><span class="n">b</span><span class="o">;</span>
	<span class="n">b</span><span class="o">=</span><span class="n">a</span><span class="o">;</span>
	<span class="n">a</span><span class="o">=</span><span class="n">t</span><span class="o">;</span>
<span class="o">}</span>
<span class="kt">int</span> <span class="n">c</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
<span class="k">while</span><span class="o">(</span><span class="kc">true</span><span class="o">)</span> <span class="o">{</span>
	<span class="k">if</span><span class="o">(</span><span class="n">a</span><span class="o">%</span><span class="n">b</span><span class="o">==</span><span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
		<span class="n">c</span><span class="o">+=</span><span class="n">a</span><span class="o">/</span><span class="n">b</span><span class="o">-</span><span class="mi">1</span><span class="o">;</span>
		<span class="k">break</span><span class="o">;</span>
	<span class="o">}</span><span class="k">else</span> <span class="o">{</span>
		<span class="n">c</span><span class="o">+=</span><span class="n">a</span><span class="o">/</span><span class="n">b</span><span class="o">;</span>
		<span class="kt">int</span> <span class="n">t</span><span class="o">=</span><span class="n">a</span><span class="o">%</span><span class="n">b</span><span class="o">;</span>
		<span class="n">a</span><span class="o">=</span><span class="n">b</span><span class="o">;</span>
		<span class="n">b</span><span class="o">=</span><span class="n">t</span><span class="o">;</span>
	<span class="o">}</span>
<span class="o">}</span>
<span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">c</span><span class="o">+</span><span class="s">""</span><span class="o">);</span>
</code></pre></div></div>

<p>이상한데… 맞는 것 같은데?</p>

<blockquote>
  <h4 id="설계">설계</h4>
  <hr />
</blockquote>

<p><span style="color: orange;"><strong>유클리드 호제법</strong></span>에 관련된 문제.<br />
고대의 유클리드 호제법은 뺄셈을 반복하며 진행하며 3단계로 이루어진다.<br />
이를 몇 번 실행했는가에 관련된 문제인데…</p>

<p>아무리 예제를 넣어봐도 틀린게 없는 것 같다.<br />
이상하네 파이썬으로 포팅해보자.<br />
어쩌면 입력데이터에 공백 이슈가 있을 수도?</p>

<blockquote>
  <h4 id="구현">구현</h4>
  <hr />
</blockquote>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">A</span><span class="p">,</span> <span class="n">B</span> <span class="o">=</span> <span class="nf">map</span><span class="p">(</span><span class="nb">int</span><span class="p">,</span> <span class="nf">input</span><span class="p">().</span><span class="nf">split</span><span class="p">())</span>

<span class="nf">if </span><span class="p">(</span><span class="n">B</span> <span class="o">&gt;</span> <span class="n">A</span><span class="p">):</span>
    <span class="n">temp</span> <span class="o">=</span> <span class="n">B</span>
    <span class="n">B</span> <span class="o">=</span> <span class="n">A</span>
    <span class="n">A</span> <span class="o">=</span> <span class="n">temp</span>

<span class="n">result</span> <span class="o">=</span> <span class="mi">0</span>

<span class="nf">while </span><span class="p">(</span><span class="bp">True</span><span class="p">):</span>
    <span class="nf">if </span><span class="p">(</span><span class="n">A</span> <span class="o">%</span> <span class="n">B</span> <span class="o">==</span> <span class="mi">0</span><span class="p">):</span>
        <span class="n">result</span> <span class="o">+=</span> <span class="n">A</span> <span class="o">//</span> <span class="n">B</span> <span class="o">-</span> <span class="mi">1</span>
        <span class="k">break</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="n">result</span> <span class="o">+=</span> <span class="n">A</span> <span class="o">//</span> <span class="n">B</span>
        <span class="n">temp</span> <span class="o">=</span> <span class="n">A</span> <span class="o">%</span> <span class="n">B</span>
        <span class="n">A</span> <span class="o">=</span> <span class="n">B</span>
        <span class="n">B</span> <span class="o">=</span> <span class="n">temp</span>

<span class="nf">print</span><span class="p">(</span><span class="n">result</span><span class="p">)</span>
</code></pre></div></div>

<blockquote>
  <h4 id="채점">채점</h4>
  <hr />
</blockquote>

<p><img src="/assets/images/posts/BOJ/Python/2025-06-26-9924/img02.webp" alt="img02" /></p>

<p><span style="color: red;"><strong>아니 뭐임? 맞잖아!!!!!!!!</strong></span><br />
<span style="color: orange;"><strong>공백 문제</strong></span>가 맞는 것 같다.<br />
억울하니 java 소스에 공백 판정을 새로 넣어서 돌려보자.</p>

<p><img src="/assets/images/posts/BOJ/Python/2025-06-26-9924/img03.webp" alt="img03" /></p>

<p>진짜 어이없네…</p>

<blockquote>
  <h4 id="반성">반성</h4>
  <hr />
</blockquote>

<p>좀 오래된 외국 문제에 이런 경우가 많다.<br />
입력 공백이 지멋대로인 경우 말이다.<br />
사실 자바 Scanner 유틸을 썼으면 아무 문제 없었는데 Scanner 성능에 대한 불신과 피해망상 때문에 BufferedReader로 받아 직접 파싱하려한게 문제.</p>

<blockquote>
  <h4 id="코드-확인">코드 확인</h4>
  <hr />
</blockquote>

<p><a href="https://raw.githubusercontent.com/movingwoo/movingwoo-snippets/refs/heads/main/BOJ/Python/2025-06-26-9924.py">Link to GitHub</a></p>]]></content><author><name>movingwoo</name></author><category term="BOJ/Python/" /><category term="PYTHON" /><category term="알고리즘" /><category term="백준" /><category term="9924" /><category term="The Euclidean Algorithm" /><category term="구현" /><summary type="html"><![CDATA[백준 9924번 The Euclidean Algorithm PYTHON 문제풀이]]></summary></entry><entry><title type="html">9298번 Ant Entrapment</title><link href="https://movingwoo.com/boj/python/2025/06/26/9298.html" rel="alternate" type="text/html" title="9298번 Ant Entrapment" /><published>2025-06-26T02:00:00+00:00</published><updated>2025-06-26T02:00:00+00:00</updated><id>https://movingwoo.com/boj/python/2025/06/26/9298</id><content type="html" xml:base="https://movingwoo.com/boj/python/2025/06/26/9298.html"><![CDATA[<blockquote>
  <h4 id="이왜틀">이왜틀?</h4>
  <hr />
</blockquote>

<p>남은 문제들은 파이썬으로 조져주자.<br />
자바코드 많이보니까 멀미난다.</p>

<p><img src="/assets/images/posts/BOJ/Python/2025-06-26-9298/img01.webp" alt="img01" /></p>

<p><a href="https://www.acmicpc.net/problem/9298">9298번 Ant Entrapment - 백준</a></p>

<p>아니 이게 뭐지?<br />
왜 이렇게 많이 틀렸지?</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">Scanner</span> <span class="n">sc</span><span class="o">=</span><span class="k">new</span> <span class="nc">Scanner</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
<span class="kt">int</span> <span class="n">t</span><span class="o">=</span><span class="n">sc</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">k</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span><span class="n">k</span><span class="o">&lt;=</span><span class="n">t</span><span class="o">;</span><span class="n">k</span><span class="o">++)</span> <span class="o">{</span>
	<span class="kt">int</span> <span class="n">n</span><span class="o">=</span><span class="n">sc</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
	<span class="kt">double</span> <span class="n">maxx</span><span class="o">=</span><span class="nc">Double</span><span class="o">.</span><span class="na">MIN_VALUE</span><span class="o">;</span>
	<span class="kt">double</span> <span class="n">minx</span><span class="o">=</span><span class="nc">Double</span><span class="o">.</span><span class="na">MAX_VALUE</span><span class="o">;</span>
	<span class="kt">double</span> <span class="n">maxy</span><span class="o">=</span><span class="nc">Double</span><span class="o">.</span><span class="na">MIN_VALUE</span><span class="o">;</span>
	<span class="kt">double</span> <span class="n">miny</span><span class="o">=</span><span class="nc">Double</span><span class="o">.</span><span class="na">MAX_VALUE</span><span class="o">;</span>
	<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
		<span class="kt">double</span> <span class="n">x</span><span class="o">=</span><span class="n">sc</span><span class="o">.</span><span class="na">nextDouble</span><span class="o">();</span>
		<span class="kt">double</span> <span class="n">y</span><span class="o">=</span><span class="n">sc</span><span class="o">.</span><span class="na">nextDouble</span><span class="o">();</span>
		<span class="k">if</span><span class="o">(</span><span class="n">x</span><span class="o">&gt;</span><span class="n">maxx</span><span class="o">)</span> <span class="n">maxx</span><span class="o">=</span><span class="n">x</span><span class="o">;</span>
		<span class="k">if</span><span class="o">(</span><span class="n">x</span><span class="o">&lt;</span><span class="n">minx</span><span class="o">)</span> <span class="n">minx</span><span class="o">=</span><span class="n">x</span><span class="o">;</span>
		<span class="k">if</span><span class="o">(</span><span class="n">y</span><span class="o">&gt;</span><span class="n">maxy</span><span class="o">)</span> <span class="n">maxy</span><span class="o">=</span><span class="n">y</span><span class="o">;</span>
		<span class="k">if</span><span class="o">(</span><span class="n">y</span><span class="o">&lt;</span><span class="n">miny</span><span class="o">)</span> <span class="n">miny</span><span class="o">=</span><span class="n">y</span><span class="o">;</span>
	<span class="o">}</span>
	<span class="kt">double</span> <span class="n">x</span><span class="o">=</span><span class="n">maxx</span><span class="o">-</span><span class="n">minx</span><span class="o">;</span>
	<span class="kt">double</span> <span class="n">y</span><span class="o">=</span><span class="n">maxy</span><span class="o">-</span><span class="n">miny</span><span class="o">;</span>
	<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">"Case %d: Area %.12g, Perimeter %.12g\n"</span><span class="o">,</span><span class="n">k</span><span class="o">,</span><span class="n">x</span><span class="o">*</span><span class="n">y</span><span class="o">,(</span><span class="n">x</span><span class="o">+</span><span class="n">y</span><span class="o">)*</span><span class="mi">2</span><span class="o">);</span>
<span class="o">}</span>
</code></pre></div></div>

<p>아하…<br />
<span style="color: orange;"><strong>Double.MIN_VALUE는 사실 음수가 아니다!!!</strong></span><br />
입력은 최소 -1000.0 까지 들어올 수 있는데<br />
최소값을 잘못 잡았으니 당연히 틀리는 것이다.</p>

<blockquote>
  <h4 id="설계">설계</h4>
  <hr />
</blockquote>

<p>똑같이 파이썬으로 구현하면 될 듯?</p>

<blockquote>
  <h4 id="구현">구현</h4>
  <hr />
</blockquote>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">T</span> <span class="o">=</span> <span class="nf">int</span><span class="p">(</span><span class="nf">input</span><span class="p">())</span>

<span class="k">for</span> <span class="n">t</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="n">T</span><span class="p">):</span>

    <span class="n">N</span> <span class="o">=</span> <span class="nf">int</span><span class="p">(</span><span class="nf">input</span><span class="p">())</span>

    <span class="n">max_x</span><span class="p">,</span> <span class="n">max_y</span> <span class="o">=</span> <span class="o">-</span><span class="mf">1001.0</span><span class="p">,</span> <span class="o">-</span><span class="mf">1001.0</span>
    <span class="n">min_x</span><span class="p">,</span> <span class="n">min_y</span> <span class="o">=</span> <span class="mf">1001.0</span><span class="p">,</span> <span class="mf">1001.0</span>

    <span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="n">N</span><span class="p">):</span>
        <span class="n">x</span><span class="p">,</span> <span class="n">y</span> <span class="o">=</span> <span class="nf">map</span><span class="p">(</span><span class="nb">float</span><span class="p">,</span> <span class="nf">input</span><span class="p">().</span><span class="nf">split</span><span class="p">())</span>
        <span class="n">max_x</span> <span class="o">=</span> <span class="nf">max</span><span class="p">(</span><span class="n">max_x</span><span class="p">,</span> <span class="n">x</span><span class="p">)</span>
        <span class="n">min_x</span> <span class="o">=</span> <span class="nf">min</span><span class="p">(</span><span class="n">min_x</span><span class="p">,</span> <span class="n">x</span><span class="p">)</span>
        <span class="n">max_y</span> <span class="o">=</span> <span class="nf">max</span><span class="p">(</span><span class="n">max_y</span><span class="p">,</span> <span class="n">y</span><span class="p">)</span>
        <span class="n">min_y</span> <span class="o">=</span> <span class="nf">min</span><span class="p">(</span><span class="n">min_y</span><span class="p">,</span> <span class="n">y</span><span class="p">)</span>
    
    <span class="n">x</span> <span class="o">=</span> <span class="n">max_x</span> <span class="o">-</span> <span class="n">min_x</span>
    <span class="n">y</span> <span class="o">=</span> <span class="n">max_y</span> <span class="o">-</span> <span class="n">min_y</span>

    <span class="nf">print</span><span class="p">(</span><span class="sa">f</span><span class="sh">"</span><span class="s">Case </span><span class="si">{</span><span class="n">t</span><span class="o">+</span><span class="mi">1</span><span class="si">}</span><span class="s">: Area </span><span class="si">{</span><span class="n">x</span> <span class="o">*</span> <span class="n">y</span> <span class="si">:</span><span class="p">.</span><span class="mi">9</span><span class="n">f</span><span class="si">}</span><span class="s">, Perimeter </span><span class="si">{</span><span class="mi">2</span> <span class="o">*</span> <span class="p">(</span><span class="n">x</span> <span class="o">+</span> <span class="n">y</span><span class="p">)</span> <span class="si">:</span><span class="p">.</span><span class="mi">9</span><span class="n">f</span><span class="si">}</span><span class="sh">"</span><span class="p">)</span>
</code></pre></div></div>

<blockquote>
  <h4 id="채점">채점</h4>
  <hr />
</blockquote>

<p><img src="/assets/images/posts/BOJ/Python/2025-06-26-9298/img02.webp" alt="img02" /></p>

<blockquote>
  <h4 id="반성">반성</h4>
  <hr />
</blockquote>

<p>역시 파이썬 코드는 예뻐 깔끔해 아름다워</p>

<blockquote>
  <h4 id="코드-확인">코드 확인</h4>
  <hr />
</blockquote>

<p><a href="https://raw.githubusercontent.com/movingwoo/movingwoo-snippets/refs/heads/main/BOJ/Python/2025-06-26-9298.py">Link to GitHub</a></p>]]></content><author><name>movingwoo</name></author><category term="BOJ/Python/" /><category term="PYTHON" /><category term="알고리즘" /><category term="백준" /><category term="9298" /><category term="Ant Entrapment" /><category term="기하학" /><summary type="html"><![CDATA[백준 9298번 Ant Entrapment PYTHON 문제풀이]]></summary></entry><entry><title type="html">1168번 요세푸스 문제 2</title><link href="https://movingwoo.com/boj/java/2025/06/26/1168.html" rel="alternate" type="text/html" title="1168번 요세푸스 문제 2" /><published>2025-06-26T01:00:00+00:00</published><updated>2025-06-26T01:00:00+00:00</updated><id>https://movingwoo.com/boj/java/2025/06/26/1168</id><content type="html" xml:base="https://movingwoo.com/boj/java/2025/06/26/1168.html"><![CDATA[<blockquote>
  <h4 id="이왜틀">이왜틀?</h4>
  <hr />
</blockquote>

<p><img src="/assets/images/posts/BOJ/Java/2025-06-26-1168/img01.webp" alt="img01" /></p>

<p><a href="https://www.acmicpc.net/problem/1168">1168번 요세푸스 문제 2 - 백준</a></p>

<p>5년 전 메모리 초과<br />
이건 소스 안봐도 알 것 같다.<br />
단순 시뮬레이션으로 접근했다가 메모리 터졌겠지.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">StringTokenizer</span> <span class="n">st</span><span class="o">=</span><span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">(),</span><span class="s">" "</span><span class="o">);</span>
<span class="kt">int</span> <span class="n">people</span><span class="o">=</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
<span class="kt">int</span> <span class="n">num</span><span class="o">=</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>

<span class="nc">Queue</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">que</span><span class="o">=</span><span class="k">new</span> <span class="nc">LinkedList</span><span class="o">&lt;&gt;();</span>
<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="n">people</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
	<span class="n">que</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
<span class="o">}</span>

<span class="nc">StringBuilder</span> <span class="n">sb</span><span class="o">=</span><span class="k">new</span> <span class="nc">StringBuilder</span><span class="o">();</span>
<span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"&lt;"</span><span class="o">);</span>
<span class="k">while</span><span class="o">(!</span><span class="n">que</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">()){</span>
	<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="n">num</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
		<span class="k">if</span><span class="o">(</span><span class="n">i</span><span class="o">!=</span><span class="n">num</span><span class="o">){</span>
			<span class="n">que</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">que</span><span class="o">.</span><span class="na">poll</span><span class="o">());</span>
		<span class="o">}</span><span class="k">else</span><span class="o">{</span>
			<span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">que</span><span class="o">.</span><span class="na">poll</span><span class="o">()+(</span><span class="n">que</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">()?</span><span class="s">"&gt;"</span><span class="o">:</span><span class="s">", "</span><span class="o">));</span>
		<span class="o">}</span>
	<span class="o">}</span>
<span class="o">}</span>
<span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">sb</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
</code></pre></div></div>

<p>큐를 사용해서 시뮬레이션 했구나</p>

<blockquote>
  <h4 id="설계">설계</h4>
  <hr />
</blockquote>

<p><span style="color: orange;"><strong>요세푸스 문제</strong></span>의 마지막 생존자를 구하는 건 공식이 있다.<br />
이 문제는 K번째 사람이 사라지는 순서대로 출력을 해야해서 공식을 사용할 수 없다.</p>

<p>머리가 아프지만 <span style="color: orange;"><strong>세그먼트 트리</strong></span>를 구현하고<br />
K번째 사람을 삭제하며 시뮬레이션해보자.</p>

<blockquote>
  <h4 id="구현">구현</h4>
  <hr />
</blockquote>

<h5 id="1-세그먼트-트리">1. 세그먼트 트리</h5>

<p>update 함수 외 <span style="color: orange;"><strong>현재 살아있는 사람 수</strong></span>와 <span style="color: orange;"><strong>K번째 제거할 사람</strong></span>을 찾는 함수를 구현한다.<br />
루트노드를 반환하는 getAlive 함수는 현재 원의 크기와 K번째 타겟의 상대적 위치를 구하기 위해 사용하고<br />
K번째 타겟을 반환하는 getDead 함수는 실제 위치를 확인 후 제거하는데 사용한다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">static</span> <span class="kd">class</span> <span class="nc">SegmentTree</span> <span class="o">{</span>
	<span class="kt">int</span> <span class="no">N</span><span class="o">;</span>
	<span class="kd">private</span> <span class="kt">int</span> <span class="n">size</span><span class="o">;</span>
	<span class="kd">private</span> <span class="kt">int</span><span class="o">[]</span> <span class="n">tree</span><span class="o">;</span>
	
	<span class="kd">public</span> <span class="nf">SegmentTree</span><span class="o">(){</span>
		<span class="k">this</span><span class="o">.</span><span class="na">size</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
	<span class="o">}</span>

	<span class="kd">public</span> <span class="nf">SegmentTree</span><span class="o">(</span><span class="kt">int</span> <span class="no">N</span><span class="o">){</span>
		<span class="k">this</span><span class="o">();</span>
		<span class="k">this</span><span class="o">.</span><span class="na">N</span> <span class="o">=</span> <span class="no">N</span><span class="o">;</span>
		
		<span class="k">while</span><span class="o">(</span><span class="n">size</span> <span class="o">&lt;</span> <span class="no">N</span><span class="o">)</span> <span class="o">{</span>
			<span class="n">size</span> <span class="o">&lt;&lt;=</span> <span class="mi">1</span><span class="o">;</span>
		<span class="o">}</span>
		
		<span class="n">tree</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">size</span> <span class="o">*</span> <span class="mi">2</span><span class="o">];</span>
		
		<span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span> <span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="no">N</span> <span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
			<span class="n">tree</span><span class="o">[</span><span class="n">size</span> <span class="o">+</span> <span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
		<span class="o">}</span>
		
		<span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">size</span> <span class="o">-</span> <span class="mi">1</span> <span class="o">;</span> <span class="n">i</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="o">;</span> <span class="n">i</span><span class="o">--)</span> <span class="o">{</span>
			<span class="n">tree</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="n">tree</span><span class="o">[</span><span class="n">i</span> <span class="o">*</span> <span class="mi">2</span><span class="o">]</span> <span class="o">+</span> <span class="n">tree</span><span class="o">[</span><span class="n">i</span> <span class="o">*</span> <span class="mi">2</span> <span class="o">+</span> <span class="mi">1</span><span class="o">];</span>
		<span class="o">}</span>
	<span class="o">}</span>
	
	
	<span class="kd">public</span> <span class="kt">int</span> <span class="nf">getAlive</span><span class="o">()</span> <span class="o">{</span>
		<span class="c1">// 현재 살아있는 사람 수 == 루트 노드</span>
		<span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">tree</span><span class="o">[</span><span class="mi">1</span><span class="o">];</span>
	<span class="o">}</span>
	
	
	<span class="kd">public</span> <span class="kt">int</span> <span class="nf">getDead</span><span class="o">(</span><span class="kt">int</span> <span class="no">K</span><span class="o">)</span> <span class="o">{</span>
		<span class="kt">int</span> <span class="n">idx</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
		
		<span class="k">while</span> <span class="o">(</span><span class="n">idx</span> <span class="o">&lt;</span> <span class="n">size</span><span class="o">)</span> <span class="o">{</span>
			
			<span class="k">if</span><span class="o">(</span><span class="n">tree</span><span class="o">[</span><span class="n">idx</span> <span class="o">*</span> <span class="mi">2</span><span class="o">]</span> <span class="o">&gt;=</span> <span class="no">K</span><span class="o">)</span> <span class="o">{</span>
				<span class="c1">// 왼쪽 노드 생존자 수가 K이상이면 왼쪽으로</span>
				<span class="n">idx</span> <span class="o">*=</span> <span class="mi">2</span><span class="o">;</span>
			<span class="o">}</span><span class="k">else</span> <span class="o">{</span>
				<span class="c1">// 왼쪽 노드 생존자 수가 K보다 작으면 오른쪽으로</span>
				<span class="no">K</span> <span class="o">-=</span> <span class="n">tree</span><span class="o">[</span><span class="n">idx</span> <span class="o">*</span> <span class="mi">2</span><span class="o">];</span>
				<span class="n">idx</span> <span class="o">=</span> <span class="n">idx</span> <span class="o">*</span> <span class="mi">2</span> <span class="o">+</span> <span class="mi">1</span><span class="o">;</span>
			<span class="o">}</span>
		<span class="o">}</span>
		
		<span class="k">return</span> <span class="n">idx</span> <span class="o">-</span> <span class="n">size</span><span class="o">;</span>
	<span class="o">}</span>
	
	
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">update</span><span class="o">(</span><span class="kt">int</span> <span class="n">idx</span><span class="o">,</span> <span class="kt">int</span> <span class="no">K</span><span class="o">)</span> <span class="o">{</span>
		<span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">size</span> <span class="o">+</span> <span class="n">idx</span><span class="o">;</span>
		<span class="n">tree</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="no">K</span><span class="o">;</span>
		
		<span class="c1">// 루트까지 업데이트</span>
		<span class="k">while</span><span class="o">(</span><span class="n">i</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
			<span class="n">i</span> <span class="o">&gt;&gt;=</span> <span class="mi">1</span><span class="o">;</span>
			<span class="n">tree</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="n">tree</span><span class="o">[</span><span class="n">i</span> <span class="o">*</span> <span class="mi">2</span><span class="o">]</span> <span class="o">+</span> <span class="n">tree</span><span class="o">[</span><span class="n">i</span> <span class="o">*</span> <span class="mi">2</span> <span class="o">+</span> <span class="mi">1</span><span class="o">];</span>
		<span class="o">}</span>
	<span class="o">}</span>
	
<span class="o">}</span>
</code></pre></div></div>

<h5 id="2-시뮬레이션">2. 시뮬레이션</h5>

<p>N명의 사람이 모두 빠져나와야하기 때문에 N번 순회하며<br />
만들어둔 함수로 K번째 타겟의 현재 인덱스를 출력하고 트리에서 제거한다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">StringTokenizer</span> <span class="n">st</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">(),</span><span class="s">" "</span><span class="o">);</span>
<span class="kt">int</span> <span class="no">N</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
<span class="kt">int</span> <span class="no">K</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>

<span class="nc">SegmentTree</span> <span class="n">tree</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">SegmentTree</span><span class="o">(</span><span class="no">N</span><span class="o">);</span>
<span class="nc">StringBuilder</span> <span class="n">sb</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringBuilder</span><span class="o">();</span>
<span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"&lt;"</span><span class="o">);</span>
<span class="kt">int</span> <span class="n">idx</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>

<span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span> <span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="no">N</span> <span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
	<span class="c1">// 살아있는 사람들 중 K번 위치의 사람</span>
	<span class="n">idx</span> <span class="o">=</span> <span class="o">(</span><span class="n">idx</span> <span class="o">+</span> <span class="no">K</span> <span class="o">-</span> <span class="mi">1</span><span class="o">)</span> <span class="o">%</span> <span class="n">tree</span><span class="o">.</span><span class="na">getAlive</span><span class="o">();</span>
	
	<span class="c1">// K번 타겟의 실제 위치</span>
	<span class="kt">int</span> <span class="n">target</span> <span class="o">=</span> <span class="n">tree</span><span class="o">.</span><span class="na">getDead</span><span class="o">(</span><span class="n">idx</span> <span class="o">+</span> <span class="mi">1</span><span class="o">);</span>
	
	<span class="k">if</span> <span class="o">(</span><span class="n">sb</span><span class="o">.</span><span class="na">length</span><span class="o">()</span> <span class="o">==</span> <span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
		<span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">target</span> <span class="o">+</span> <span class="mi">1</span><span class="o">);</span>
	<span class="o">}</span><span class="k">else</span> <span class="o">{</span>
		<span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">", "</span><span class="o">).</span><span class="na">append</span><span class="o">(</span><span class="n">target</span> <span class="o">+</span> <span class="mi">1</span><span class="o">);</span>
	<span class="o">}</span>
	
	<span class="c1">// 타겟 제거</span>
	<span class="n">tree</span><span class="o">.</span><span class="na">update</span><span class="o">(</span><span class="n">target</span><span class="o">,</span> <span class="mi">0</span><span class="o">);</span>
<span class="o">}</span>

<span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"&gt;"</span><span class="o">);</span>
<span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">sb</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
<span class="n">bw</span><span class="o">.</span><span class="na">flush</span><span class="o">();</span>
</code></pre></div></div>

<blockquote>
  <h4 id="채점">채점</h4>
  <hr />
</blockquote>

<p><img src="/assets/images/posts/BOJ/Java/2025-06-26-1168/img02.webp" alt="img02" /></p>

<blockquote>
  <h4 id="반성">반성</h4>
  <hr />
</blockquote>

<p>이제 과거에 틀려서 실패로 남아있는 문제가 30개 아래로 줄어들었다.<br />
문제 하나는 정답률이 0.6%인 번외문제라 제외하고 전부 클리어하는게 목표.<br />
이게 끝이 보이네…<br />
다행히 플래티넘보다 어려운 문제는 없어서 할 수 있을 것 같다.</p>

<blockquote>
  <h4 id="코드-확인">코드 확인</h4>
  <hr />
</blockquote>

<p><a href="https://raw.githubusercontent.com/movingwoo/movingwoo-snippets/refs/heads/main/BOJ/Java/2025-06-26-1168.java">Link to GitHub</a></p>]]></content><author><name>movingwoo</name></author><category term="BOJ/Java/" /><category term="JAVA" /><category term="알고리즘" /><category term="백준" /><category term="1168" /><category term="요세푸스 문제 2" /><category term="세그먼트트리" /><summary type="html"><![CDATA[백준 1168번 요세푸스 문제 2 JAVA 문제풀이]]></summary></entry><entry><title type="html">8436번 Kamil</title><link href="https://movingwoo.com/boj/java/2025/06/24/8436.html" rel="alternate" type="text/html" title="8436번 Kamil" /><published>2025-06-24T08:00:00+00:00</published><updated>2025-06-24T08:00:00+00:00</updated><id>https://movingwoo.com/boj/java/2025/06/24/8436</id><content type="html" xml:base="https://movingwoo.com/boj/java/2025/06/24/8436.html"><![CDATA[<blockquote>
  <h4 id="이왜틀">이왜틀?</h4>
  <hr />
</blockquote>

<p><img src="/assets/images/posts/BOJ/Java/2025-06-24-8436/img01.webp" alt="img01" /></p>

<p><a href="https://www.acmicpc.net/problem/8436">8436번 Kamil - 백준</a></p>

<p>4년 전 틀린 문제.<br />
문제가 조금 복잡하게 써 있지만 이해하면 간단한 문제인데 왜 틀렸을까?</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">char</span><span class="o">[]</span> <span class="n">a</span><span class="o">=</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">().</span><span class="na">toCharArray</span><span class="o">();</span>
<span class="kt">int</span> <span class="n">r</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">a</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
	<span class="k">if</span><span class="o">(</span><span class="n">a</span><span class="o">[</span><span class="n">i</span><span class="o">]==</span><span class="sc">'T'</span><span class="o">||</span><span class="n">a</span><span class="o">[</span><span class="n">i</span><span class="o">]==</span><span class="sc">'D'</span><span class="o">||</span><span class="n">a</span><span class="o">[</span><span class="n">i</span><span class="o">]==</span><span class="sc">'L'</span><span class="o">||</span><span class="n">a</span><span class="o">[</span><span class="n">i</span><span class="o">]==</span><span class="sc">'F'</span><span class="o">)</span> <span class="n">r</span><span class="o">++;</span>
<span class="o">}</span>
<span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">r</span><span class="o">*</span><span class="mi">2</span><span class="o">+</span><span class="s">""</span><span class="o">);</span>
</code></pre></div></div>

<p><span style="color: red;"><strong>이런 멍청이!!!</strong></span><br />
숫자를 구하고 2를 곱하는 실수를 저질렀다.<br />
경우의 수를 구하려면 제곱해야하는 것인데…</p>

<blockquote>
  <h4 id="설계">설계</h4>
  <hr />
</blockquote>

<p>카밀이 잘못 발음하는 경우는 3가지이다.</p>
<ul>
  <li>K를 T로</li>
  <li>G를 D로</li>
  <li>R을 L 또는 F로<br />
그 반대 경우는 없다.</li>
</ul>

<p>즉, T D L F 발음의 경우 각각 K G R R 일 수 있다.<br />
그러니 T D L F 개수만큼 2를 제곱하면 된다.</p>

<blockquote>
  <h4 id="구현">구현</h4>
  <hr />
</blockquote>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">char</span><span class="o">[]</span> <span class="n">arr</span> <span class="o">=</span> <span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">().</span><span class="na">toCharArray</span><span class="o">();</span>
<span class="kt">int</span> <span class="n">count</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>

<span class="k">for</span> <span class="o">(</span><span class="kt">char</span> <span class="n">c</span> <span class="o">:</span> <span class="n">arr</span><span class="o">)</span> <span class="o">{</span>
	<span class="k">if</span> <span class="o">(</span><span class="n">c</span> <span class="o">==</span> <span class="sc">'T'</span> <span class="o">||</span> <span class="n">c</span> <span class="o">==</span> <span class="sc">'D'</span> <span class="o">||</span> <span class="n">c</span> <span class="o">==</span> <span class="sc">'L'</span> <span class="o">||</span> <span class="n">c</span> <span class="o">==</span> <span class="sc">'F'</span><span class="o">)</span> <span class="o">{</span>
		<span class="n">count</span><span class="o">++;</span>
	<span class="o">}</span>
<span class="o">}</span>

<span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="nc">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="s">"%.0f"</span><span class="o">,</span> <span class="nc">Math</span><span class="o">.</span><span class="na">pow</span><span class="o">(</span><span class="mi">2</span><span class="o">,</span> <span class="n">count</span><span class="o">)));</span>
</code></pre></div></div>

<blockquote>
  <h4 id="채점">채점</h4>
  <hr />
</blockquote>

<p><img src="/assets/images/posts/BOJ/Java/2025-06-24-8436/img02.webp" alt="img02" /></p>

<blockquote>
  <h4 id="반성">반성</h4>
  <hr />
</blockquote>

<p>브론즈 문제 몇 개 조져주니 상당히 힐링이 된다.<br />
항상 어렵게만 살 수 없는 법이다.<br />
이제 다시 내일부터는 난이도 있는 문제에 들이받아봐야지.</p>

<blockquote>
  <h4 id="코드-확인">코드 확인</h4>
  <hr />
</blockquote>

<p><a href="https://raw.githubusercontent.com/movingwoo/movingwoo-snippets/refs/heads/main/BOJ/Java/2025-06-24-8436.java">Link to GitHub</a></p>]]></content><author><name>movingwoo</name></author><category term="BOJ/Java/" /><category term="JAVA" /><category term="알고리즘" /><category term="백준" /><category term="8436" /><category term="Kamil" /><category term="구현" /><summary type="html"><![CDATA[백준 8436번 Kamil JAVA 문제풀이]]></summary></entry><entry><title type="html">16172번 나는 친구가 적다 (Large)</title><link href="https://movingwoo.com/boj/java/2025/06/24/16172.html" rel="alternate" type="text/html" title="16172번 나는 친구가 적다 (Large)" /><published>2025-06-24T06:00:00+00:00</published><updated>2025-06-24T06:00:00+00:00</updated><id>https://movingwoo.com/boj/java/2025/06/24/16172</id><content type="html" xml:base="https://movingwoo.com/boj/java/2025/06/24/16172.html"><![CDATA[<blockquote>
  <h4 id="이왜틀">이왜틀?</h4>
  <hr />
</blockquote>

<p><img src="/assets/images/posts/BOJ/Java/2025-06-24-16172/img01.webp" alt="img01" /></p>

<p><a href="https://www.acmicpc.net/problem/16172">16172번 나는 친구가 적다 (Large) - 백준</a></p>

<p>요것도 5년전 시간초과다.<br />
대체로 경향이 단순 시뮬레이션으로 소스 넣어보고 시간초과뜨면 도망갔던 것으로 보인다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">String</span> <span class="n">a</span><span class="o">=</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">().</span><span class="na">replaceAll</span><span class="o">(</span><span class="s">"[0-9]"</span><span class="o">,</span><span class="s">""</span><span class="o">);</span>
<span class="nc">String</span> <span class="n">b</span><span class="o">=</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">();</span>
<span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">a</span><span class="o">.</span><span class="na">contains</span><span class="o">(</span><span class="n">b</span><span class="o">)?</span><span class="s">"1"</span><span class="o">:</span><span class="s">"0"</span><span class="o">);</span>
</code></pre></div></div>

<p>입력받은 S의 숫자를 replaceAll로 제거하고 contain을 사용했다.<br />
Small 문제는 이걸로 통과했나본데 Large의 경우 S와 K가 20만개까지 있을 수 있어 택도 없다.</p>

<blockquote>
  <h4 id="설계">설계</h4>
  <hr />
</blockquote>

<p>문제 자체가 한글로 되어있고 쉬워보여서 코드 제출이 많은 경우<br />
통과해선 안되는 코드를 저격하기위해 <span style="color: orange;"><strong>수많은 반례</strong></span>가 존재한다.</p>

<p>이 문제도 그런 류에 속한다.<br />
처음에 특별한 알고리즘을 쓸 일 있나 싶어서 포인터를 2개 두고 S와 K를 시간복잡도 O(N) 으로 탐색하려했는데<br />
자꾸 무슨 반례에 걸렸는지 틀렸습니다를 뿜어내기 시작…</p>

<p>화가났지만 <span style="color: orange;"><strong>KMP 알고리즘</strong></span>을 써서 통과했다.</p>

<blockquote>
  <h4 id="구현">구현</h4>
  <hr />
</blockquote>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// KMP 배열</span>
<span class="kt">int</span><span class="o">[]</span> <span class="n">kmp</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="no">K</span><span class="o">.</span><span class="na">length</span><span class="o">()];</span>

<span class="kt">int</span> <span class="n">idx</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> 

<span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span> <span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">kmp</span><span class="o">.</span><span class="na">length</span> <span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
	
	<span class="k">if</span> <span class="o">(</span><span class="no">K</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">)</span> <span class="o">==</span> <span class="no">K</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">idx</span><span class="o">))</span> <span class="o">{</span>
		<span class="n">kmp</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="o">++</span><span class="n">idx</span><span class="o">;</span> 
	<span class="o">}</span> <span class="k">else</span> <span class="k">if</span> <span class="o">(</span><span class="n">idx</span> <span class="o">!=</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
		<span class="c1">// aabc abc 같은 패턴</span>
		<span class="n">idx</span> <span class="o">=</span> <span class="n">kmp</span><span class="o">[</span><span class="n">idx</span> <span class="o">-</span><span class="mi">1</span><span class="o">];</span> 
		<span class="n">i</span><span class="o">--;</span>
	<span class="o">}</span><span class="k">else</span> <span class="o">{</span>
		<span class="n">kmp</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
	<span class="o">}</span>
<span class="o">}</span>

<span class="kt">boolean</span> <span class="n">result</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>

<span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
<span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span> <span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="no">S</span><span class="o">.</span><span class="na">length</span><span class="o">()</span> <span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
	<span class="k">if</span> <span class="o">(</span><span class="nc">Character</span><span class="o">.</span><span class="na">isLetter</span><span class="o">(</span><span class="no">S</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">)))</span> <span class="o">{</span>
		
		<span class="k">while</span><span class="o">(</span><span class="n">j</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="no">S</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">)</span> <span class="o">!=</span> <span class="no">K</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">j</span><span class="o">))</span> <span class="o">{</span>
			<span class="n">j</span> <span class="o">=</span> <span class="n">kmp</span><span class="o">[</span><span class="n">j</span> <span class="o">-</span> <span class="mi">1</span><span class="o">];</span>
		<span class="o">}</span>
		
		<span class="k">if</span> <span class="o">(</span><span class="no">S</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">)</span> <span class="o">==</span> <span class="no">K</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">j</span><span class="o">))</span> <span class="o">{</span>
			<span class="n">j</span><span class="o">++;</span>
			<span class="k">if</span> <span class="o">(</span><span class="n">j</span> <span class="o">==</span> <span class="no">K</span><span class="o">.</span><span class="na">length</span><span class="o">())</span> <span class="o">{</span>
				<span class="n">result</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
			<span class="o">}</span>
		<span class="o">}</span>
	<span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<blockquote>
  <h4 id="채점">채점</h4>
  <hr />
</blockquote>

<p><img src="/assets/images/posts/BOJ/Java/2025-06-24-16172/img02.webp" alt="img02" /></p>

<blockquote>
  <h4 id="반성">반성</h4>
  <hr />
</blockquote>

<p>진짜 무슨 예제가 자꾸 틀렸던 걸까?<br />
이것저것 만들어서 넣어봤는데 알 수가 없다.<br />
<span style="color: red;"><strong>브론즈 문제 무서워…</strong></span></p>

<blockquote>
  <h4 id="코드-확인">코드 확인</h4>
  <hr />
</blockquote>

<p><a href="https://raw.githubusercontent.com/movingwoo/movingwoo-snippets/refs/heads/main/BOJ/Java/2025-06-24-16172.java">Link to GitHub</a></p>]]></content><author><name>movingwoo</name></author><category term="BOJ/Java/" /><category term="JAVA" /><category term="알고리즘" /><category term="백준" /><category term="16172" /><category term="나는 친구가 적다 (Large)" /><category term="KMP" /><summary type="html"><![CDATA[백준 16172번 나는 친구가 적다 (Large) JAVA 문제풀이]]></summary></entry><entry><title type="html">28682번 재우야 임관하자</title><link href="https://movingwoo.com/boj/java/2025/06/24/28682.html" rel="alternate" type="text/html" title="28682번 재우야 임관하자" /><published>2025-06-24T06:00:00+00:00</published><updated>2025-06-24T06:00:00+00:00</updated><id>https://movingwoo.com/boj/java/2025/06/24/28682</id><content type="html" xml:base="https://movingwoo.com/boj/java/2025/06/24/28682.html"><![CDATA[<blockquote>
  <h4 id="이왜틀">이왜틀?</h4>
  <hr />
</blockquote>

<p><img src="/assets/images/posts/BOJ/Java/2025-06-24-28682/img01.webp" alt="img01" /></p>

<p><a href="https://www.acmicpc.net/problem/28682">28682번 재우야 임관하자 - 백준</a></p>

<p>1년 전?<br />
내가 1년 전에 이런 걸 했다고????<br />
하라는 대로 단순 구현하는 문제인데 어디가 잘못되었지??</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">try</span><span class="o">(</span><span class="nc">BufferedReader</span> <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span> <span class="k">new</span> <span class="nc">InputStreamReader</span><span class="o">(</span> <span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">));</span> 
	<span class="nc">BufferedWriter</span> <span class="n">bw</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedWriter</span><span class="o">(</span> <span class="k">new</span> <span class="nc">OutputStreamWriter</span><span class="o">(</span> <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">))){</span>
	<span class="nc">StringBuilder</span> <span class="n">sb</span><span class="o">=</span><span class="k">new</span> <span class="nc">StringBuilder</span><span class="o">();</span>
	<span class="kt">int</span> <span class="n">n</span><span class="o">=</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
	<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
		<span class="k">if</span><span class="o">(</span><span class="n">i</span><span class="o">!=</span><span class="mi">0</span><span class="o">)</span> <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">" "</span><span class="o">);</span>
		<span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"swimming"</span><span class="o">);</span>
	<span class="o">}</span>
	<span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">sb</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
	<span class="n">bw</span><span class="o">.</span><span class="na">flush</span><span class="o">();</span>
	<span class="n">sb</span><span class="o">.</span><span class="na">setLength</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
	<span class="nc">StringTokenizer</span> <span class="n">st</span><span class="o">=</span><span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">(),</span><span class="s">" "</span><span class="o">);</span>
	<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
		<span class="k">if</span><span class="o">(</span><span class="n">i</span><span class="o">!=</span><span class="mi">0</span><span class="o">)</span> <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">" "</span><span class="o">);</span>
		<span class="nc">String</span> <span class="n">s</span><span class="o">=</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">();</span>
		<span class="k">if</span><span class="o">(</span><span class="n">s</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"bowling"</span><span class="o">))</span> <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"soccer"</span><span class="o">);</span>
		<span class="k">else</span> <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"bowling"</span><span class="o">);</span>
	<span class="o">}</span>
	<span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">sb</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
	<span class="n">bw</span><span class="o">.</span><span class="na">flush</span><span class="o">();</span>
<span class="o">}</span><span class="k">catch</span><span class="o">(</span><span class="nc">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span><span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();}</span>
</code></pre></div></div>

<p>????<br />
하라는 대로 안한거 아닌가 이거???<br />
<span style="color: red;"><strong>왜 시키는 대로 하지 않는거지?</strong></span></p>

<blockquote>
  <h4 id="설계">설계</h4>
  <hr />
</blockquote>

<p><span style="color: orange;"><strong>몬티홀 문제</strong></span><br />
대충 정리하면 바꾸는게 이득이라는 뜻이다.<br />
온갖 매체를 통해 소개된 유명한 문제이다.</p>

<p>여기서는 swimming, bowling, soccer 3가지가 있다.<br />
간단하게 처음에 swimming을 출력하고<br />
그다음 입력이 bowling으로 들어오면 soccer, 아니면 bowling을 출력한다.</p>

<p>문제에서 매 출력마다 flush를 요구하니 잘 해주도록 하자.</p>

<blockquote>
  <h4 id="구현">구현</h4>
  <hr />
</blockquote>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">Scanner</span> <span class="n">sc</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Scanner</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
<span class="nc">StringBuilder</span> <span class="n">sb</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringBuilder</span><span class="o">();</span>

<span class="c1">// 1. swimming 출력</span>
<span class="c1">// 문제에서 n은 1500이라 명시됨</span>
<span class="n">sc</span><span class="o">.</span><span class="na">nextLine</span><span class="o">();</span>

<span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"swimming"</span><span class="o">);</span>
<span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span> <span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">1500</span> <span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">" swimming"</span><span class="o">);</span>

<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="n">sb</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">flush</span><span class="o">();</span>

<span class="c1">// 2. 입력에 따라 bowling 또는 soccer 출력</span>
<span class="nc">StringTokenizer</span> <span class="n">st</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">sc</span><span class="o">.</span><span class="na">nextLine</span><span class="o">(),</span> <span class="s">" "</span><span class="o">);</span>
<span class="n">sb</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringBuilder</span><span class="o">();</span>

<span class="k">while</span> <span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">hasMoreTokens</span><span class="o">())</span> <span class="o">{</span>
	<span class="k">if</span> <span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">().</span><span class="na">charAt</span><span class="o">(</span><span class="mi">0</span><span class="o">)</span> <span class="o">==</span> <span class="sc">'s'</span><span class="o">)</span> <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"bowling "</span><span class="o">);</span>
	<span class="k">else</span> <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"soccer "</span><span class="o">);</span>
<span class="o">}</span>

<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="n">sb</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="n">sb</span><span class="o">.</span><span class="na">length</span><span class="o">()-</span><span class="mi">1</span><span class="o">).</span><span class="na">toString</span><span class="o">());</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">flush</span><span class="o">();</span>

<span class="n">sc</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</code></pre></div></div>

<blockquote>
  <h4 id="채점">채점</h4>
  <hr />
</blockquote>

<p><img src="/assets/images/posts/BOJ/Java/2025-06-24-28682/img02.webp" alt="img02" /></p>

<blockquote>
  <h4 id="반성">반성</h4>
  <hr />
</blockquote>

<p><img src="/assets/images/posts/BOJ/Java/2025-06-24-28682/img03.webp" alt="img03" /></p>

<p>아니 뭐야 왜케 많이 틀렸어!!!<br />
<span style="color: red;"><strong>나 오늘 로또 사러 가?!?!?!?!</strong></span></p>

<p>사실 print 안하고 println 해서 다틀렸다.<br />
세상에서 제일 재수없는 사람인줄 알았네</p>

<blockquote>
  <h4 id="코드-확인">코드 확인</h4>
  <hr />
</blockquote>

<p><a href="https://raw.githubusercontent.com/movingwoo/movingwoo-snippets/refs/heads/main/BOJ/Java/2025-06-24-28682.java">Link to GitHub</a></p>]]></content><author><name>movingwoo</name></author><category term="BOJ/Java/" /><category term="JAVA" /><category term="알고리즘" /><category term="백준" /><category term="28682" /><category term="재우야 임관하자" /><category term="구현" /><summary type="html"><![CDATA[백준 28682번 재우야 임관하자 JAVA 문제풀이]]></summary></entry><entry><title type="html">12833번 XORXORXOR</title><link href="https://movingwoo.com/boj/java/2025/06/24/12833.html" rel="alternate" type="text/html" title="12833번 XORXORXOR" /><published>2025-06-24T04:00:00+00:00</published><updated>2025-06-24T04:00:00+00:00</updated><id>https://movingwoo.com/boj/java/2025/06/24/12833</id><content type="html" xml:base="https://movingwoo.com/boj/java/2025/06/24/12833.html"><![CDATA[<blockquote>
  <h4 id="이왜틀">이왜틀?</h4>
  <hr />
</blockquote>

<p><img src="/assets/images/posts/BOJ/Java/2025-06-24-12833/img01.webp" alt="img01" /></p>

<p><a href="https://www.acmicpc.net/problem/12833">12833번 XORXORXOR - 백준</a></p>

<p>당분간 틀린 브론즈 문제로 힐링해야지.<br />
5년 전 시간초과다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">try</span> <span class="o">(</span><span class="nc">BufferedReader</span> <span class="n">br</span><span class="o">=</span><span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">InputStreamReader</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">));</span>
	<span class="nc">BufferedWriter</span> <span class="n">bw</span><span class="o">=</span><span class="k">new</span> <span class="nc">BufferedWriter</span><span class="o">(</span><span class="k">new</span> <span class="nc">OutputStreamWriter</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">));)</span> <span class="o">{</span>
	<span class="nc">StringTokenizer</span> <span class="n">st</span><span class="o">=</span><span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">(),</span><span class="s">" "</span><span class="o">);</span>
	<span class="kt">int</span> <span class="n">a</span><span class="o">=</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
	<span class="kt">int</span> <span class="n">b</span><span class="o">=</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
	<span class="kt">int</span> <span class="n">c</span><span class="o">=</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
	<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">c</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span> <span class="n">a</span><span class="o">^=</span><span class="n">b</span><span class="o">;</span>
	<span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">a</span><span class="o">+</span><span class="s">""</span><span class="o">);</span>
<span class="o">}</span><span class="k">catch</span><span class="o">(</span><span class="nc">Exception</span> <span class="n">e</span><span class="o">){</span><span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();}</span>
</code></pre></div></div>

<p>XOR 연산을 실제로 C번 진행해서 시간초과가 난다.</p>

<blockquote>
  <h4 id="설계">설계</h4>
  <hr />
</blockquote>

<p>C가 최대 10^9인데 제한시간이 0.2초라서 시뮬레이션하면 터진다.</p>

<p>XOR을 2번하면 원래대로 돌아오므로 <span style="color: orange;"><strong>C가 짝수면 A, 홀수면 A ^ B</strong></span> 를 출력한다.</p>

<blockquote>
  <h4 id="구현">구현</h4>
  <hr />
</blockquote>

<p>버퍼드리더로 충분할 것 같긴 한데 빠른 입력 만들어둔걸 또 가져와서 쓰자.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">IOException</span><span class="o">{</span>

	<span class="nc">InputReader</span> <span class="n">ir</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">InputReader</span><span class="o">();</span>
	
	<span class="kt">int</span> <span class="no">A</span> <span class="o">=</span> <span class="n">ir</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
	<span class="kt">int</span> <span class="no">B</span> <span class="o">=</span> <span class="n">ir</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
	<span class="kt">int</span> <span class="no">C</span> <span class="o">=</span> <span class="n">ir</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
	
	<span class="k">if</span> <span class="o">(</span><span class="no">C</span> <span class="o">%</span> <span class="mi">2</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="no">A</span><span class="o">);</span>
	<span class="k">else</span> <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="no">A</span> <span class="o">^</span> <span class="no">B</span><span class="o">);</span>
<span class="o">}</span>

<span class="c1">// 빠른 입출력 구현</span>
<span class="kd">public</span> <span class="kd">static</span> <span class="kd">class</span> <span class="nc">InputReader</span> <span class="o">{</span>
	
	<span class="kd">private</span> <span class="kd">final</span> <span class="nc">InputStream</span> <span class="n">in</span> <span class="o">=</span> <span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">;</span>
	<span class="kd">private</span> <span class="kd">final</span> <span class="kt">byte</span><span class="o">[]</span> <span class="n">buf</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">byte</span><span class="o">[</span><span class="mi">1</span><span class="o">&lt;&lt;</span><span class="mi">20</span><span class="o">];</span>
	
	<span class="kd">private</span> <span class="kt">int</span> <span class="n">ptr</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
	<span class="kd">private</span> <span class="kt">int</span> <span class="n">buflen</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>

	<span class="kt">int</span> <span class="nf">nextInt</span><span class="o">()</span> <span class="kd">throws</span> <span class="nc">IOException</span> <span class="o">{</span>
		<span class="kt">int</span> <span class="n">c</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
		<span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
		<span class="kt">boolean</span> <span class="n">negative</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
		
		<span class="k">while</span><span class="o">(</span><span class="kc">true</span><span class="o">)</span> <span class="o">{</span>
			<span class="n">c</span> <span class="o">=</span> <span class="n">read</span><span class="o">();</span>
			<span class="k">if</span> <span class="o">(</span><span class="n">c</span> <span class="o">&gt;</span> <span class="sc">' '</span><span class="o">)</span> <span class="k">break</span><span class="o">;</span>
		<span class="o">}</span>
		
		<span class="k">if</span> <span class="o">(</span><span class="n">c</span> <span class="o">==</span> <span class="sc">'-'</span><span class="o">)</span> <span class="o">{</span> 
			<span class="n">negative</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
			<span class="n">c</span> <span class="o">=</span> <span class="n">read</span><span class="o">();</span> 
		<span class="o">}</span>
		
		<span class="k">while</span><span class="o">(</span><span class="n">c</span> <span class="o">&gt;=</span> <span class="sc">'0'</span> <span class="o">&amp;&amp;</span> <span class="n">c</span> <span class="o">&lt;=</span> <span class="sc">'9'</span><span class="o">)</span> <span class="o">{</span>
			<span class="n">x</span> <span class="o">=</span> <span class="n">x</span> <span class="o">*</span> <span class="mi">10</span> <span class="o">+</span> <span class="o">(</span><span class="n">c</span> <span class="o">-</span> <span class="sc">'0'</span><span class="o">);</span>
			<span class="n">c</span><span class="o">=</span> <span class="n">read</span><span class="o">();</span>
		<span class="o">}</span>
		
		<span class="k">return</span> <span class="n">negative</span> <span class="o">?</span> <span class="o">-</span><span class="n">x</span> <span class="o">:</span> <span class="n">x</span><span class="o">;</span>
	<span class="o">}</span>

	<span class="kd">private</span> <span class="kt">int</span> <span class="nf">read</span><span class="o">()</span> <span class="kd">throws</span> <span class="nc">IOException</span> <span class="o">{</span>
		<span class="k">if</span> <span class="o">(</span><span class="n">ptr</span> <span class="o">&gt;=</span> <span class="n">buflen</span><span class="o">)</span> <span class="o">{</span>
			<span class="n">buflen</span> <span class="o">=</span> <span class="n">in</span><span class="o">.</span><span class="na">read</span><span class="o">(</span><span class="n">buf</span><span class="o">);</span>
			<span class="n">ptr</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
			<span class="k">if</span> <span class="o">(</span><span class="n">buflen</span> <span class="o">&lt;=</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
				<span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="o">;</span>
			<span class="o">}</span>
		<span class="o">}</span>
		
		<span class="k">return</span> <span class="n">buf</span><span class="o">[</span><span class="n">ptr</span><span class="o">++]</span> <span class="o">&amp;</span> <span class="mh">0xFF</span><span class="o">;</span>
	<span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<blockquote>
  <h4 id="채점">채점</h4>
  <hr />
</blockquote>

<p><img src="/assets/images/posts/BOJ/Java/2025-06-24-12833/img02.webp" alt="img02" /></p>

<blockquote>
  <h4 id="반성">반성</h4>
  <hr />
</blockquote>

<p>뭔가 불만족스러운 속도는 출력에 신경을 쓰지 않아서인가…<br />
빠른 출력 코드도 찾아와서 다음에 써먹어야겠다.<br />
분명히 예전에 해둔게 있을건데</p>

<blockquote>
  <h4 id="코드-확인">코드 확인</h4>
  <hr />
</blockquote>

<p><a href="https://raw.githubusercontent.com/movingwoo/movingwoo-snippets/refs/heads/main/BOJ/Java/2025-06-24-12833.java">Link to GitHub</a></p>]]></content><author><name>movingwoo</name></author><category term="BOJ/Java/" /><category term="JAVA" /><category term="알고리즘" /><category term="백준" /><category term="12833" /><category term="XORXORXOR" /><category term="애드훅" /><summary type="html"><![CDATA[백준 12833번 XORXORXOR JAVA 문제풀이]]></summary></entry></feed>