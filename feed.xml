<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="ko-KR"><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="https://movingwoo.com/feed.xml" rel="self" type="application/atom+xml" /><link href="https://movingwoo.com/" rel="alternate" type="text/html" hreflang="ko-KR" /><updated>2025-08-04T07:48:45+00:00</updated><id>https://movingwoo.com/feed.xml</id><title type="html">뭐라도 하겠지</title><subtitle>개발, C++, JAVA, Python, Shortcut, 백준</subtitle><entry><title type="html">마리아디비 설치</title><link href="https://movingwoo.com/development/shellscript/2025/08/04/Install-MariaDB.html" rel="alternate" type="text/html" title="마리아디비 설치" /><published>2025-08-04T07:00:00+00:00</published><updated>2025-08-04T07:00:00+00:00</updated><id>https://movingwoo.com/development/shellscript/2025/08/04/Install%20MariaDB</id><content type="html" xml:base="https://movingwoo.com/development/shellscript/2025/08/04/Install-MariaDB.html"><![CDATA[<blockquote>
  <h4 id="개요">개요</h4>
  <hr />
</blockquote>

<p>일반적인 리눅스 환경에서 마리아디비 설치가 필요한 경우 rpm으로 설치한다.<br />
간편하고 빠르다.</p>

<p>하지만 rpm을 쓸 수 없는 특수한 환경에서는 어떡하지?<br />
구글링하면서 공부하다가 자동화 스크립트 만들 수 있을 것 같아서 만든다.</p>

<blockquote>
  <h4 id="설계">설계</h4>
  <hr />
</blockquote>

<p><a href="https://mariadb.org/download/">MariaDB Foundation Download</a></p>

<p>설치할 마리아디비 tarball 파일은 공식홈페이지에서 구할 수 있다.</p>

<p>tar 파일 이용해 설치 진행 시 내용을 간단히 요약해보자면</p>
<ol>
  <li><span style="color: orange;"><strong>파일들을 적당히 경로로 옮긴다.</strong></span></li>
  <li><span style="color: orange;"><strong>데이터베이스 초기화 스크립트를 수행한다.</strong></span></li>
  <li><span style="color: orange;"><strong>기동!!</strong></span></li>
</ol>

<p>써놓고 보면 아주 단순한데 막상 해보면 이상한 오류가 나기도 하고<br />
알 수 없는 억까의 세계</p>

<p>일단 커맨드 자체는 아주 단순한 편들이라 스크립트화 가능하다.</p>

<blockquote>
  <h4 id="구현">구현</h4>
  <hr />
</blockquote>

<h5 id="1-환경변수와-사용법-함수">1. 환경변수와 사용법 함수</h5>

<p>rpm으로 설치해보면 <span style="color: orange;"><strong>mysql</strong></span> 계정이 디폴트다.<br />
다른 계정을 쓸 수 있으니 그룹과 계정을 변수로 뺀다.</p>

<p><span style="color: orange;"><strong>TAR</strong></span> 파일 경로는 당연히 옵션화 해야하며<br />
<span style="color: orange;"><strong>/usr/local</strong></span> 하위 설치를 디폴트로 두고 변수화한다.</p>

<p>사용 시 설치를 리트라이할 수 있는데 이때를 위해 데이터를 삭제하는 옵션을 넣어준다.<br />
<span style="color: orange;"><strong>RESET</strong></span> 옵션은 삭제 후 재설치, <span style="color: orange;"><strong>CLEAN</strong></span> 옵션은 삭제만 하는 것으로 한다.</p>

<p>그냥 스크립트 호출하는 순간 설치가 진행되는 것도 위험하기 때문에 <span style="color: orange;"><strong>INSTALL</strong></span> 옵션을 넣어준다.</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># 기본 변수</span>
<span class="nv">GROUP</span><span class="o">=</span><span class="s2">"mysql"</span>
<span class="nv">USER</span><span class="o">=</span><span class="s2">"mysql"</span>
<span class="nv">TAR_FILE</span><span class="o">=</span><span class="s2">"/home/app/mariadb-10.11.13-linux-systemd-x86_64.tar.gz"</span>
<span class="nv">INSTALL_PREFIX</span><span class="o">=</span><span class="s2">"/usr/local"</span>
<span class="nv">INSTALL_DIR</span><span class="o">=</span><span class="s2">"</span><span class="nv">$INSTALL_PREFIX</span><span class="s2">/mariadb"</span>
<span class="nv">RESET</span><span class="o">=</span><span class="nb">false
</span><span class="nv">CLEAN_ONLY</span><span class="o">=</span><span class="nb">false
</span><span class="nv">INSTALL</span><span class="o">=</span><span class="nb">false</span>

<span class="c"># 옵션 파싱</span>
<span class="k">while</span> <span class="o">[[</span> <span class="nv">$# </span><span class="nt">-gt</span> 0 <span class="o">]]</span><span class="p">;</span> <span class="k">do
  case</span> <span class="nv">$1</span> <span class="k">in</span>
    <span class="nt">-i</span><span class="p">|</span><span class="nt">--install</span><span class="p">)</span>    <span class="nv">INSTALL</span><span class="o">=</span><span class="nb">true</span><span class="p">;</span> <span class="nb">shift</span><span class="p">;;</span>
    <span class="nt">-r</span><span class="p">|</span><span class="nt">--reset</span><span class="p">)</span>      <span class="nv">RESET</span><span class="o">=</span><span class="nb">true</span><span class="p">;</span> <span class="nb">shift</span><span class="p">;;</span>
    <span class="nt">-c</span><span class="p">|</span><span class="nt">--clean</span><span class="p">)</span>      <span class="nv">CLEAN_ONLY</span><span class="o">=</span><span class="nb">true</span><span class="p">;</span> <span class="nb">shift</span><span class="p">;;</span>
    <span class="nt">-h</span><span class="p">|</span><span class="nt">--help</span><span class="p">)</span>       usage<span class="p">;;</span>
    <span class="k">*</span><span class="p">)</span>               <span class="nb">echo</span> <span class="s2">"Unknown option: </span><span class="nv">$1</span><span class="s2">"</span> <span class="o">&gt;</span>&amp;2<span class="p">;</span> usage<span class="p">;;</span>
  <span class="k">esac</span>
<span class="k">done</span>
</code></pre></div></div>

<p>옵션 없이 스크립트를 호출하거나, -h 옵션을 넣을 경우에는 도움말을 보여주도록 한다.<br />
<span style="color: red;"><strong>이런 거 무시하고 안넣으면 나중에 나도 까먹어서 사용할 수 없다…</strong></span></p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># 사용법 함수</span>
usage<span class="o">()</span> <span class="o">{</span>
  <span class="nb">cat</span> <span class="o">&lt;&lt;</span><span class="no">EOF</span><span class="sh">
Usage: sudo </span><span class="nv">$0</span><span class="sh"> [options]

Options:
  -i, --install     Install MariaDB
                    마리아디비 설치
  -r, --reset       Reset data before installing (remove then reinstall)
                    데이터 초기화 후 설치 (삭제 후 재설치)
  -c, --clean       Clean only (remove data without reinstalling)
                    초기화만 (재설치 없이 삭제)
  -h, --help        Show this help message and exit
                    도움말
</span><span class="no">EOF
</span>  <span class="nb">exit </span>1
<span class="o">}</span>
</code></pre></div></div>

<h5 id="2-설치-전-조건과-초기화-조건">2. 설치 전 조건과 초기화 조건</h5>

<p>관리자 권한이 필요해 <span style="color: orange;"><strong>root 권한</strong></span>을 체크한다.<br />
RESET 옵션과 CLEAN 옵션이 충돌하면 난리날거라 그 부분도 확인하고<br />
CLEAN을 지정했을 경우 삭제 후 프로세스를 종료하도록 설정한다.</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># root 권한 확인</span>
<span class="k">if</span> <span class="o">[</span> <span class="s2">"</span><span class="nv">$EUID</span><span class="s2">"</span> <span class="nt">-ne</span> 0 <span class="o">]</span><span class="p">;</span> <span class="k">then
  </span><span class="nb">echo</span> <span class="s2">"[ERROR] root 권한으로 실행해야 함"</span> <span class="o">&gt;</span>&amp;2
  <span class="nb">exit </span>1
<span class="k">fi</span>

<span class="c"># -r 과 -c 충돌 확인</span>
<span class="k">if</span> <span class="o">[</span> <span class="s2">"</span><span class="nv">$RESET</span><span class="s2">"</span> <span class="o">=</span> <span class="nb">true</span> <span class="o">]</span> <span class="o">&amp;&amp;</span> <span class="o">[</span> <span class="s2">"</span><span class="nv">$CLEAN_ONLY</span><span class="s2">"</span> <span class="o">=</span> <span class="nb">true</span> <span class="o">]</span><span class="p">;</span> <span class="k">then
  </span><span class="nb">echo</span> <span class="s2">"[ERROR] -r 과 -c 옵션은 함께 사용 불가"</span> <span class="o">&gt;</span>&amp;2
  <span class="nb">exit </span>1
<span class="k">fi</span>

<span class="c"># 아무 옵션도 안걸면 -h로 수행</span>
<span class="k">if</span> <span class="o">[</span> <span class="s2">"</span><span class="nv">$INSTALL</span><span class="s2">"</span> <span class="o">!=</span> <span class="nb">true</span> <span class="o">]</span> <span class="o">&amp;&amp;</span> <span class="o">[</span> <span class="s2">"</span><span class="nv">$RESET</span><span class="s2">"</span> <span class="o">!=</span> <span class="nb">true</span> <span class="o">]</span> <span class="o">&amp;&amp;</span> <span class="o">[</span> <span class="s2">"</span><span class="nv">$CLEAN_ONLY</span><span class="s2">"</span> <span class="o">!=</span> <span class="nb">true</span> <span class="o">]</span><span class="p">;</span> <span class="k">then
  </span>usage
<span class="k">fi</span>

<span class="c"># 초기화 (reset 또는 clean)</span>
<span class="k">if</span> <span class="o">[</span> <span class="s2">"</span><span class="nv">$RESET</span><span class="s2">"</span> <span class="o">=</span> <span class="nb">true</span> <span class="o">]</span> <span class="o">||</span> <span class="o">[</span> <span class="s2">"</span><span class="nv">$CLEAN_ONLY</span><span class="s2">"</span> <span class="o">=</span> <span class="nb">true</span> <span class="o">]</span><span class="p">;</span> <span class="k">then
  </span><span class="nb">echo</span> <span class="s2">"=== MariaDB 초기화 시작 ==="</span>
  systemctl stop mariadb <span class="o">&gt;</span>/dev/null 2&gt;&amp;1 <span class="o">||</span> <span class="nb">true
  </span>systemctl disable mariadb <span class="o">&gt;</span>/dev/null 2&gt;&amp;1 <span class="o">||</span> <span class="nb">true
  rm</span> <span class="nt">-f</span> /etc/systemd/system/mariadb.service
  systemctl daemon-reload <span class="o">&gt;</span>/dev/null 2&gt;&amp;1 <span class="o">||</span> <span class="nb">true
  rm</span> <span class="nt">-rf</span> <span class="s2">"</span><span class="nv">$INSTALL_DIR</span><span class="s2">"</span>
  <span class="nb">rm</span> <span class="nt">-f</span> /etc/profile.d/mariadb.sh
  <span class="nb">rm</span> <span class="nt">-rf</span> <span class="s2">"</span><span class="nv">$INSTALL_PREFIX</span><span class="s2">/mysql"</span>
  <span class="nb">echo</span> <span class="s2">"=== 초기화 완료: 설치 디렉터리, 서비스 파일, 환경변수, 링크 제거 ==="</span>

  <span class="k">if</span> <span class="o">[</span> <span class="s2">"</span><span class="nv">$CLEAN_ONLY</span><span class="s2">"</span> <span class="o">=</span> <span class="nb">true</span> <span class="o">]</span><span class="p">;</span> <span class="k">then
    </span><span class="nb">exit </span>0
  <span class="k">fi
fi</span>
</code></pre></div></div>

<h5 id="3-설치">3. 설치</h5>

<p>설치 커맨드를 나열하는 단계.</p>

<p>마리아디비가 마이에스큐엘의 아종이다보니 헷갈리는 부분이 많았다.<br />
mysql 이름의 폴더를 기본 설정으로 찾는 경우가 많아서 <span style="color: orange;"><strong>심볼릭 링크</strong></span>를 생성해 오류를 피하고<br />
<span style="color: orange;"><strong>데이터베이스 초기화 파일</strong></span>도 mariadb~~ 인 경우가 있고 mysql~~ 인 경우가 있어서 뭐라도 있으면 찾아서 쓰도록 하였다.</p>

<p>실제 이리저리 시도해보다 온갖 오류가 나길래 이 단계에서의 관건은 실패 시 해결책을 같이 써두는 것으로 하였다.<br />
<span style="color: orange;"><strong>ERROR</strong></span> 태그 출력 시 가능하면 <span style="color: orange;"><strong>HOW TO FIX</strong></span> 태그와 함께 수동으로 문제를 확인해볼 수 있게 한다.</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># 설치</span>
<span class="k">if</span> <span class="o">[</span> <span class="s2">"</span><span class="nv">$INSTALL</span><span class="s2">"</span> <span class="o">=</span> <span class="nb">true</span> <span class="o">]</span> <span class="o">||</span> <span class="o">[</span> <span class="s2">"</span><span class="nv">$RESET</span><span class="s2">"</span> <span class="o">=</span> <span class="nb">true</span> <span class="o">]</span><span class="p">;</span> <span class="k">then</span>

  <span class="c"># 그룹/사용자 생성</span>
  getent group <span class="s2">"</span><span class="nv">$GROUP</span><span class="s2">"</span> <span class="o">&gt;</span>/dev/null <span class="o">||</span> groupadd <span class="s2">"</span><span class="nv">$GROUP</span><span class="s2">"</span>
  getent passwd <span class="s2">"</span><span class="nv">$USER</span><span class="s2">"</span> <span class="o">&gt;</span>/dev/null <span class="o">||</span> useradd <span class="nt">-r</span> <span class="nt">-g</span> <span class="s2">"</span><span class="nv">$GROUP</span><span class="s2">"</span> <span class="nt">-s</span> /bin/false <span class="s2">"</span><span class="nv">$USER</span><span class="s2">"</span>

  <span class="c"># 압축 해제</span>
  <span class="k">if</span> <span class="o">[</span> <span class="o">!</span> <span class="nt">-f</span> <span class="s2">"</span><span class="nv">$TAR_FILE</span><span class="s2">"</span> <span class="o">]</span><span class="p">;</span> <span class="k">then
    </span><span class="nb">echo</span> <span class="s2">"[ERROR] '</span><span class="nv">$TAR_FILE</span><span class="s2">' 파일을 찾을 수 없음"</span> <span class="o">&gt;</span>&amp;2
    <span class="nb">echo</span> <span class="s2">"[HOW TO FIX] TAR_FILE 경로와 이름이 정확한지 확인."</span>
    <span class="nb">exit </span>1
  <span class="k">fi

  </span><span class="nb">echo</span> <span class="s2">"[INFO] '</span><span class="nv">$TAR_FILE</span><span class="s2">' 압축 해제 중..."</span>
  <span class="nb">mkdir</span> <span class="nt">-p</span> <span class="s2">"</span><span class="nv">$INSTALL_PREFIX</span><span class="s2">"</span>
  <span class="nb">tar</span> <span class="nt">-xzf</span> <span class="s2">"</span><span class="nv">$TAR_FILE</span><span class="s2">"</span> <span class="nt">-C</span> <span class="s2">"</span><span class="nv">$INSTALL_PREFIX</span><span class="s2">"</span>
  <span class="nb">echo</span> <span class="s2">"[SUCCESS] '</span><span class="nv">$INSTALL_PREFIX</span><span class="s2">' 아래 디렉터리 압축 해제 완료"</span>

  <span class="c"># 디렉터리 위치 조정</span>
  <span class="nv">EX_DIR</span><span class="o">=</span><span class="si">$(</span><span class="nb">tar</span> <span class="nt">-tf</span> <span class="s2">"</span><span class="nv">$TAR_FILE</span><span class="s2">"</span> | <span class="nb">head</span> <span class="nt">-1</span> | <span class="nb">cut</span> <span class="nt">-f1</span> <span class="nt">-d</span><span class="s2">"/"</span><span class="si">)</span>
  <span class="nb">mv</span> <span class="s2">"</span><span class="nv">$INSTALL_PREFIX</span><span class="s2">/</span><span class="nv">$EX_DIR</span><span class="s2">"</span> <span class="s2">"</span><span class="nv">$INSTALL_DIR</span><span class="s2">"</span>
  <span class="nb">echo</span> <span class="s2">"[SUCCESS] '</span><span class="nv">$INSTALL_DIR</span><span class="s2">'로 이동 완료"</span>

  <span class="c"># 링크 생성</span>
  <span class="nb">ln</span> <span class="nt">-sfn</span> <span class="s2">"</span><span class="nv">$INSTALL_DIR</span><span class="s2">"</span> <span class="s2">"</span><span class="nv">$INSTALL_PREFIX</span><span class="s2">/mysql"</span>
  <span class="nb">echo</span> <span class="s2">"[SUCCESS] '</span><span class="nv">$INSTALL_PREFIX</span><span class="s2">/mysql' 심볼릭 링크 '</span><span class="nv">$INSTALL_DIR</span><span class="s2">' 생성 완료"</span>

  <span class="c"># 권한 설정</span>
  <span class="nb">cd</span> <span class="s2">"</span><span class="nv">$INSTALL_DIR</span><span class="s2">"</span>
  <span class="nb">mkdir</span> <span class="nt">-p</span> mysql-files data
  <span class="nb">chown</span> <span class="nt">-R</span> <span class="s2">"</span><span class="nv">$USER</span><span class="s2">"</span>:<span class="s2">"</span><span class="nv">$GROUP</span><span class="s2">"</span> <span class="nb">.</span>
  <span class="nb">chmod </span>750 mysql-files
  <span class="nb">echo</span> <span class="s2">"[SUCCESS] mysql-files, data 디렉터리 권한 변경 완료"</span>

  <span class="c"># 데이터베이스 초기화</span>
  <span class="k">if</span> <span class="o">[</span> <span class="nt">-x</span> <span class="s2">"bin/mariadb-install-db"</span> <span class="o">]</span><span class="p">;</span> <span class="k">then
    </span>bin/mariadb-install-db <span class="se">\</span>
      <span class="nt">--user</span><span class="o">=</span><span class="s2">"</span><span class="nv">$USER</span><span class="s2">"</span> <span class="se">\</span>
      <span class="nt">--basedir</span><span class="o">=</span><span class="s2">"</span><span class="nv">$INSTALL_DIR</span><span class="s2">"</span> <span class="se">\</span>
      <span class="nt">--datadir</span><span class="o">=</span><span class="s2">"</span><span class="nv">$INSTALL_DIR</span><span class="s2">/data"</span>
    <span class="nb">echo</span> <span class="s2">"[SUCCESS] bin/mariadb-install-db로 데이터베이스 초기화 완료"</span>

  <span class="k">elif</span> <span class="o">[</span> <span class="nt">-x</span> <span class="s2">"scripts/mysql_install_db"</span> <span class="o">]</span><span class="p">;</span> <span class="k">then
    </span>scripts/mysql_install_db <span class="se">\</span>
      <span class="nt">--user</span><span class="o">=</span><span class="s2">"</span><span class="nv">$USER</span><span class="s2">"</span> <span class="se">\</span>
      <span class="nt">--basedir</span><span class="o">=</span><span class="s2">"</span><span class="nv">$INSTALL_DIR</span><span class="s2">"</span> <span class="se">\</span>
      <span class="nt">--datadir</span><span class="o">=</span><span class="s2">"</span><span class="nv">$INSTALL_DIR</span><span class="s2">/data"</span>
    <span class="nb">echo</span> <span class="s2">"[SUCCESS] scripts/mysql_install_db로 데이터베이스 초기화 완료"</span>

  <span class="k">else
    </span><span class="nb">echo</span> <span class="s2">"[ERROR] 초기화 스크립트를 찾을 수 없음, 수동 초기화 필요"</span> <span class="o">&gt;</span>&amp;2
    <span class="nb">echo</span> <span class="s2">"[HOW TO FIX]"</span>
    <span class="nb">echo</span> <span class="s2">"  1) </span><span class="nv">$INSTALL_DIR</span><span class="s2">/bin 또는 </span><span class="nv">$INSTALL_DIR</span><span class="s2">/scripts 경로 확인"</span>
    <span class="nb">echo</span> <span class="s2">"  2) 해당 경로에서 mysql_install_db 또는 mariadb-install-db 실행"</span>
    <span class="nb">echo</span> <span class="s2">"  3) 설정 완료 후 'systemctl start mariadb' 재시도"</span>
  <span class="k">fi</span>

  <span class="c"># 환경변수 등록</span>
  <span class="nb">cat</span> <span class="o">&lt;&lt;</span><span class="no">EOF</span><span class="sh"> &gt; /etc/profile.d/mariadb.sh
export PATH=</span><span class="nv">$INSTALL_DIR</span><span class="sh">/bin:</span><span class="se">\$</span><span class="sh">PATH
</span><span class="no">EOF
</span>  <span class="nb">chmod</span> +x /etc/profile.d/mariadb.sh
  <span class="nb">echo</span> <span class="s2">"[SUCCESS] /etc/profile.d/mariadb.sh 생성 및 권한 변경 완료"</span>
<span class="k">fi</span>
</code></pre></div></div>

<h5 id="4-나머지-과정">4. 나머지 과정</h5>

<p>rpm으로 설치해보면 systemctl로 컨트롤 할 수 있게 올라간다.<br />
요즘에 <span style="color: orange;"><strong>systemd</strong></span> 안쓰는 리눅스가 어디있냐! 하느냐면<br />
당장 도커 컨테이너로 올리면 systemd 쓰기가 녹록치 않다.</p>

<p>때문에 분기로 systemd 여부를 체크하고 있으면 등록, 없으면 mysqld_safe 기동 후 크론탭에 자동 등록하도록 한다.</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># systemd 존재할 경우 서비스 설정 및 시작, 없으면 mysqld_safe 실행 후 크론 등록</span>
<span class="k">if </span><span class="nb">command</span> <span class="nt">-v</span> systemctl <span class="o">&gt;</span>/dev/null 2&gt;&amp;1 <span class="o">&amp;&amp;</span> <span class="o">[</span> <span class="nt">-d</span> /run/systemd/system <span class="o">]</span><span class="p">;</span> <span class="k">then
  </span><span class="nv">IS_SYSTEMD</span><span class="o">=</span><span class="nb">true
</span><span class="k">else
  </span><span class="nv">IS_SYSTEMD</span><span class="o">=</span><span class="nb">false
</span><span class="k">fi

</span><span class="nv">SERVICE_SRC</span><span class="o">=</span><span class="si">$(</span>find <span class="s2">"</span><span class="nv">$INSTALL_DIR</span><span class="s2">"</span> <span class="nt">-type</span> f <span class="nt">-name</span> mariadb.service | <span class="nb">head</span> <span class="nt">-n1</span><span class="si">)</span>

<span class="k">if</span> <span class="o">[</span> <span class="s2">"</span><span class="nv">$IS_SYSTEMD</span><span class="s2">"</span> <span class="o">=</span> <span class="nb">true</span> <span class="o">]</span><span class="p">;</span><span class="k">then
  if</span> <span class="o">[</span> <span class="nt">-n</span> <span class="s2">"</span><span class="nv">$SERVICE_SRC</span><span class="s2">"</span> <span class="o">]</span><span class="p">;</span> <span class="k">then
    </span><span class="nb">echo</span> <span class="s2">"[INFO] 서비스 설정"</span>
    <span class="nb">cp</span> <span class="s2">"</span><span class="nv">$SERVICE_SRC</span><span class="s2">"</span> /etc/systemd/system/mariadb.service
    <span class="nb">sed</span> <span class="nt">-i</span> <span class="s2">"s|/usr/local/mysql|</span><span class="nv">$INSTALL_DIR</span><span class="s2">|g"</span> /etc/systemd/system/mariadb.service
    systemctl daemon-reload
    systemctl <span class="nb">enable </span>mariadb
    systemctl start mariadb <span class="o">||</span> <span class="nb">true
    echo</span> <span class="s2">"[SUCCESS] 서비스 시작 완료, 상태확인: systemctl status mariadb"</span>

  <span class="k">else
    </span><span class="nb">echo</span> <span class="s2">"[ERROR] mariadb.service 파일을 찾을 수 없음"</span> <span class="o">&gt;</span>&amp;2
      <span class="nb">echo</span> <span class="s2">"[HOW TO FIX]"</span>
      <span class="nb">echo</span> <span class="s2">"  1) 설치 디렉터리에서 service 파일 검색: find </span><span class="nv">$INSTALL_DIR</span><span class="s2"> -type f -name mariadb.service"</span>
      <span class="nb">echo</span> <span class="s2">"  2) 해당 파일을 /etc/systemd/system/ 디렉터리에 복사: sudo cp &lt;경로&gt; /etc/systemd/system/mariadb.service"</span>
      <span class="nb">echo</span> <span class="s2">"  3) systemd 다시 로드 및 서비스 활성화/시작:"</span>
      <span class="nb">echo</span> <span class="s2">"       sudo systemctl daemon-reload"</span>
      <span class="nb">echo</span> <span class="s2">"       sudo systemctl enable mariadb"</span>
      <span class="nb">echo</span> <span class="s2">"       sudo systemctl start mariadb"</span>
      <span class="nb">exit </span>1
  <span class="k">fi
else
  </span><span class="nb">echo</span> <span class="s2">"[INFO] 크론 설정"</span>
  <span class="nb">sudo</span> <span class="nt">-u</span> <span class="s2">"</span><span class="nv">$USER</span><span class="s2">"</span> <span class="s2">"</span><span class="nv">$INSTALL_DIR</span><span class="s2">/bin/mysqld_safe"</span> <span class="se">\</span>
      <span class="nt">--basedir</span><span class="o">=</span><span class="s2">"</span><span class="nv">$INSTALL_DIR</span><span class="s2">"</span> <span class="se">\</span>
      <span class="nt">--datadir</span><span class="o">=</span><span class="s2">"</span><span class="nv">$INSTALL_DIR</span><span class="s2">/data"</span> <span class="o">&gt;</span> /var/log/mariadb.log 2&gt;&amp;1 &amp;

  <span class="o">(</span>
    crontab <span class="nt">-l</span> 2&gt;/dev/null <span class="se">\</span>
    | <span class="nb">grep</span> <span class="nt">-v</span> <span class="nt">-F</span> <span class="s2">"</span><span class="nv">$INSTALL_DIR</span><span class="s2">/bin/mysqld_safe"</span> <span class="o">||</span> <span class="nb">true
    echo</span> <span class="s2">"@reboot sudo -u </span><span class="nv">$USER</span><span class="s2"> </span><span class="nv">$INSTALL_DIR</span><span class="s2">/bin/mysqld_safe --basedir=</span><span class="nv">$INSTALL_DIR</span><span class="s2"> --datadir=</span><span class="nv">$INSTALL_DIR</span><span class="s2">/data &gt;&gt; /var/log/mariadb.log 2&gt;&amp;1 &amp;"</span>
  <span class="o">)</span> | crontab -

  <span class="nb">echo</span> <span class="s2">"[SUCCESS] mysqld_safe 시작 완료, 크론 등록 완료"</span>
<span class="k">fi

</span><span class="nb">echo</span> <span class="s2">"=== MariaDB 설치 및 서비스 구동 완료 ==="</span>
<span class="nb">echo</span> <span class="s2">"DB 접속할 계정에서 1회만 실행: source /etc/profile.d/mariadb.sh"</span>
<span class="nb">echo</span> <span class="s2">"접속: mysql -u root"</span>
</code></pre></div></div>

<blockquote>
  <h4 id="완성">완성</h4>
  <hr />
</blockquote>

<p><img src="/assets/images/posts/Development/ShellScript/2025-08-04-Install MariaDB/img01.webp" alt="img01" /></p>

<p>이후 계정 생성이나 튜닝이나 기타 등등은 재주껏 하는 것</p>

<blockquote>
  <h4 id="반성">반성</h4>
  <hr />
</blockquote>

<p>생각해보니 크론탭 등록 분기 추가했으면 삭제 시 크론도 삭제해야하는데 빼먹었다!!!<br />
아 이제와서 손대기 귀찮으니 다음에 사고나면 고쳐보자.</p>

<p>OS는 유닉스를 가져오지 않는 이상 웬만하면 돌아갈 것 같다.<br />
버전도 10 버전, 11버전만 써보긴 했는데 뭐 크게 바뀌는거 아니면 웬만하면 돌아가지 않을까?</p>

<p>이 스크립트가 안돌아갈 정도로 버전이 바뀌면 어차피 나도 이 스크립트의 존재를 까먹고 지낼 것 같긴 하다.</p>

<blockquote>
  <h4 id="코드-확인">코드 확인</h4>
  <hr />
</blockquote>

<p><a href="https://raw.githubusercontent.com/movingwoo/movingwoo-snippets/refs/heads/main/Development/ShellScript/2025-08-04-Install%20MariaDB.sh">Link to GitHub</a></p>]]></content><author><name>movingwoo</name></author><category term="Development/ShellScript/" /><category term="SHELL" /><category term="마리아디비 설치" /><summary type="html"><![CDATA[마리아디비 설치 스크립트 개발]]></summary></entry><entry><title type="html">9548번 무제</title><link href="https://movingwoo.com/boj/c++/2025/07/07/9548.html" rel="alternate" type="text/html" title="9548번 무제" /><published>2025-07-07T06:00:00+00:00</published><updated>2025-07-07T06:00:00+00:00</updated><id>https://movingwoo.com/boj/c++/2025/07/07/9548</id><content type="html" xml:base="https://movingwoo.com/boj/c++/2025/07/07/9548.html"><![CDATA[<blockquote>
  <h4 id="이왜틀">이왜틀?</h4>
  <hr />
</blockquote>

<p><img src="/assets/images/posts/BOJ/C++/2025-07-07-9548/img01.webp" alt="img01" /></p>

<p><a href="https://www.acmicpc.net/problem/9548">9548번 무제 - 백준</a></p>

<p>아… 진짜 풀기 싫게 생긴 문제인데<br />
왜 이런 문제에 손을 대서 틀려놔가지고…<br />
코드 볼 필요는 없을 것 같고 천천히 풀어보자.</p>

<blockquote>
  <h4 id="설계">설계</h4>
  <hr />
</blockquote>

<p>I 는 X 에 R 을 삽입한다.<br />
P는 X 부터 Y 까지 출력한다.</p>

<p>여기까지는 단순한데 문제 제한시간이 10초인거 보면 입력량이 보통이 아닐 것이다.</p>

<p><span style="color: orange;"><strong>문자열을 트리처럼 관리하는 Rope</strong></span>라는 자료구조가 있다고 한다.<br />
문제 분류도 Rope로 되어있고 그걸 공부해야 할 것 같은데…<br />
개념을 이해하는 것과 구현은 또 다른 문제.</p>

<blockquote>
  <h4 id="구현">구현</h4>
  <hr />
</blockquote>

<p>처음부터 구현하는데 와 머리가 너무 아파서 때려치고 싶던 차<br />
GNU 확장 STL로 rope가 있다는 것을 알게 되었다.<br />
GCC 기반이면 된다고 하는데 BOJ가 요녀석을 소화할 수 있을까?</p>

<p>헤더는 다음과 같이 사용한다.</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;ext/rope&gt;</span><span class="cp">
</span><span class="k">using</span> <span class="k">namespace</span> <span class="n">__gnu_cxx</span><span class="p">;</span>
</code></pre></div></div>

<p>이제 <span style="color: orange;"><strong>__gnu_cxx::rope</strong></span>를 사용할 수 있다.</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
    <span class="n">ios</span><span class="o">::</span><span class="n">sync_with_stdio</span><span class="p">(</span><span class="nb">false</span><span class="p">);</span>
    <span class="n">cin</span><span class="p">.</span><span class="n">tie</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>

    <span class="kt">int</span> <span class="n">T</span><span class="p">;</span>
    <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">T</span><span class="p">;</span>
    <span class="n">cin</span><span class="p">.</span><span class="n">ignore</span><span class="p">();</span>

    <span class="k">while</span> <span class="p">(</span><span class="n">T</span><span class="o">--</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">string</span> <span class="n">s</span><span class="p">;</span>
        <span class="n">getline</span><span class="p">(</span><span class="n">cin</span><span class="p">,</span> <span class="n">s</span><span class="p">);</span>

        <span class="c1">// rope</span>
        <span class="n">rope</span><span class="o">&lt;</span><span class="kt">char</span><span class="o">&gt;</span> <span class="n">rope</span><span class="p">(</span><span class="n">s</span><span class="p">.</span><span class="n">c_str</span><span class="p">());</span>

        <span class="n">string</span> <span class="n">line</span><span class="p">;</span>
        <span class="k">while</span> <span class="p">(</span><span class="n">getline</span><span class="p">(</span><span class="n">cin</span><span class="p">,</span> <span class="n">line</span><span class="p">))</span> <span class="p">{</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">line</span> <span class="o">==</span> <span class="s">"END"</span><span class="p">)</span> <span class="k">break</span><span class="p">;</span>

            <span class="n">stringstream</span> <span class="n">ss</span><span class="p">(</span><span class="n">line</span><span class="p">);</span>
            <span class="n">string</span> <span class="n">query</span><span class="p">;</span>
            <span class="n">ss</span> <span class="o">&gt;&gt;</span> <span class="n">query</span><span class="p">;</span>

            <span class="k">if</span> <span class="p">(</span><span class="n">query</span> <span class="o">==</span> <span class="s">"I"</span><span class="p">)</span> <span class="p">{</span>
                <span class="c1">// insert</span>
                <span class="n">string</span> <span class="n">x</span><span class="p">;</span>
                <span class="kt">int</span> <span class="n">y</span><span class="p">;</span>
                <span class="n">ss</span> <span class="o">&gt;&gt;</span> <span class="n">x</span> <span class="o">&gt;&gt;</span> <span class="n">y</span><span class="p">;</span>
                <span class="n">rope</span><span class="p">.</span><span class="n">insert</span><span class="p">(</span><span class="n">y</span><span class="p">,</span> <span class="n">x</span><span class="p">.</span><span class="n">c_str</span><span class="p">());</span>
            <span class="p">}</span> <span class="k">else</span> <span class="nf">if</span> <span class="p">(</span><span class="n">query</span> <span class="o">==</span> <span class="s">"P"</span><span class="p">)</span> <span class="p">{</span>
                <span class="c1">// print</span>
                <span class="kt">int</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">;</span>
                <span class="n">ss</span> <span class="o">&gt;&gt;</span> <span class="n">x</span> <span class="o">&gt;&gt;</span> <span class="n">y</span><span class="p">;</span>
                <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">x</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">y</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span> <span class="p">{</span>
                    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">rope</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
                <span class="p">}</span>
                <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="sc">'\n'</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>

    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<blockquote>
  <h4 id="채점">채점</h4>
  <hr />
</blockquote>

<p><img src="/assets/images/posts/BOJ/C++/2025-07-07-9548/img02.webp" alt="img02" /></p>

<p>이게 되네</p>

<blockquote>
  <h4 id="반성">반성</h4>
  <hr />
</blockquote>

<p>정말 뇌가 녹아내리는 줄<br />
며칠 더 시간 투자했으면 직접 구현 가능했을 것 같긴 한데<br />
간단하게 넘어가는게 좋지… 좋은게 좋지</p>

<blockquote>
  <h4 id="코드-확인">코드 확인</h4>
  <hr />
</blockquote>

<p><a href="https://raw.githubusercontent.com/movingwoo/movingwoo-snippets/refs/heads/main/BOJ/C%2B%2B/2025-07-07-9548.cpp">Link to GitHub</a></p>]]></content><author><name>movingwoo</name></author><category term="BOJ/C++/" /><category term="C++" /><category term="알고리즘" /><category term="백준" /><category term="9548" /><category term="무제" /><category term="로프" /><summary type="html"><![CDATA[백준 9548번 무제 C++ 문제풀이]]></summary></entry><entry><title type="html">12837번 가계부 (Hard)</title><link href="https://movingwoo.com/boj/python/2025/07/03/12837.html" rel="alternate" type="text/html" title="12837번 가계부 (Hard)" /><published>2025-07-03T06:00:00+00:00</published><updated>2025-07-03T06:00:00+00:00</updated><id>https://movingwoo.com/boj/python/2025/07/03/12837</id><content type="html" xml:base="https://movingwoo.com/boj/python/2025/07/03/12837.html"><![CDATA[<blockquote>
  <h4 id="이왜틀">이왜틀?</h4>
  <hr />
</blockquote>

<p><img src="/assets/images/posts/BOJ/Python/2025-07-03-12837/img01.webp" alt="img01" /></p>

<p><a href="https://www.acmicpc.net/problem/12837">12837번 가계부 (Hard) - 백준</a></p>

<p>이왜틀 마지막 골드 문제<br />
솔직히 이건 소스 볼 필요도 없다.<br />
Hard라는건 Easy도 있다는 말이고<br />
아마 과거의 내가 Easy를 풀고 소스 그대로 Hard에 집어넣어서 시간초과 났을 것이다.</p>

<blockquote>
  <h4 id="설계">설계</h4>
  <hr />
</blockquote>

<p>대충 구간합 구하는데 값 변경이 필요함 == <span style="color: orange;"><strong>세그먼트 트리</strong></span></p>

<blockquote>
  <h4 id="구현">구현</h4>
  <hr />
</blockquote>

<h5 id="1-세그먼트-트리-구현">1. 세그먼트 트리 구현</h5>

<p>update와 query로 구성된 정석적인 세그먼트 트리 클래스를 구현한다.<br />
값 갱신이 아니라 <span style="color: orange;"><strong>숫자를 합</strong></span>하는 것에 주의</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">SegmentTree</span><span class="p">:</span>
    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="n">self</span><span class="p">,</span> <span class="n">n</span><span class="p">):</span>
        <span class="n">self</span><span class="p">.</span><span class="n">n</span> <span class="o">=</span> <span class="n">n</span>
        <span class="n">self</span><span class="p">.</span><span class="n">size</span> <span class="o">=</span> <span class="mi">1</span> 

        <span class="k">while</span> <span class="n">self</span><span class="p">.</span><span class="n">size</span> <span class="o">&lt;</span> <span class="n">self</span><span class="p">.</span><span class="n">n</span><span class="p">:</span>
            <span class="n">self</span><span class="p">.</span><span class="n">size</span> <span class="o">*=</span> <span class="mi">2</span>

        <span class="n">self</span><span class="p">.</span><span class="n">tree</span> <span class="o">=</span> <span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">*</span> <span class="p">(</span><span class="mi">2</span> <span class="o">*</span> <span class="n">self</span><span class="p">.</span><span class="n">size</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">update</span><span class="p">(</span><span class="n">self</span><span class="p">,</span> <span class="n">idx</span><span class="p">,</span> <span class="n">val</span><span class="p">):</span>
        <span class="n">idx</span> <span class="o">+=</span> <span class="n">self</span><span class="p">.</span><span class="n">size</span>
        <span class="c1"># 갱신이 아니라 합치기
</span>        <span class="n">self</span><span class="p">.</span><span class="n">tree</span><span class="p">[</span><span class="n">idx</span><span class="p">]</span> <span class="o">+=</span> <span class="n">val</span>

        <span class="k">while</span> <span class="n">idx</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">:</span>
            <span class="n">idx</span> <span class="o">//=</span> <span class="mi">2</span> 
            <span class="n">self</span><span class="p">.</span><span class="n">tree</span><span class="p">[</span><span class="n">idx</span><span class="p">]</span> <span class="o">=</span> <span class="n">self</span><span class="p">.</span><span class="n">tree</span><span class="p">[</span><span class="n">idx</span> <span class="o">*</span> <span class="mi">2</span><span class="p">]</span> <span class="o">+</span> <span class="n">self</span><span class="p">.</span><span class="n">tree</span><span class="p">[</span><span class="n">idx</span> <span class="o">*</span> <span class="mi">2</span> <span class="o">+</span> <span class="mi">1</span><span class="p">]</span>
            
    <span class="k">def</span> <span class="nf">query</span><span class="p">(</span><span class="n">self</span><span class="p">,</span> <span class="n">l</span><span class="p">,</span> <span class="n">r</span><span class="p">):</span>
        <span class="n">l</span> <span class="o">+=</span> <span class="n">self</span><span class="p">.</span><span class="n">size</span>
        <span class="n">r</span> <span class="o">+=</span> <span class="n">self</span><span class="p">.</span><span class="n">size</span>
        <span class="n">result</span> <span class="o">=</span> <span class="mi">0</span>

        <span class="k">while</span> <span class="n">l</span> <span class="o">&lt;=</span> <span class="n">r</span><span class="p">:</span>
            <span class="k">if</span> <span class="n">l</span> <span class="o">%</span> <span class="mi">2</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
                <span class="n">result</span> <span class="o">+=</span> <span class="n">self</span><span class="p">.</span><span class="n">tree</span><span class="p">[</span><span class="n">l</span><span class="p">]</span>
                <span class="n">l</span> <span class="o">+=</span> <span class="mi">1</span>
            <span class="k">if</span> <span class="n">r</span> <span class="o">%</span> <span class="mi">2</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
                <span class="n">result</span> <span class="o">+=</span> <span class="n">self</span><span class="p">.</span><span class="n">tree</span><span class="p">[</span><span class="n">r</span><span class="p">]</span>
                <span class="n">r</span> <span class="o">-=</span> <span class="mi">1</span>

            <span class="n">l</span> <span class="o">//=</span> <span class="mi">2</span>
            <span class="n">r</span> <span class="o">//=</span> <span class="mi">2</span>

        <span class="k">return</span> <span class="n">result</span>
</code></pre></div></div>

<h5 id="2-쿼리-수행">2. 쿼리 수행</h5>

<p>입력받아 쿼리를 수행한다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">N</span><span class="p">,</span> <span class="n">Q</span> <span class="o">=</span> <span class="nf">map</span><span class="p">(</span><span class="nb">int</span><span class="p">,</span> <span class="nf">input</span><span class="p">().</span><span class="nf">split</span><span class="p">())</span>
<span class="n">tree</span> <span class="o">=</span> <span class="nc">SegmentTree</span><span class="p">(</span><span class="n">N</span><span class="p">)</span>

<span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="n">Q</span><span class="p">):</span>
    <span class="n">q</span><span class="p">,</span> <span class="n">p</span><span class="p">,</span> <span class="n">x</span> <span class="o">=</span> <span class="nf">map</span><span class="p">(</span><span class="nb">int</span><span class="p">,</span> <span class="nf">input</span><span class="p">().</span><span class="nf">split</span><span class="p">())</span>

    <span class="c1"># 1은 업데이트 2는 구간합
</span>    <span class="k">if</span> <span class="n">q</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
        <span class="n">tree</span><span class="p">.</span><span class="nf">update</span><span class="p">(</span><span class="n">p</span> <span class="o">-</span> <span class="mi">1</span><span class="p">,</span> <span class="n">x</span><span class="p">)</span>
    <span class="k">elif</span> <span class="n">q</span> <span class="o">==</span> <span class="mi">2</span><span class="p">:</span>
        <span class="nf">print</span><span class="p">(</span><span class="n">tree</span><span class="p">.</span><span class="nf">query</span><span class="p">(</span><span class="n">p</span> <span class="o">-</span> <span class="mi">1</span><span class="p">,</span> <span class="n">x</span> <span class="o">-</span> <span class="mi">1</span><span class="p">))</span>
</code></pre></div></div>

<blockquote>
  <h4 id="채점">채점</h4>
  <hr />
</blockquote>

<p><img src="/assets/images/posts/BOJ/Python/2025-07-03-12837/img02.webp" alt="img02" /></p>

<blockquote>
  <h4 id="반성">반성</h4>
  <hr />
</blockquote>

<p>골드도 끝났고 플래티넘 문제 2개가 남았다.<br />
이건 각오하고 접근해야지…</p>

<blockquote>
  <h4 id="코드-확인">코드 확인</h4>
  <hr />
</blockquote>

<p><a href="https://raw.githubusercontent.com/movingwoo/movingwoo-snippets/refs/heads/main/BOJ/Python/2025-07-03-12837.py">Link to GitHub</a></p>]]></content><author><name>movingwoo</name></author><category term="BOJ/Python/" /><category term="PYTHON" /><category term="알고리즘" /><category term="백준" /><category term="12837" /><category term="가계부 (Hard)" /><category term="세그먼트트리" /><summary type="html"><![CDATA[백준 12837번 가계부 (Hard) PYTHON 문제풀이]]></summary></entry><entry><title type="html">16455번 K번째 수 찾는 함수</title><link href="https://movingwoo.com/boj/python/2025/07/03/16455.html" rel="alternate" type="text/html" title="16455번 K번째 수 찾는 함수" /><published>2025-07-03T04:00:00+00:00</published><updated>2025-07-03T04:00:00+00:00</updated><id>https://movingwoo.com/boj/python/2025/07/03/16455</id><content type="html" xml:base="https://movingwoo.com/boj/python/2025/07/03/16455.html"><![CDATA[<blockquote>
  <h4 id="이왜틀">이왜틀?</h4>
  <hr />
</blockquote>

<p><img src="/assets/images/posts/BOJ/Python/2025-07-03-16455/img01.webp" alt="img01" /></p>

<p><a href="https://www.acmicpc.net/problem/16455">16455번 K번째 수 찾는 함수 - 백준</a></p>

<p>함수를 직접 구현하는 문제.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span> <span class="n">n</span><span class="o">=</span><span class="n">a</span><span class="o">.</span><span class="na">length</span><span class="o">;</span>
<span class="kt">int</span> <span class="n">start</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
<span class="kt">int</span> <span class="n">end</span><span class="o">=</span><span class="n">n</span><span class="o">-</span><span class="mi">1</span><span class="o">;</span>
<span class="n">k</span><span class="o">-=</span><span class="mi">1</span><span class="o">;</span>

<span class="k">while</span><span class="o">(</span><span class="n">start</span><span class="o">&lt;</span><span class="n">end</span><span class="o">)</span> <span class="o">{</span>
    <span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="n">start</span><span class="o">;</span>
    <span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="n">end</span><span class="o">;</span>
    <span class="kt">int</span> <span class="n">mid</span><span class="o">=</span><span class="n">a</span><span class="o">[(</span><span class="n">i</span><span class="o">+</span><span class="n">j</span><span class="o">)/</span><span class="mi">2</span><span class="o">];</span>
    
    <span class="k">while</span><span class="o">(</span><span class="n">i</span><span class="o">&lt;</span><span class="n">j</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">if</span><span class="o">(</span><span class="n">a</span><span class="o">[</span><span class="n">i</span><span class="o">]&gt;=</span><span class="n">mid</span><span class="o">)</span> <span class="o">{</span>
            <span class="kt">int</span> <span class="n">tmp</span> <span class="o">=</span> <span class="n">a</span><span class="o">[</span><span class="n">j</span><span class="o">];</span>
            <span class="n">a</span><span class="o">[</span><span class="n">j</span><span class="o">]</span> <span class="o">=</span> <span class="n">a</span><span class="o">[</span><span class="n">i</span><span class="o">];</span>
            <span class="n">a</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="n">tmp</span><span class="o">;</span>
            <span class="n">j</span><span class="o">--;</span>
        <span class="o">}</span><span class="k">else</span> <span class="o">{</span>
            <span class="n">i</span><span class="o">++;</span>
        <span class="o">}</span>
    <span class="o">}</span>
    <span class="k">if</span><span class="o">(</span><span class="n">a</span><span class="o">[</span><span class="n">i</span><span class="o">]&gt;</span><span class="n">mid</span><span class="o">)</span> <span class="n">i</span><span class="o">--;</span>
    <span class="k">if</span><span class="o">(</span><span class="n">k</span><span class="o">&lt;=</span><span class="n">i</span><span class="o">)</span> <span class="n">end</span> <span class="o">=</span> <span class="n">i</span><span class="o">;</span>
    <span class="k">else</span> <span class="n">start</span> <span class="o">=</span> <span class="n">i</span> <span class="o">+</span> <span class="mi">1</span><span class="o">;</span>
<span class="o">}</span>
<span class="k">return</span> <span class="n">a</span><span class="o">[</span><span class="n">k</span><span class="o">];</span>
</code></pre></div></div>

<p><span style="color: orange;"><strong>퀵셀렉트</strong></span>를 했는데 시간초과가 났다.<br />
조금만 수정하면 통과할 수 있다.</p>

<blockquote>
  <h4 id="설계">설계</h4>
  <hr />
</blockquote>

<p>java 코드에서 pivot을 중앙 값으로 설정했다.<br />
그런데 찾는 값이 한쪽으로 치우치면 시간 복잡도가 O(N^2) 까지 갈 수 있다.</p>

<p>만약 <span style="color: orange;"><strong>pivot을 무작위 난수</strong></span>를 생성해 선택하면 한쪽으로 치우치는걸 다소 방지할 수 있다.<br />
그리고 수열의 요소가 서로 다른 값임이 보장되지 않는다.<br />
이 부분에 대한 로직도 추가한다.</p>

<blockquote>
  <h4 id="구현">구현</h4>
  <hr />
</blockquote>

<p>pivot은 start와 end 사이 랜덤으로 설정한다.<br />
중복값인 경우 정확한 판단을 위해 pivot을 기준으로 <span style="color: orange;"><strong>3분할</strong></span>한다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">kth</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">k</span><span class="p">):</span>
    <span class="kn">import</span> <span class="n">random</span>

    <span class="n">n</span> <span class="o">=</span> <span class="nf">len</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>
    <span class="n">start</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="n">end</span> <span class="o">=</span> <span class="n">n</span> <span class="o">-</span> <span class="mi">1</span>
    <span class="n">k</span> <span class="o">-=</span> <span class="mi">1</span>

    <span class="k">while</span> <span class="n">start</span> <span class="o">&lt;=</span> <span class="n">end</span><span class="p">:</span> 
        <span class="c1"># 3분할
</span>        <span class="n">i</span> <span class="o">=</span> <span class="n">start</span>
        <span class="n">j</span> <span class="o">=</span> <span class="n">start</span>
        <span class="n">l</span> <span class="o">=</span> <span class="n">end</span>

        <span class="c1"># 무작위 값
</span>        <span class="n">pivot</span> <span class="o">=</span> <span class="n">a</span><span class="p">[</span><span class="n">random</span><span class="p">.</span><span class="nf">randint</span><span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="n">l</span><span class="p">)]</span>

        <span class="k">while</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">l</span><span class="p">:</span>
            <span class="c1"># pivot보다 작을때
</span>            <span class="k">if</span> <span class="n">a</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&lt;</span> <span class="n">pivot</span><span class="p">:</span>
                <span class="n">a</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="n">a</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="n">a</span><span class="p">[</span><span class="n">j</span><span class="p">],</span> <span class="n">a</span><span class="p">[</span><span class="n">i</span><span class="p">]</span>
                <span class="n">i</span> <span class="o">+=</span> <span class="mi">1</span>
                <span class="n">j</span> <span class="o">+=</span> <span class="mi">1</span>
            <span class="c1"># pivot보다 클떄
</span>            <span class="k">elif</span> <span class="n">a</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&gt;</span> <span class="n">pivot</span><span class="p">:</span>
                <span class="n">a</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="n">a</span><span class="p">[</span><span class="n">l</span><span class="p">]</span> <span class="o">=</span> <span class="n">a</span><span class="p">[</span><span class="n">l</span><span class="p">],</span> <span class="n">a</span><span class="p">[</span><span class="n">i</span><span class="p">]</span>
                <span class="n">l</span> <span class="o">-=</span> <span class="mi">1</span>
            <span class="k">else</span><span class="p">:</span>
                <span class="n">i</span> <span class="o">+=</span> <span class="mi">1</span>
        
        
        <span class="k">if</span> <span class="n">k</span> <span class="o">&lt;</span> <span class="n">j</span><span class="p">:</span>
            <span class="n">end</span> <span class="o">=</span> <span class="n">j</span> <span class="o">-</span> <span class="mi">1</span>
        <span class="k">elif</span> <span class="n">k</span> <span class="o">&gt;</span> <span class="n">l</span><span class="p">:</span>
            <span class="n">start</span> <span class="o">=</span> <span class="n">l</span> <span class="o">+</span> <span class="mi">1</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="k">return</span> <span class="n">pivot</span>
</code></pre></div></div>

<blockquote>
  <h4 id="채점">채점</h4>
  <hr />
</blockquote>

<p><img src="/assets/images/posts/BOJ/Python/2025-07-03-16455/img02.webp" alt="img02" /></p>

<blockquote>
  <h4 id="반성">반성</h4>
  <hr />
</blockquote>

<p>좀 빡쎘다…<br />
옛날 코드 잘 해놔서 그대로 포팅하면 쉽게 날먹할 줄 알았는데</p>

<blockquote>
  <h4 id="코드-확인">코드 확인</h4>
  <hr />
</blockquote>

<p><a href="https://raw.githubusercontent.com/movingwoo/movingwoo-snippets/refs/heads/main/BOJ/Python/2025-07-03-16455.py">Link to GitHub</a></p>]]></content><author><name>movingwoo</name></author><category term="BOJ/Python/" /><category term="PYTHON" /><category term="알고리즘" /><category term="백준" /><category term="16455" /><category term="K번째 수 찾는 함수" /><category term="퀵셀렉트" /><summary type="html"><![CDATA[백준 16455번 K번째 수 찾는 함수 PYTHON 문제풀이]]></summary></entry><entry><title type="html">2252번 줄 세우기</title><link href="https://movingwoo.com/boj/python/2025/07/03/2252.html" rel="alternate" type="text/html" title="2252번 줄 세우기" /><published>2025-07-03T02:00:00+00:00</published><updated>2025-07-03T02:00:00+00:00</updated><id>https://movingwoo.com/boj/python/2025/07/03/2252</id><content type="html" xml:base="https://movingwoo.com/boj/python/2025/07/03/2252.html"><![CDATA[<blockquote>
  <h4 id="이왜틀">이왜틀?</h4>
  <hr />
</blockquote>

<p><img src="/assets/images/posts/BOJ/Python/2025-07-03-2252/img01.webp" alt="img01" /></p>

<p><a href="https://www.acmicpc.net/problem/2252">2252번 줄 세우기 - 백준</a></p>

<p>런타임 에러가 났고 코드가 너무 길어서 안가져오기로 했다.<br />
대충 리스트에 넣고 빼면서 시뮬레이션 하는 내용이다.</p>

<blockquote>
  <h4 id="설계">설계</h4>
  <hr />
</blockquote>

<p><span style="color: orange;"><strong>위상정렬</strong></span>을 한다.</p>

<blockquote>
  <h4 id="구현">구현</h4>
  <hr />
</blockquote>

<p>대충 그래프 그리고, 진입차수가 0인 노드를 큐에 모으고, 연결된 노드 진입차수 감소시킨다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="n">collections</span> <span class="kn">import</span> <span class="n">deque</span>

<span class="n">N</span><span class="p">,</span> <span class="n">M</span> <span class="o">=</span> <span class="nf">map</span><span class="p">(</span><span class="nb">int</span><span class="p">,</span> <span class="nf">input</span><span class="p">().</span><span class="nf">split</span><span class="p">())</span>

<span class="c1"># 그래프, 간선, 진입차수, 큐
</span><span class="n">graph</span> <span class="o">=</span> <span class="p">[[]</span> <span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="n">N</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)]</span>
<span class="n">edges</span> <span class="o">=</span> <span class="p">[</span><span class="nf">tuple</span><span class="p">(</span><span class="nf">map</span><span class="p">(</span><span class="nb">int</span><span class="p">,</span> <span class="nf">input</span><span class="p">().</span><span class="nf">split</span><span class="p">()))</span> <span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="n">M</span><span class="p">)]</span>
<span class="n">degree</span> <span class="o">=</span> <span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">*</span> <span class="p">(</span><span class="n">N</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span>
<span class="n">que</span> <span class="o">=</span> <span class="nf">deque</span><span class="p">()</span>
<span class="n">result</span> <span class="o">=</span> <span class="p">[]</span>

<span class="k">for</span> <span class="n">A</span><span class="p">,</span> <span class="n">B</span> <span class="ow">in</span> <span class="n">edges</span><span class="p">:</span>
    <span class="n">graph</span><span class="p">[</span><span class="n">A</span><span class="p">].</span><span class="nf">append</span><span class="p">(</span><span class="n">B</span><span class="p">)</span>
    <span class="n">degree</span><span class="p">[</span><span class="n">B</span><span class="p">]</span> <span class="o">+=</span> <span class="mi">1</span>

<span class="c1"># 진입차수 0
</span><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="n">N</span> <span class="o">+</span> <span class="mi">1</span><span class="p">):</span>
    <span class="k">if</span> <span class="n">degree</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
        <span class="n">que</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>

<span class="k">while</span> <span class="n">que</span><span class="p">:</span>
    <span class="n">now</span> <span class="o">=</span> <span class="n">que</span><span class="p">.</span><span class="nf">popleft</span><span class="p">()</span>
    <span class="n">result</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">now</span><span class="p">)</span>

    <span class="c1"># 연결된 노드 진입차수 감소
</span>    <span class="k">for</span> <span class="n">node</span> <span class="ow">in</span> <span class="n">graph</span><span class="p">[</span><span class="n">now</span><span class="p">]:</span>
        <span class="n">degree</span><span class="p">[</span><span class="n">node</span><span class="p">]</span> <span class="o">-=</span> <span class="mi">1</span>
        <span class="k">if</span> <span class="n">degree</span><span class="p">[</span><span class="n">node</span><span class="p">]</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
            <span class="n">que</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">node</span><span class="p">)</span>

<span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s"> </span><span class="sh">"</span><span class="p">.</span><span class="nf">join</span><span class="p">(</span><span class="nf">map</span><span class="p">(</span><span class="nb">str</span><span class="p">,</span> <span class="n">result</span><span class="p">)))</span>
</code></pre></div></div>

<blockquote>
  <h4 id="채점">채점</h4>
  <hr />
</blockquote>

<p><img src="/assets/images/posts/BOJ/Python/2025-07-03-2252/img02.webp" alt="img02" /></p>

<blockquote>
  <h4 id="반성">반성</h4>
  <hr />
</blockquote>

<p>뭐지 위상정렬 왜 재밌지?<br />
그래프 그리는 것 부터 짜증나야하는데<br />
파이썬 코드가 예뻐서 그런 것 같다.</p>

<blockquote>
  <h4 id="코드-확인">코드 확인</h4>
  <hr />
</blockquote>

<p><a href="https://raw.githubusercontent.com/movingwoo/movingwoo-snippets/refs/heads/main/BOJ/Python/2025-07-03-2252.py">Link to GitHub</a></p>]]></content><author><name>movingwoo</name></author><category term="BOJ/Python/" /><category term="PYTHON" /><category term="알고리즘" /><category term="백준" /><category term="2252" /><category term="줄 세우기" /><category term="위상정렬" /><summary type="html"><![CDATA[백준 2252번 줄 세우기 PYTHON 문제풀이]]></summary></entry><entry><title type="html">1669번 멍멍이 쓰다듬기</title><link href="https://movingwoo.com/boj/python/2025/07/03/1669.html" rel="alternate" type="text/html" title="1669번 멍멍이 쓰다듬기" /><published>2025-07-03T00:00:00+00:00</published><updated>2025-07-03T00:00:00+00:00</updated><id>https://movingwoo.com/boj/python/2025/07/03/1669</id><content type="html" xml:base="https://movingwoo.com/boj/python/2025/07/03/1669.html"><![CDATA[<blockquote>
  <h4 id="이왜틀">이왜틀?</h4>
  <hr />
</blockquote>

<p><img src="/assets/images/posts/BOJ/Python/2025-07-03-1669/img01.webp" alt="img01" /></p>

<p><a href="https://www.acmicpc.net/problem/1669">1669번 멍멍이 쓰다듬기 - 백준</a></p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">Scanner</span> <span class="n">sc</span><span class="o">=</span><span class="k">new</span> <span class="nc">Scanner</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
<span class="kt">long</span> <span class="n">num</span><span class="o">=(</span><span class="n">sc</span><span class="o">.</span><span class="na">nextLong</span><span class="o">()-</span><span class="n">sc</span><span class="o">.</span><span class="na">nextLong</span><span class="o">())*-</span><span class="mi">1</span><span class="o">;</span>
    <span class="kt">long</span> <span class="n">distance</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span>
    <span class="kt">int</span> <span class="n">answer</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span>
    <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">1</span><span class="o">;;)</span> <span class="o">{</span>
        <span class="k">if</span><span class="o">(</span><span class="n">num</span><span class="o">&lt;</span><span class="n">distance</span><span class="o">+</span><span class="n">j</span><span class="o">)</span> <span class="k">break</span><span class="o">;</span>
        <span class="k">else</span> <span class="o">{</span>					
            <span class="n">distance</span><span class="o">+=</span><span class="n">j</span><span class="o">;</span>
            <span class="n">answer</span><span class="o">++;</span>
            <span class="k">if</span><span class="o">(</span><span class="n">answer</span><span class="o">%</span><span class="mi">2</span><span class="o">!=</span><span class="mi">0</span><span class="o">)</span> <span class="n">j</span><span class="o">++;</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">answer</span><span class="o">);</span>
</code></pre></div></div>

<p>얼추 맞는데 한가지 조건을 더 고려해야한다.<br />
키를 0cm 조절할 수도 있다.</p>

<blockquote>
  <h4 id="설계">설계</h4>
  <hr />
</blockquote>

<p>키를 1cm 단위로 조절할 수 있는데, 첫 날과 마지막 날은 반드시 1cm다.<br />
전체 수열은 <span style="color: orange;"><strong>1, 2, 3, 2, 1</strong></span> 형태가 될거다.<br />
수열의 가장 높은 값을 k로 두면 <span style="color: orange;"><strong>수열의 합은 k^2, 길이는 2 * k - 1</strong></span>이다.</p>

<p>0cm 조절도 가능하니 <span style="color: orange;"><strong>1, 2, 3, 3, 2, 1</strong></span> 형태의 수열도 가능하다.<br />
이런 경우 <span style="color: orange;"><strong>합은 k * (k + 1) 이며 길이는 2 * k</strong></span></p>

<blockquote>
  <h4 id="구현">구현</h4>
  <hr />
</blockquote>

<p>위 공식을 적용한다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">X</span><span class="p">,</span> <span class="n">Y</span> <span class="o">=</span> <span class="nf">map</span><span class="p">(</span><span class="nb">int</span><span class="p">,</span> <span class="nf">input</span><span class="p">().</span><span class="nf">split</span><span class="p">())</span>
<span class="n">sub</span> <span class="o">=</span> <span class="n">Y</span> <span class="o">-</span> <span class="n">X</span>
<span class="n">k</span> <span class="o">=</span> <span class="mi">0</span>
<span class="n">result</span> <span class="o">=</span> <span class="mi">0</span>

<span class="k">while</span> <span class="n">sub</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">:</span>

    <span class="k">if</span> <span class="n">k</span> <span class="o">*</span> <span class="n">k</span> <span class="o">&gt;=</span> <span class="n">sub</span><span class="p">:</span>
        <span class="n">result</span> <span class="o">=</span> <span class="mi">2</span> <span class="o">*</span> <span class="n">k</span> <span class="o">-</span> <span class="mi">1</span>
        <span class="k">break</span>

    <span class="k">elif</span> <span class="n">k</span> <span class="o">*</span> <span class="p">(</span><span class="n">k</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> <span class="o">&gt;=</span> <span class="n">sub</span><span class="p">:</span>
        <span class="n">result</span> <span class="o">=</span> <span class="mi">2</span> <span class="o">*</span> <span class="n">k</span>
        <span class="k">break</span>

    <span class="n">k</span> <span class="o">+=</span> <span class="mi">1</span>

<span class="nf">print</span><span class="p">(</span><span class="n">result</span><span class="p">)</span>
</code></pre></div></div>

<blockquote>
  <h4 id="채점">채점</h4>
  <hr />
</blockquote>

<p><img src="/assets/images/posts/BOJ/Python/2025-07-03-1669/img02.webp" alt="img02" /></p>

<blockquote>
  <h4 id="반성">반성</h4>
  <hr />
</blockquote>

<p>과거 자바코드 변수명이 의아해서 찾아보니 1011번 문제가 이 문제와 흡사하다.</p>

<p><a href="https://www.acmicpc.net/problem/1011">1011번 Fly me to the Alpha Centauri - 백준</a></p>

<p>이 문제는 6년 전에 유사 코드로 통과한 기록이 있다.<br />
아마 비슷한 문제라서 코드를 살짝 고쳐서 집어넣었다가 틀리고 그대로 도망간 것으로 추측된다.</p>

<blockquote>
  <h4 id="코드-확인">코드 확인</h4>
  <hr />
</blockquote>

<p><a href="https://raw.githubusercontent.com/movingwoo/movingwoo-snippets/refs/heads/main/BOJ/Python/2025-07-03-1669.py">Link to GitHub</a></p>]]></content><author><name>movingwoo</name></author><category term="BOJ/Python/" /><category term="PYTHON" /><category term="알고리즘" /><category term="백준" /><category term="1669" /><category term="멍멍이 쓰다듬기" /><category term="수학" /><summary type="html"><![CDATA[백준 1669번 멍멍이 쓰다듬기 PYTHON 문제풀이]]></summary></entry><entry><title type="html">2493번 탑</title><link href="https://movingwoo.com/boj/python/2025/07/02/2493.html" rel="alternate" type="text/html" title="2493번 탑" /><published>2025-07-02T07:00:00+00:00</published><updated>2025-07-02T07:00:00+00:00</updated><id>https://movingwoo.com/boj/python/2025/07/02/2493</id><content type="html" xml:base="https://movingwoo.com/boj/python/2025/07/02/2493.html"><![CDATA[<blockquote>
  <h4 id="이왜틀">이왜틀?</h4>
  <hr />
</blockquote>

<p><img src="/assets/images/posts/BOJ/Python/2025-07-02-2493/img01.webp" alt="img01" /></p>

<p><a href="https://www.acmicpc.net/problem/2493">2493번 탑 - 백준</a></p>

<p>빠른 문제 번호… 제법 낮은 정답률…<br />
어설픈 코드는 감히 통과하지 못할 문제다.</p>

<p>출력초과 받은 코드 말고 틀린 코드를 보자.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span> <span class="n">n</span><span class="o">=</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
<span class="nc">StringTokenizer</span> <span class="n">st</span><span class="o">=</span><span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">(),</span><span class="s">" "</span><span class="o">);</span>

<span class="kt">int</span><span class="o">[]</span> <span class="n">art</span><span class="o">=</span><span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">n</span><span class="o">+</span><span class="mi">1</span><span class="o">];</span>
<span class="kt">boolean</span><span class="o">[]</span> <span class="n">arr</span><span class="o">=</span><span class="k">new</span> <span class="kt">boolean</span><span class="o">[</span><span class="n">n</span><span class="o">+</span><span class="mi">1</span><span class="o">];</span>

<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="n">n</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span> <span class="n">art</span><span class="o">[</span><span class="n">i</span><span class="o">]=</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
<span class="kt">int</span> <span class="n">m</span><span class="o">=</span><span class="n">art</span><span class="o">[</span><span class="n">n</span><span class="o">];</span>
<span class="kt">int</span> <span class="n">t</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>

<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="n">n</span><span class="o">;</span><span class="n">i</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">--){</span>
    <span class="k">if</span><span class="o">(</span><span class="n">art</span><span class="o">[</span><span class="n">i</span><span class="o">]&gt;=</span><span class="n">m</span><span class="o">){</span>
        <span class="n">arr</span><span class="o">[</span><span class="n">i</span><span class="o">]=</span><span class="kc">true</span><span class="o">;</span>
        <span class="n">m</span><span class="o">=</span><span class="n">art</span><span class="o">[</span><span class="n">i</span><span class="o">];</span>
    <span class="o">}</span>
<span class="o">}</span>

<span class="nc">StringBuilder</span> <span class="n">sb</span><span class="o">=</span><span class="k">new</span> <span class="nc">StringBuilder</span><span class="o">();</span>

<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="n">n</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
    <span class="n">art</span><span class="o">[</span><span class="n">i</span><span class="o">]=</span><span class="n">t</span><span class="o">;</span>
    <span class="k">if</span><span class="o">(</span><span class="n">arr</span><span class="o">[</span><span class="n">i</span><span class="o">]){</span>
        <span class="n">t</span><span class="o">=</span><span class="n">i</span><span class="o">;</span>
    <span class="o">}</span>
    <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">art</span><span class="o">[</span><span class="n">i</span><span class="o">]+</span><span class="s">" "</span><span class="o">);</span>
<span class="o">}</span>
<span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">sb</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
</code></pre></div></div>

<p>문제에서 스택쓰라는데 왜 안썼지</p>

<blockquote>
  <h4 id="설계">설계</h4>
  <hr />
</blockquote>

<p>스택에 손도 안 댄 과거의 내가 괘씸해서 <span style="color: orange;"><strong>스택</strong></span>으로 푼다.<br />
왼쩍에서 오른쪽으로 탐색하며 레이저 수신 가능 여부를 판단한다.</p>

<blockquote>
  <h4 id="구현">구현</h4>
  <hr />
</blockquote>

<p>파이썬은 <span style="color: orange;"><strong>리스트</strong></span>가 pop까지 지원해서 스택 역할을 할 수 있다.<br />
append와 pop을 사용한다.</p>

<p>왼쪽부터 탐색하며 <span style="color: orange;"><strong>수신가능한 탑을 제외하고 pop</strong></span> 한다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">N</span> <span class="o">=</span> <span class="nf">int</span><span class="p">(</span><span class="nf">input</span><span class="p">())</span>

<span class="n">towers</span> <span class="o">=</span> <span class="nf">list</span><span class="p">(</span><span class="nf">map</span><span class="p">(</span><span class="nb">int</span><span class="p">,</span> <span class="nf">input</span><span class="p">().</span><span class="nf">split</span><span class="p">()))</span>
<span class="n">stack</span> <span class="o">=</span> <span class="p">[]</span> <span class="c1"># 타워 담을 스택
</span><span class="n">result</span> <span class="o">=</span> <span class="p">[]</span> <span class="c1"># 결과 출력용
</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="n">N</span><span class="p">):</span>
    <span class="c1"># 스택 타워가 현재 타워보다 낮으면 수신 못해서 의미 없음
</span>    <span class="k">while</span> <span class="n">stack</span> <span class="ow">and</span> <span class="n">stack</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span> <span class="o">&lt;</span> <span class="n">towers</span><span class="p">[</span><span class="n">i</span><span class="p">]:</span>
        <span class="n">stack</span><span class="p">.</span><span class="nf">pop</span><span class="p">()</span>

    <span class="k">if</span> <span class="ow">not</span> <span class="n">stack</span><span class="p">:</span>
        <span class="n">result</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="c1"># 수신 가능함
</span>        <span class="n">result</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">stack</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span>

    <span class="n">stack</span><span class="p">.</span><span class="nf">append</span><span class="p">((</span><span class="n">i</span><span class="p">,</span> <span class="n">towers</span><span class="p">[</span><span class="n">i</span><span class="p">]))</span>

<span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s"> </span><span class="sh">"</span><span class="p">.</span><span class="nf">join</span><span class="p">(</span><span class="nf">map</span><span class="p">(</span><span class="nb">str</span><span class="p">,</span> <span class="n">result</span><span class="p">)))</span>
</code></pre></div></div>

<blockquote>
  <h4 id="채점">채점</h4>
  <hr />
</blockquote>

<p><img src="/assets/images/posts/BOJ/Python/2025-07-02-2493/img02.webp" alt="img02" /></p>

<blockquote>
  <h4 id="반성">반성</h4>
  <hr />
</blockquote>

<p>처음에 파이썬 스택은 어디있지? 컬렉션을 import 해야하나? 하고 찾다가 없다고 해서 당황했다.<br />
그런데 리스트가 기능을 다 지원해준다.<br />
파이썬 너는 다 계획이 있구나!</p>

<blockquote>
  <h4 id="코드-확인">코드 확인</h4>
  <hr />
</blockquote>

<p><a href="https://raw.githubusercontent.com/movingwoo/movingwoo-snippets/refs/heads/main/BOJ/Python/2025-07-02-2493.py">Link to GitHub</a></p>]]></content><author><name>movingwoo</name></author><category term="BOJ/Python/" /><category term="PYTHON" /><category term="알고리즘" /><category term="백준" /><category term="2493" /><category term="탑" /><category term="구현" /><summary type="html"><![CDATA[백준 2493번 탑 PYTHON 문제풀이]]></summary></entry><entry><title type="html">12730번 Saving the Universe (Large)</title><link href="https://movingwoo.com/boj/python/2025/07/02/12730.html" rel="alternate" type="text/html" title="12730번 Saving the Universe (Large)" /><published>2025-07-02T06:00:00+00:00</published><updated>2025-07-02T06:00:00+00:00</updated><id>https://movingwoo.com/boj/python/2025/07/02/12730</id><content type="html" xml:base="https://movingwoo.com/boj/python/2025/07/02/12730.html"><![CDATA[<blockquote>
  <h4 id="이왜틀">이왜틀?</h4>
  <hr />
</blockquote>

<p><img src="/assets/images/posts/BOJ/Python/2025-07-02-12730/img01.webp" alt="img01" /></p>

<p><a href="https://www.acmicpc.net/problem/12730">12730번 Saving the Universe (Large) - 백준</a></p>

<p>이왜틀 마지막 실버문제</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span> <span class="n">n</span><span class="o">=</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
<span class="nc">Map</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">se</span><span class="o">=</span><span class="k">new</span> <span class="nc">HashMap</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span><span class="nc">Integer</span><span class="o">&gt;();</span>
<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span> <span class="n">se</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">(),</span> <span class="mi">0</span><span class="o">);</span>
<span class="kt">int</span> <span class="n">m</span><span class="o">=</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">m</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
    <span class="nc">String</span> <span class="n">c</span><span class="o">=</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">();</span>
    <span class="k">if</span><span class="o">(</span><span class="n">se</span><span class="o">.</span><span class="na">containsKey</span><span class="o">(</span><span class="n">c</span><span class="o">))</span> <span class="n">se</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">c</span><span class="o">,</span> <span class="n">se</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">c</span><span class="o">)+</span><span class="mi">1</span><span class="o">);</span>
<span class="o">}</span>
<span class="kt">int</span> <span class="n">u</span><span class="o">=</span><span class="nc">Integer</span><span class="o">.</span><span class="na">MAX_VALUE</span><span class="o">;</span>
<span class="nc">Iterator</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">e</span><span class="o">=</span><span class="n">se</span><span class="o">.</span><span class="na">keySet</span><span class="o">().</span><span class="na">iterator</span><span class="o">();</span>
<span class="k">while</span><span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">hasNext</span><span class="o">()){</span>
    <span class="nc">String</span> <span class="n">y</span><span class="o">=(</span><span class="nc">String</span><span class="o">)</span><span class="n">e</span><span class="o">.</span><span class="na">next</span><span class="o">();</span>
    <span class="k">if</span><span class="o">(</span><span class="n">se</span><span class="o">.</span><span class="na">containsKey</span><span class="o">(</span><span class="n">y</span><span class="o">)){</span>
        <span class="kt">int</span> <span class="n">v</span><span class="o">=</span><span class="n">se</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">y</span><span class="o">);</span>
        <span class="k">if</span><span class="o">(</span><span class="n">u</span><span class="o">&gt;=</span><span class="n">v</span><span class="o">)</span> <span class="n">u</span><span class="o">=</span><span class="n">v</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
<span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="s">"Case #"</span><span class="o">+</span><span class="n">k</span><span class="o">+</span><span class="s">": "</span><span class="o">+(</span><span class="n">u</span><span class="o">==</span><span class="n">m</span><span class="o">?</span><span class="n">u</span><span class="o">-</span><span class="mi">1</span><span class="o">:</span><span class="n">u</span><span class="o">)+</span><span class="s">"\n"</span><span class="o">);</span>
</code></pre></div></div>

<p>제일 적게 등장한 검색엔진을 이용하려 한건가?<br />
애초에 문제 요건이랑 맞지 않는 것 같다.</p>

<blockquote>
  <h4 id="설계">설계</h4>
  <hr />
</blockquote>

<p>처음에 그리디로 접근했는데<br />
쿼리에 검색엔진이 존재하지 않는 경우도 고려해야하고<br />
탈출 시 조건 걸고 스위칭 횟수 늘리기도 애매하고 해서<br />
<span style="color: orange;"><strong>set을 두고 set이 가득차면 스위칭 횟수를 늘리는 것</strong></span>으로 판별한다.</p>

<blockquote>
  <h4 id="구현">구현</h4>
  <hr />
</blockquote>

<p>사용한 검색엔진 set이 가득차면 카운트 올리고<br />
set을 비우고 해당 검색엔진 하나로 초기화한다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">N</span> <span class="o">=</span> <span class="nf">int</span><span class="p">(</span><span class="nf">input</span><span class="p">())</span>

<span class="k">for</span> <span class="n">t</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="n">N</span> <span class="o">+</span> <span class="mi">1</span><span class="p">):</span>
    <span class="n">S</span> <span class="o">=</span> <span class="nf">int</span><span class="p">(</span><span class="nf">input</span><span class="p">())</span>
    <span class="n">engines</span> <span class="o">=</span> <span class="p">[</span><span class="nf">input</span><span class="p">().</span><span class="nf">strip</span><span class="p">()</span> <span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="n">S</span><span class="p">)]</span>

    <span class="n">Q</span> <span class="o">=</span> <span class="nf">int</span><span class="p">(</span><span class="nf">input</span><span class="p">())</span>
    <span class="n">queries</span> <span class="o">=</span> <span class="p">[</span><span class="nf">input</span><span class="p">().</span><span class="nf">strip</span><span class="p">()</span> <span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="n">Q</span><span class="p">)]</span>

    <span class="c1"># 사용한 검색엔진
</span>    <span class="n">used_engines</span> <span class="o">=</span> <span class="nf">set</span><span class="p">()</span>
    <span class="n">switch</span> <span class="o">=</span> <span class="mi">0</span>

    <span class="k">for</span> <span class="n">query</span> <span class="ow">in</span> <span class="n">queries</span><span class="p">:</span>
        <span class="k">if</span> <span class="n">query</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">used_engines</span><span class="p">:</span>
            <span class="n">used_engines</span><span class="p">.</span><span class="nf">add</span><span class="p">(</span><span class="n">query</span><span class="p">)</span>

            <span class="c1"># 사용한 검색엔진이 가득참 == 스위치 해야함
</span>            <span class="k">if</span> <span class="nf">len</span><span class="p">(</span><span class="n">used_engines</span><span class="p">)</span> <span class="o">==</span> <span class="n">S</span><span class="p">:</span>
                <span class="n">switch</span> <span class="o">+=</span> <span class="mi">1</span>
                <span class="c1"># 초기화
</span>                <span class="n">used_engines</span> <span class="o">=</span> <span class="p">{</span><span class="n">query</span><span class="p">}</span>
                
    <span class="nf">print</span><span class="p">(</span><span class="sa">f</span><span class="sh">"</span><span class="s">Case #</span><span class="si">{</span><span class="n">t</span><span class="si">}</span><span class="s">: </span><span class="si">{</span><span class="n">switch</span><span class="si">}</span><span class="sh">"</span><span class="p">)</span>
</code></pre></div></div>

<blockquote>
  <h4 id="채점">채점</h4>
  <hr />
</blockquote>

<p><img src="/assets/images/posts/BOJ/Python/2025-07-02-12730/img02.webp" alt="img02" /></p>

<blockquote>
  <h4 id="반성">반성</h4>
  <hr />
</blockquote>

<p>실버가 끝났다.<br />
골드부터가 진짜지.</p>

<blockquote>
  <h4 id="코드-확인">코드 확인</h4>
  <hr />
</blockquote>

<p><a href="https://raw.githubusercontent.com/movingwoo/movingwoo-snippets/refs/heads/main/BOJ/Python/2025-07-02-12730.py">Link to GitHub</a></p>]]></content><author><name>movingwoo</name></author><category term="BOJ/Python/" /><category term="PYTHON" /><category term="알고리즘" /><category term="백준" /><category term="12730" /><category term="Saving the Universe (Large)" /><category term="구현" /><summary type="html"><![CDATA[백준 12730번 Saving the Universe (Large) PYTHON 문제풀이]]></summary></entry><entry><title type="html">11973번 Angry Cows (Silver)</title><link href="https://movingwoo.com/boj/python/2025/07/02/11973.html" rel="alternate" type="text/html" title="11973번 Angry Cows (Silver)" /><published>2025-07-02T04:00:00+00:00</published><updated>2025-07-02T04:00:00+00:00</updated><id>https://movingwoo.com/boj/python/2025/07/02/11973</id><content type="html" xml:base="https://movingwoo.com/boj/python/2025/07/02/11973.html"><![CDATA[<blockquote>
  <h4 id="이왜틀">이왜틀?</h4>
  <hr />
</blockquote>

<p><a href="https://www.acmicpc.net/problem/11973">11973번 Angry Cows (Silver) - 백준</a></p>

<p>아 이 문제 그거다.<br />
골드 풀고 소스 그대로 집어넣었다가 틀린 문제.<br />
골드랑 완전히 다른 문제라 틀린 문제다.</p>

<p>그냥 새로 풀어야한다는 뜻</p>

<blockquote>
  <h4 id="번역">번역</h4>
  <hr />
</blockquote>

<p>골드랑 비슷한데 조금 다르다.</p>

<p>소를 날리면 반지름 R 범위 내 건초더미를 폭발시킨다.<br />
K마리의 소를 날려 N개의 건초더미를 터뜨릴때 필요한 힘 R의 최소 값을 구하는 문제.</p>

<blockquote>
  <h4 id="설계">설계</h4>
  <hr />
</blockquote>

<p>건초더미를 정렬해서 힘 R의 소를 날린다.<br />
x위치에 떨어졌을 경우 x - R, x + R 건초더미를 터칠 때 K마리가 되는지 확인한다.</p>

<blockquote>
  <h4 id="구현">구현</h4>
  <hr />
</blockquote>

<p><span style="color: orange;"><strong>정렬 후 이분탐색</strong></span>을 진행한다.<br />
유효성 검증 시 제일 왼쪽 건초더미를 폭발의 제일 왼쪽 기준점으로 잡고 K마리 이하의 소가 필요한지 확인한다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">isValid</span><span class="p">(</span><span class="n">R</span><span class="p">):</span>
    <span class="n">count</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="n">idx</span> <span class="o">=</span> <span class="mi">0</span>

    <span class="k">while</span> <span class="n">idx</span> <span class="o">&lt;</span> <span class="n">N</span><span class="p">:</span>
        <span class="n">count</span> <span class="o">+=</span> <span class="mi">1</span>
        <span class="c1"># 힘 R로 터질 때 현재 건초더미를 제일 왼쪽으로 두고 2 * R 만큼 오른쪽
</span>        <span class="n">explode</span> <span class="o">=</span> <span class="n">haybales</span><span class="p">[</span><span class="n">idx</span><span class="p">]</span> <span class="o">+</span> <span class="p">(</span><span class="mi">2</span> <span class="o">*</span> <span class="n">R</span><span class="p">)</span>

        <span class="k">while</span> <span class="n">idx</span> <span class="o">&lt;</span> <span class="n">N</span> <span class="ow">and</span> <span class="n">haybales</span><span class="p">[</span><span class="n">idx</span><span class="p">]</span> <span class="o">&lt;=</span> <span class="n">explode</span><span class="p">:</span>
            <span class="n">idx</span> <span class="o">+=</span> <span class="mi">1</span>
    
    <span class="c1"># K마리 이하로 날렸으면 true
</span>    <span class="k">return</span> <span class="n">count</span> <span class="o">&lt;=</span> <span class="n">K</span>

<span class="n">N</span><span class="p">,</span> <span class="n">K</span> <span class="o">=</span> <span class="nf">map</span><span class="p">(</span><span class="nb">int</span><span class="p">,</span> <span class="nf">input</span><span class="p">().</span><span class="nf">split</span><span class="p">())</span>

<span class="n">haybales</span> <span class="o">=</span> <span class="p">[</span><span class="nf">int</span><span class="p">(</span><span class="nf">input</span><span class="p">())</span> <span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="n">N</span><span class="p">)]</span>
<span class="n">haybales</span><span class="p">.</span><span class="nf">sort</span><span class="p">()</span>

<span class="n">left</span> <span class="o">=</span> <span class="mi">0</span>
<span class="n">right</span> <span class="o">=</span> <span class="mi">1000000000</span>
<span class="n">R</span> <span class="o">=</span> <span class="mi">0</span>

<span class="k">while</span> <span class="n">left</span> <span class="o">&lt;=</span> <span class="n">right</span><span class="p">:</span>
    <span class="n">mid</span> <span class="o">=</span> <span class="p">(</span><span class="n">left</span> <span class="o">+</span> <span class="n">right</span><span class="p">)</span> <span class="o">//</span> <span class="mi">2</span>

    <span class="k">if</span> <span class="nf">isValid</span><span class="p">(</span><span class="n">mid</span><span class="p">):</span>
        <span class="n">R</span> <span class="o">=</span> <span class="n">mid</span>
        <span class="n">right</span> <span class="o">=</span> <span class="n">mid</span> <span class="o">-</span> <span class="mi">1</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="n">left</span> <span class="o">=</span> <span class="n">mid</span> <span class="o">+</span> <span class="mi">1</span>

<span class="nf">print</span><span class="p">(</span><span class="n">R</span><span class="p">)</span>
</code></pre></div></div>

<blockquote>
  <h4 id="채점">채점</h4>
  <hr />
</blockquote>

<p><img src="/assets/images/posts/BOJ/Python/2025-07-02-11973/img01.webp" alt="img01" /></p>

<p>2번 제출했는데 첫 번째 제출은 틀린 코드가 통과했다.<br />
이분 탐색 범위를 haybales 범위로 잡아서 틀려야할 코드인데 테스트케이스가 부족했는지 통과해버렸다.</p>

<p>반례 데이터는 아래와 같다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Input
</span><span class="mi">5</span> <span class="mi">1</span>
<span class="mi">100</span>
<span class="mi">101</span>
<span class="mi">102</span>
<span class="mi">103</span>
<span class="mi">104</span>

<span class="c1"># Answer
</span><span class="mi">2</span>

<span class="c1"># Output
</span><span class="mi">100</span>
</code></pre></div></div>

<blockquote>
  <h4 id="반성">반성</h4>
  <hr />
</blockquote>

<p>틀린 코드가 통과해서 자기 코드 저격해보는건 또 첫 경험이다.<br />
신선하고 즐거운걸?</p>

<blockquote>
  <h4 id="코드-확인">코드 확인</h4>
  <hr />
</blockquote>

<p><a href="https://raw.githubusercontent.com/movingwoo/movingwoo-snippets/refs/heads/main/BOJ/Python/2025-07-02-11973.py">Link to GitHub</a></p>]]></content><author><name>movingwoo</name></author><category term="BOJ/Python/" /><category term="PYTHON" /><category term="알고리즘" /><category term="백준" /><category term="11973" /><category term="Angry Cows (Silver)" /><category term="이분탐색" /><summary type="html"><![CDATA[백준 11973번 Angry Cows (Silver) PYTHON 문제풀이]]></summary></entry><entry><title type="html">16194번 카드 구매하기 2</title><link href="https://movingwoo.com/boj/python/2025/07/02/16194.html" rel="alternate" type="text/html" title="16194번 카드 구매하기 2" /><published>2025-07-02T02:00:00+00:00</published><updated>2025-07-02T02:00:00+00:00</updated><id>https://movingwoo.com/boj/python/2025/07/02/16194</id><content type="html" xml:base="https://movingwoo.com/boj/python/2025/07/02/16194.html"><![CDATA[<blockquote>
  <h4 id="이왜틀">이왜틀?</h4>
  <hr />
</blockquote>

<p><img src="/assets/images/posts/BOJ/Python/2025-07-02-16194/img01.webp" alt="img01" /></p>

<p><a href="https://www.acmicpc.net/problem/16194">16194번 카드 구매하기 2 - 백준</a></p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span> <span class="n">n</span><span class="o">=</span><span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
<span class="kt">int</span><span class="o">[]</span> <span class="n">pack</span><span class="o">=</span><span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">n</span><span class="o">+</span><span class="mi">1</span><span class="o">];</span>
<span class="kt">int</span><span class="o">[]</span> <span class="n">arr</span><span class="o">=</span><span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">n</span><span class="o">+</span><span class="mi">1</span><span class="o">];</span>
<span class="nc">StringTokenizer</span> <span class="n">st</span><span class="o">=</span><span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">(),</span><span class="s">" "</span><span class="o">);</span>
<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="n">n</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
    <span class="n">pack</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
<span class="o">}</span>
<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="n">n</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
    <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span><span class="n">j</span><span class="o">&lt;=</span><span class="n">i</span><span class="o">;</span><span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
        <span class="n">arr</span><span class="o">[</span><span class="n">i</span><span class="o">]=</span><span class="nc">Math</span><span class="o">.</span><span class="na">max</span><span class="o">(</span><span class="n">arr</span><span class="o">[</span><span class="n">i</span><span class="o">],</span><span class="n">arr</span><span class="o">[</span><span class="n">i</span><span class="o">-</span><span class="n">j</span><span class="o">]+</span><span class="n">pack</span><span class="o">[</span><span class="n">j</span><span class="o">]);</span>
    <span class="o">}</span>
<span class="o">}</span>
<span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">arr</span><span class="o">[</span><span class="n">n</span><span class="o">]+</span><span class="s">""</span><span class="o">);</span>
</code></pre></div></div>

<p>최소 비용을 구해야하는데 왜 Math.max를 쓴거지?</p>

<blockquote>
  <h4 id="설계">설계</h4>
  <hr />
</blockquote>

<p>점화식은 다 짜두었으니 그대로 가져가서 쓰되, <span style="color: orange;"><strong>min</strong></span>을 쓰도록 한다.</p>

<blockquote>
  <h4 id="구현">구현</h4>
  <hr />
</blockquote>

<p>인덱스 범위에 주의한다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">N</span> <span class="o">=</span> <span class="nf">int</span><span class="p">(</span><span class="nf">input</span><span class="p">())</span>

<span class="n">pack</span> <span class="o">=</span> <span class="nf">list</span><span class="p">(</span><span class="nf">map</span><span class="p">(</span><span class="nb">int</span><span class="p">,</span> <span class="nf">input</span><span class="p">().</span><span class="nf">split</span><span class="p">()))</span>
<span class="c1"># 대충 큰 값
</span><span class="n">dp</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1000000</span><span class="p">]</span> <span class="o">*</span> <span class="p">(</span><span class="n">N</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span>
<span class="n">dp</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span>

<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="n">N</span> <span class="o">+</span> <span class="mi">1</span><span class="p">):</span>
    <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="n">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">):</span>
        <span class="n">dp</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="nf">min</span><span class="p">(</span><span class="n">dp</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="n">dp</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="n">j</span><span class="p">]</span> <span class="o">+</span> <span class="n">pack</span><span class="p">[</span><span class="n">j</span> <span class="o">-</span> <span class="mi">1</span><span class="p">])</span>

<span class="nf">print</span><span class="p">(</span><span class="n">dp</span><span class="p">[</span><span class="n">N</span><span class="p">])</span>
</code></pre></div></div>

<blockquote>
  <h4 id="채점">채점</h4>
  <hr />
</blockquote>

<p><img src="/assets/images/posts/BOJ/Python/2025-07-02-16194/img02.webp" alt="img02" /></p>

<blockquote>
  <h4 id="반성">반성</h4>
  <hr />
</blockquote>

<p>5년 전 나는 DP 개념을 몰랐을 텐데 나름 점화식을 작성해 풀려고 노력한 모습이 보인다.<br />
장하다 과거의 나</p>

<blockquote>
  <h4 id="코드-확인">코드 확인</h4>
  <hr />
</blockquote>

<p><a href="https://raw.githubusercontent.com/movingwoo/movingwoo-snippets/refs/heads/main/BOJ/Python/2025-07-02-16194.py">Link to GitHub</a></p>]]></content><author><name>movingwoo</name></author><category term="BOJ/Python/" /><category term="PYTHON" /><category term="알고리즘" /><category term="백준" /><category term="16194" /><category term="카드 구매하기 2" /><category term="DP" /><summary type="html"><![CDATA[백준 16194번 카드 구매하기 2 PYTHON 문제풀이]]></summary></entry></feed>